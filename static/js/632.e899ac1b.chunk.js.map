{"version":3,"file":"static/js/632.e899ac1b.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/AccountTree.js","features/projects/components/MyProjectsList.js","../node_modules/@mui/icons-material/esm/PriorityHigh.js","../node_modules/@mui/icons-material/esm/Schedule.js","components/ui/UnifiedHeader.js","../node_modules/@mui/icons-material/esm/Build.js","../node_modules/@mui/icons-material/esm/Carpenter.js","../node_modules/@mui/icons-material/esm/ElectricalServices.js","../node_modules/@mui/icons-material/esm/Engineering.js","features/projects/components/ProjectsList.js","features/projects/components/ProjectsTableView.js","../node_modules/@mui/icons-material/esm/CalendarToday.js","../node_modules/@mui/icons-material/esm/Warning.js","components/ui/UnifiedFilters.js","../node_modules/@mui/icons-material/esm/Flag.js","../node_modules/@mui/icons-material/esm/PlayArrow.js","../node_modules/@mui/icons-material/esm/CheckCircle.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');","import React, { useState, useMemo } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  Avatar,\n  IconButton,\n  LinearProgress,\n  Paper,\n  Divider\n} from '@mui/material';\nimport { \n  Assignment, \n  CheckCircle,\n  Flag,\n  Warning,\n  PriorityHigh,\n  Schedule,\n  PlayArrow,\n  Visibility as ViewIcon,\n  Edit as EditIcon\n} from '@mui/icons-material';\nimport UnifiedHeader from '../../../components/ui/UnifiedHeader';\nimport UnifiedFilters from '../../../components/ui/UnifiedFilters';\nimport ProjectsList from './ProjectsList';\nimport ProjectsTableView from './ProjectsTableView';\n\nconst MyProjectsList = ({ \n  projects, \n  tasks, \n  clients = [], \n  teamMembers = [],\n  onDeleteProject,\n  onEditProject,\n  onViewProject,\n  onManageScope,\n  onViewTask,\n  onEditTask,\n  onUpdateTask,\n  currentUserId = 1008 // Default to a specific user ID\n}) => {\n  const [searchValue, setSearchValue] = useState('');\n  const [showFilters, setShowFilters] = useState(false);\n  const [viewMode, setViewMode] = useState('card');\n  const [filters, setFilters] = useState({\n    status: '',\n    type: '',\n    client: '',\n    startDateFrom: null,\n    startDateTo: null,\n    endDateFrom: null,\n    endDateTo: null,\n    budgetFrom: '',\n    budgetTo: ''\n  });\n\n  // Filter projects to only show user's projects\n  const myProjects = projects.filter(p => p.projectManager === currentUserId);\n  \n  // Filter tasks assigned to the current user\n  const myTasks = tasks.filter(t => t.assignedTo === currentUserId);\n\n  // Filter configuration\n  const filterConfig = [\n    {\n      key: 'status',\n      label: 'Status',\n      type: 'select',\n      options: [\n        { value: 'on-tender', label: 'On Tender' },\n        { value: 'awarded', label: 'Awarded' },\n        { value: 'on-hold', label: 'On Hold' },\n        { value: 'not-awarded', label: 'Not Awarded' },\n        { value: 'active', label: 'Active' },\n        { value: 'completed', label: 'Completed' }\n      ]\n    },\n    {\n      key: 'type',\n      label: 'Type',\n      type: 'select',\n      options: [\n        { value: 'general-contractor', label: 'General Contractor' },\n        { value: 'millwork', label: 'Millwork' },\n        { value: 'electrical', label: 'Electrical' },\n        { value: 'mep', label: 'MEP' },\n        { value: 'management', label: 'Management' }\n      ]\n    },\n    {\n      key: 'client',\n      label: 'Client',\n      type: 'select',\n      options: clients.map(c => ({ value: c.id, label: c.companyName }))\n    },\n    {\n      key: 'startDateFrom',\n      label: 'Start Date From',\n      type: 'date'\n    },\n    {\n      key: 'startDateTo',\n      label: 'Start Date To',\n      type: 'date'\n    },\n    {\n      key: 'endDateFrom',\n      label: 'End Date From',\n      type: 'date'\n    },\n    {\n      key: 'endDateTo',\n      label: 'End Date To',\n      type: 'date'\n    },\n    {\n      key: 'budgetFrom',\n      label: 'Budget From',\n      type: 'number',\n      placeholder: 'Min budget'\n    },\n    {\n      key: 'budgetTo',\n      label: 'Budget To',\n      type: 'number',\n      placeholder: 'Max budget'\n    }\n  ];\n\n  // Quick filters\n  const quickFilters = [\n    {\n      label: 'Active Projects',\n      filters: { status: 'active' }\n    },\n    {\n      label: 'On Tender',\n      filters: { status: 'on-tender' }\n    },\n    {\n      label: 'This Month',\n      filters: {\n        startDateFrom: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\n        startDateTo: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)\n      }\n    },\n    {\n      label: 'Overdue',\n      filters: {} // Will implement custom logic\n    }\n  ];\n\n  // Filtered and sorted projects\n  const filteredAndSortedProjects = useMemo(() => {\n    let filtered = myProjects.filter(project => {\n      // Search filter\n      const searchLower = searchValue.toLowerCase();\n      const matchesSearch = !searchValue || \n        project.name.toLowerCase().includes(searchLower) ||\n        (project.description && project.description.toLowerCase().includes(searchLower));\n\n      // Basic filters\n      const matchesStatus = !filters.status || project.status === filters.status;\n      const matchesType = !filters.type || project.type === filters.type;\n      const matchesClient = !filters.client || project.clientId === parseInt(filters.client);\n\n      // Date range filters\n      const projectStartDate = project.startDate ? new Date(project.startDate) : null;\n      const projectEndDate = project.endDate ? new Date(project.endDate) : null;\n      \n      const matchesStartDateFrom = !filters.startDateFrom || \n        (projectStartDate && projectStartDate >= filters.startDateFrom);\n      const matchesStartDateTo = !filters.startDateTo || \n        (projectStartDate && projectStartDate <= filters.startDateTo);\n      const matchesEndDateFrom = !filters.endDateFrom || \n        (projectEndDate && projectEndDate >= filters.endDateFrom);\n      const matchesEndDateTo = !filters.endDateTo || \n        (projectEndDate && projectEndDate <= filters.endDateTo);\n\n      // Budget range filters\n      const projectBudget = project.budget ? parseFloat(project.budget) : 0;\n      const matchesBudgetFrom = !filters.budgetFrom || \n        projectBudget >= parseFloat(filters.budgetFrom);\n      const matchesBudgetTo = !filters.budgetTo || \n        projectBudget <= parseFloat(filters.budgetTo);\n\n      return matchesSearch && \n             matchesStatus && \n             matchesType && \n             matchesClient && \n             matchesStartDateFrom &&\n             matchesStartDateTo &&\n             matchesEndDateFrom &&\n             matchesEndDateTo &&\n             matchesBudgetFrom &&\n             matchesBudgetTo;\n    });\n\n    return filtered;\n  }, [myProjects, searchValue, filters]);\n\n  // Get active filters for display\n  const activeFilters = Object.entries(filters)\n    .filter(([key, value]) => {\n      if (typeof value === 'string') return value !== '';\n      if (value instanceof Date) return true;\n      return value !== null && value !== undefined;\n    })\n    .map(([key, value]) => ({\n      key,\n      label: filterConfig.find(f => f.key === key)?.label || key,\n      value: value instanceof Date ? value.toLocaleDateString() : value\n    }));\n\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      status: '',\n      type: '',\n      client: '',\n      startDateFrom: null,\n      startDateTo: null,\n      endDateFrom: null,\n      endDateTo: null,\n      budgetFrom: '',\n      budgetTo: ''\n    });\n  };\n\n  const handleClearFilter = (key) => {\n    if (key === 'all') {\n      handleClearFilters();\n    } else if (key.includes('Date')) {\n      setFilters(prev => ({ ...prev, [key]: null }));\n    } else {\n      setFilters(prev => ({ ...prev, [key]: '' }));\n    }\n  };\n\n  const handleApplyQuickFilter = (quickFilter) => {\n    setFilters(prev => ({ ...prev, ...quickFilter.filters }));\n  };\n\n  const handleExport = () => {\n    // Implement export functionality if needed\n    console.log('Export my projects:', filteredAndSortedProjects);\n  };\n\n  // Task helper functions\n  const priorityConfig = {\n    low: { label: 'Low', color: '#27ae60', bgColor: '#eafaf1', icon: <Flag /> },\n    medium: { label: 'Medium', color: '#f39c12', bgColor: '#fef9e7', icon: <Flag /> },\n    high: { label: 'High', color: '#e67e22', bgColor: '#fef5e7', icon: <Warning /> },\n    urgent: { label: 'Urgent', color: '#e74c3c', bgColor: '#fdf2f2', icon: <PriorityHigh /> }\n  };\n\n  const statusConfig = {\n    pending: { label: 'To Do', color: '#f39c12', bgColor: '#fef9e7', icon: <Schedule /> },\n    'in-progress': { label: 'In Progress', color: '#3498db', bgColor: '#ebf5fb', icon: <PlayArrow /> },\n    'in_progress': { label: 'In Progress', color: '#3498db', bgColor: '#ebf5fb', icon: <PlayArrow /> },\n    completed: { label: 'Done', color: '#27ae60', bgColor: '#eafaf1', icon: <CheckCircle /> }\n  };\n\n  const getProjectName = (projectId) => {\n    const project = projects.find(p => p.id === projectId);\n    return project ? project.name : 'Unknown Project';\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric',\n      year: date.getFullYear() !== new Date().getFullYear() ? 'numeric' : undefined\n    });\n  };\n\n  const isOverdue = (task) => {\n    if (task.status === 'completed') return false;\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return new Date(task.dueDate) < today;\n  };\n\n  if (myProjects.length === 0 && myTasks.length === 0) {\n    return (\n      <Box>\n        <UnifiedHeader\n          title=\"My Work\"\n          searchValue={searchValue}\n          onSearchChange={setSearchValue}\n          showFilters={showFilters}\n          onToggleFilters={() => setShowFilters(!showFilters)}\n          activeFiltersCount={activeFilters.length}\n          viewMode={viewMode}\n          onViewModeChange={setViewMode}\n          onExport={handleExport}\n          showAdd={false} // No add button for My Work\n          activeFilters={activeFilters}\n          onClearFilter={handleClearFilter}\n        />\n        <Box sx={{ textAlign: 'center', py: 4 }}>\n          <Assignment sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            No projects or tasks assigned to you yet.\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      {/* Unified Header */}\n      <UnifiedHeader\n        title={`My Work`}\n        subtitle={`${filteredAndSortedProjects.length} projects • ${myTasks.length} tasks`}\n        searchValue={searchValue}\n        onSearchChange={setSearchValue}\n        showFilters={showFilters}\n        onToggleFilters={() => setShowFilters(!showFilters)}\n        activeFiltersCount={activeFilters.length}\n        viewMode={viewMode}\n        onViewModeChange={setViewMode}\n        onExport={handleExport}\n        showAdd={false} // No add button for My Work\n        activeFilters={activeFilters}\n        onClearFilter={handleClearFilter}\n      />\n\n      {/* Unified Filters */}\n      <UnifiedFilters\n        show={showFilters}\n        filters={filters}\n        onFilterChange={handleFilterChange}\n        onClearFilters={handleClearFilters}\n        onApplyQuickFilter={handleApplyQuickFilter}\n        filterConfig={filterConfig}\n        quickFilters={quickFilters}\n      />\n\n      {/* My Tasks Section */}\n      {myTasks.length > 0 && (\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600, color: '#2C3E50' }}>\n            📋 My Tasks ({myTasks.length})\n          </Typography>\n          <Grid container spacing={2}>\n            {myTasks.slice(0, 6).map((task) => {\n              const priority = priorityConfig[task.priority] || priorityConfig.medium;\n              const status = statusConfig[task.status] || statusConfig.pending;\n              const taskOverdue = isOverdue(task);\n              \n              return (\n                <Grid item xs={12} sm={6} md={4} key={task.id}>\n                  <Card\n                    elevation={0}\n                    sx={{\n                      border: '1px solid #E9ECEF',\n                      borderRadius: 2,\n                      borderLeft: `4px solid ${priority.color}`,\n                      '&:hover': {\n                        boxShadow: 2,\n                        transform: 'translateY(-2px)'\n                      },\n                      transition: 'all 0.2s ease'\n                    }}\n                  >\n                    <CardContent sx={{ p: 2 }}>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 1 }}>\n                        <Typography variant=\"body1\" sx={{ fontWeight: 600, flex: 1 }}>\n                          {task.name}\n                        </Typography>\n                        <Chip\n                          size=\"small\"\n                          label={status.label}\n                          sx={{\n                            backgroundColor: status.bgColor,\n                            color: status.color,\n                            fontWeight: 600,\n                            ml: 1\n                          }}\n                        />\n                      </Box>\n                      \n                      {task.description && (\n                        <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 1.5 }}>\n                          {task.description}\n                        </Typography>\n                      )}\n                      \n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                        <Chip\n                          size=\"small\"\n                          label={getProjectName(task.projectId)}\n                          sx={{ backgroundColor: '#F8F9FA', color: '#7F8C8D' }}\n                        />\n                        <Chip\n                          size=\"small\"\n                          label={priority.label}\n                          sx={{\n                            backgroundColor: priority.bgColor,\n                            color: priority.color,\n                            fontWeight: 600\n                          }}\n                        />\n                      </Box>\n                      \n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                        <Typography \n                          variant=\"caption\" \n                          sx={{ \n                            color: taskOverdue ? '#e74c3c' : 'text.secondary',\n                            fontWeight: taskOverdue ? 600 : 400\n                          }}\n                        >\n                          Due: {formatDate(task.dueDate)}\n                          {taskOverdue && ' (Overdue)'}\n                        </Typography>\n                        <Box sx={{ display: 'flex', gap: 0.5 }}>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => onViewTask && onViewTask(task)}\n                            sx={{ color: '#3498db' }}\n                          >\n                            <ViewIcon fontSize=\"small\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => onEditTask && onEditTask(task)}\n                            sx={{ color: '#f39c12' }}\n                          >\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Box>\n                      </Box>\n                      \n                      {task.progress !== undefined && task.progress > 0 && (\n                        <Box sx={{ mt: 1 }}>\n                          <LinearProgress\n                            variant=\"determinate\"\n                            value={task.progress}\n                            sx={{ \n                              height: 6,\n                              borderRadius: 3,\n                              backgroundColor: '#E9ECEF'\n                            }}\n                          />\n                          <Typography variant=\"caption\" sx={{ mt: 0.5, display: 'block' }}>\n                            {task.progress}% complete\n                          </Typography>\n                        </Box>\n                      )}\n                    </CardContent>\n                  </Card>\n                </Grid>\n              );\n            })}\n          </Grid>\n          {myTasks.length > 6 && (\n            <Box sx={{ textAlign: 'center', mt: 2 }}>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Showing 6 of {myTasks.length} tasks. View all tasks in the Tasks section.\n              </Typography>\n            </Box>\n          )}\n        </Box>\n      )}\n\n      {/* My Projects Section */}\n      {myProjects.length > 0 && (\n        <Box>\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600, color: '#2C3E50' }}>\n            🎯 My Projects ({filteredAndSortedProjects.length})\n          </Typography>\n\n          {/* Projects Table View */}\n          {viewMode === 'table' && (\n            <ProjectsTableView\n              projects={filteredAndSortedProjects}\n              clients={clients}\n              teamMembers={teamMembers}\n              onEditProject={onEditProject}\n              onDeleteProject={onDeleteProject}\n              onViewProject={onViewProject}\n              onManageScope={onManageScope}\n            />\n          )}\n\n          {/* Projects Card View */}\n          {viewMode === 'card' && (\n            <ProjectsList \n              projects={filteredAndSortedProjects}\n              tasks={tasks}\n              clients={clients}\n              onDeleteProject={onDeleteProject}\n            />\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default MyProjectsList;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"19\",\n  r: \"2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 3h4v12h-4z\"\n}, \"1\")], 'PriorityHigh');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'Schedule');","import React from 'react';\nimport {\n  Box,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Chip,\n  Typography,\n  Tooltip,\n  Badge\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  Clear as ClearIcon,\n  FilterList as FilterIcon,\n  ViewList as TableViewIcon,\n  ViewModule as CardViewIcon,\n  FileDownload as ExportIcon,\n  Add as AddIcon\n} from '@mui/icons-material';\n\nconst UnifiedHeader = ({\n  title,\n  searchValue,\n  onSearchChange,\n  showFilters,\n  onToggleFilters,\n  activeFiltersCount,\n  viewMode,\n  onViewModeChange,\n  onExport,\n  onAdd,\n  addButtonText = \"Add New\",\n  exportButtonText = \"Export\",\n  showAdd = true,\n  showExport = true,\n  showViewToggle = true,\n  activeFilters = [],\n  onClearFilter\n}) => {\n  const handleClearSearch = () => {\n    onSearchChange('');\n  };\n\n  return (\n    <Box sx={{ mb: 3 }}>\n      {/* Title and Controls Row */}\n      <Box \n        sx={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center',\n          mb: 2,\n          flexWrap: 'wrap',\n          gap: 2\n        }}\n      >\n        <Typography variant=\"h5\" component=\"h2\" sx={{ fontWeight: 600 }}>\n          {title}\n        </Typography>\n        \n        <Box sx={{ display: 'flex', gap: 1, alignItems: 'center', flexWrap: 'wrap' }}>\n          {showViewToggle && (\n            <Box sx={{ display: 'flex', border: 1, borderColor: 'divider', borderRadius: 1 }}>\n              <Tooltip title=\"Card View\">\n                <IconButton\n                  size=\"small\"\n                  onClick={() => onViewModeChange('card')}\n                  sx={{\n                    color: viewMode === 'card' ? 'primary.main' : 'text.secondary',\n                    backgroundColor: viewMode === 'card' ? 'action.selected' : 'transparent',\n                    borderRadius: '4px 0 0 4px'\n                  }}\n                >\n                  <CardViewIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Table View\">\n                <IconButton\n                  size=\"small\"\n                  onClick={() => onViewModeChange('table')}\n                  sx={{\n                    color: viewMode === 'table' ? 'primary.main' : 'text.secondary',\n                    backgroundColor: viewMode === 'table' ? 'action.selected' : 'transparent',\n                    borderRadius: '0 4px 4px 0'\n                  }}\n                >\n                  <TableViewIcon />\n                </IconButton>\n              </Tooltip>\n            </Box>\n          )}\n          \n          {showExport && (\n            <Button\n              variant=\"outlined\"\n              startIcon={<ExportIcon />}\n              onClick={onExport}\n              size=\"small\"\n            >\n              {exportButtonText}\n            </Button>\n          )}\n          \n          {showAdd && (\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={onAdd}\n              size=\"small\"\n            >\n              {addButtonText}\n            </Button>\n          )}\n        </Box>\n      </Box>\n\n      {/* Search and Filter Controls Row */}\n      <Box \n        sx={{ \n          display: 'flex', \n          gap: 2, \n          alignItems: 'center',\n          mb: 2,\n          flexWrap: 'wrap'\n        }}\n      >\n        {/* Search Field */}\n        <TextField\n          placeholder={`Search ${title.toLowerCase()}...`}\n          value={searchValue}\n          onChange={(e) => onSearchChange(e.target.value)}\n          size=\"small\"\n          sx={{ \n            minWidth: 300,\n            flexGrow: 1,\n            maxWidth: 400\n          }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon color=\"action\" />\n              </InputAdornment>\n            ),\n            endAdornment: searchValue && (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  size=\"small\"\n                  onClick={handleClearSearch}\n                  edge=\"end\"\n                >\n                  <ClearIcon />\n                </IconButton>\n              </InputAdornment>\n            )\n          }}\n        />\n\n        {/* Filter Toggle Button */}\n        <Badge badgeContent={activeFiltersCount} color=\"primary\">\n          <Button\n            variant={showFilters ? \"contained\" : \"outlined\"}\n            startIcon={<FilterIcon />}\n            onClick={onToggleFilters}\n            size=\"small\"\n          >\n            Filters\n          </Button>\n        </Badge>\n      </Box>\n\n      {/* Active Filters Display */}\n      {activeFilters.length > 0 && (\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2, alignItems: 'center' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mr: 1, alignSelf: 'center' }}>\n            Active filters:\n          </Typography>\n          {activeFilters.map((filter, index) => (\n            <Chip\n              key={index}\n              label={`${filter.label}: ${filter.value}`}\n              size=\"small\"\n              onDelete={() => onClearFilter && onClearFilter(filter.key)}\n              color=\"primary\"\n              variant=\"outlined\"\n            />\n          ))}\n          {activeFilters.length > 1 && (\n            <Button\n              size=\"small\"\n              onClick={() => onClearFilter && onClearFilter('all')}\n              sx={{ \n                color: 'error.main',\n                textTransform: 'none',\n                fontSize: '0.75rem',\n                minWidth: 'auto',\n                px: 1\n              }}\n            >\n              Clear All\n            </Button>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default UnifiedHeader;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m22.7 19-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4\"\n}), 'Build');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.73 14.23 7 1.5 3.11 5.39l8.13 11.67c-.78.78-.78 2.05 0 2.83l1.41 1.41c.78.78 2.05.78 2.83 0l4.24-4.24c.79-.78.79-2.05.01-2.83m-5.66 5.65-1.41-1.41 4.24-4.24 1.41 1.41z\"\n}), 'Carpenter');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 14c0-.55-.45-1-1-1h-2v2h2c.55 0 1-.45 1-1m-1 3h-2v2h2c.55 0 1-.45 1-1s-.45-1-1-1m-8-3h-2v4h2c0 1.1.9 2 2 2h3v-8h-3c-1.1 0-2 .9-2 2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13c0-1.1.9-2 2-2h1.5c1.93 0 3.5-1.57 3.5-3.5S10.43 4 8.5 4H5c-.55 0-1 .45-1 1s.45 1 1 1h3.5c.83 0 1.5.67 1.5 1.5S9.33 9 8.5 9H7c-2.21 0-4 1.79-4 4s1.79 4 4 4h2v-2H7c-1.1 0-2-.9-2-2\"\n}, \"1\")], 'ElectricalServices');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 15c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4m13.1-8.16c.01-.11.02-.22.02-.34s-.01-.23-.03-.34l.74-.58c.07-.05.08-.15.04-.22l-.7-1.21c-.04-.08-.14-.1-.21-.08l-.86.35c-.18-.14-.38-.25-.59-.34l-.13-.93c-.02-.09-.09-.15-.18-.15h-1.4c-.09 0-.16.06-.17.15l-.13.93c-.21.09-.41.21-.59.34l-.87-.35c-.08-.03-.17 0-.21.08l-.7 1.21c-.04.08-.03.17.04.22l.74.58c-.02.11-.03.23-.03.34s.01.23.03.34l-.74.58c-.07.05-.08.15-.04.22l.7 1.21c.04.08.14.1.21.08l.87-.35c.18.14.38.25.59.34l.13.93c.01.09.08.15.17.15h1.4c.09 0 .16-.06.17-.15l.13-.93c.21-.09.41-.21.59-.34l.87.35c.08.03.17 0 .21-.08l.7-1.21c.04-.08.03-.17-.04-.22zm-2.6.91c-.69 0-1.25-.56-1.25-1.25s.56-1.25 1.25-1.25 1.25.56 1.25 1.25-.56 1.25-1.25 1.25m.42 3.93-.5-.87c-.03-.06-.1-.08-.15-.06l-.62.25q-.195-.15-.42-.24l-.09-.66c-.02-.06-.08-.1-.14-.1h-1c-.06 0-.11.04-.12.11l-.09.66c-.15.06-.29.15-.42.24l-.62-.25c-.06-.02-.12 0-.15.06l-.5.87c-.03.06-.02.12.03.16l.53.41c-.01.08-.02.16-.02.24s.01.17.02.24l-.53.41c-.05.04-.06.11-.03.16l.5.87c.03.06.1.08.15.06l.62-.25q.195.15.42.24l.09.66c.01.07.06.11.12.11h1c.06 0 .12-.04.12-.11l.09-.66c.15-.06.29-.15.42-.24l.62.25c.06.02.12 0 .15-.06l.5-.87c.03-.06.02-.12-.03-.16l-.52-.41c.01-.08.02-.16.02-.24s-.01-.17-.02-.24l.53-.41c.05-.04.06-.11.04-.17m-2.42 1.65c-.46 0-.83-.38-.83-.83 0-.46.38-.83.83-.83s.83.38.83.83c0 .46-.37.83-.83.83M4.74 9h8.53c.27 0 .49-.22.49-.49v-.02c0-.27-.22-.49-.49-.49H13c0-1.48-.81-2.75-2-3.45v.95c0 .28-.22.5-.5.5s-.5-.22-.5-.5V4.14C9.68 4.06 9.35 4 9 4s-.68.06-1 .14V5.5c0 .28-.22.5-.5.5S7 5.78 7 5.5v-.95C5.81 5.25 5 6.52 5 8h-.26c-.27 0-.49.22-.49.49v.03c0 .26.22.48.49.48M9 13c1.86 0 3.41-1.28 3.86-3H5.14c.45 1.72 2 3 3.86 3\"\n}), 'Engineering');","import React from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  Button\r\n} from '@mui/material';\r\nimport {\r\n  Build,\r\n  Carpenter,\r\n  ElectricalServices,\r\n  Engineering,\r\n  CalendarToday,\r\n  Delete,\r\n  Business\r\n} from '@mui/icons-material';\r\n\r\nconst projectTypeConfig = {\r\n  'general-contractor': {\r\n    label: 'General Contractor',\r\n    icon: <Build />,\r\n    color: '#e67e22',\r\n    bgColor: '#fef5e7'\r\n  },\r\n  'fit-out': {\r\n    label: 'Fit-out (Legacy)',\r\n    icon: <Build />,\r\n    color: '#e67e22',\r\n    bgColor: '#fef5e7'\r\n  },\r\n  millwork: {\r\n    label: 'Millwork',\r\n    icon: <Carpenter />,\r\n    color: '#8e44ad',\r\n    bgColor: '#f4ecf7'\r\n  },\r\n  electrical: {\r\n    label: 'Electrical',\r\n    icon: <ElectricalServices />,\r\n    color: '#f1c40f',\r\n    bgColor: '#fffbf0'\r\n  },\r\n  mep: {\r\n    label: 'MEP',\r\n    icon: <Engineering />,\r\n    color: '#1abc9c',\r\n    bgColor: '#e8f8f5'\r\n  },\r\n  management: {\r\n    label: 'Management',\r\n    icon: <Business />,\r\n    color: '#37444B',\r\n    bgColor: '#f5f5f5'\r\n  }\r\n};\r\n\r\nconst projectStatusConfig = {\r\n  'on-tender': {\r\n    label: 'On Tender',\r\n    color: '#3498db',\r\n    bgColor: '#ebf3fd'\r\n  },\r\n  awarded: {\r\n    label: 'Awarded',\r\n    color: '#27ae60',\r\n    bgColor: '#eafaf1'\r\n  },\r\n  'on-hold': {\r\n    label: 'On Hold',\r\n    color: '#f39c12',\r\n    bgColor: '#fef9e7'\r\n  },\r\n  'not-awarded': {\r\n    label: 'Not Awarded',\r\n    color: '#e74c3c',\r\n    bgColor: '#fdedec'\r\n  },\r\n  active: {\r\n    label: 'Active',\r\n    color: '#9b59b6',\r\n    bgColor: '#f4ecf7'\r\n  },\r\n  completed: {\r\n    label: 'Completed',\r\n    color: '#2c3e50',\r\n    bgColor: '#eaeded'\r\n  }\r\n};\r\n\r\nfunction ProjectsList({ projects, tasks, clients = [], onDeleteProject, onManageScope }) {\r\n  if (projects.length === 0) {\r\n    return (\r\n      <Box sx={{ textAlign: 'center', py: 4 }}>\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          No projects created yet. Create your first project to get started!\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  const calculateProjectProgress = (projectId) => {\r\n    const projectTasks = tasks.filter(task => task.projectId === projectId);\r\n    if (projectTasks.length === 0) return 0;\r\n    \r\n    const completedTasks = projectTasks.filter(task => task.status === 'completed').length;\r\n    return Math.round((completedTasks / projectTasks.length) * 100);\r\n  };\r\n\r\n  const getClientName = (clientId) => {\r\n    const client = clients.find(c => c.id === clientId);\r\n    return client ? client.companyName : 'No Client Assigned';\r\n  };\r\n\r\n  const getProjectStats = (projectId) => {\r\n    const projectTasks = tasks.filter(task => task.projectId === projectId);\r\n    const completedTasks = projectTasks.filter(task => task.status === 'completed').length;\r\n    const overdueTasks = projectTasks.filter(task => {\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      return task.status !== 'completed' && new Date(task.dueDate) < today;\r\n    }).length;\r\n\r\n    return {\r\n      total: projectTasks.length,\r\n      completed: completedTasks,\r\n      pending: projectTasks.length - completedTasks,\r\n      overdue: overdueTasks\r\n    };\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric' \r\n    });\r\n  };\r\n\r\n  const handleDeleteProject = (projectId, projectName) => {\r\n    if (window.confirm(`Are you sure you want to delete \"${projectName}\"? This will also delete all associated tasks.`)) {\r\n      onDeleteProject(projectId);\r\n    }\r\n  };\r\n\r\n  const getProjectStatus = (project, stats) => {\r\n    // Use the project's actual status from the form\r\n    return project.status || 'on-tender';\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {projects.map((project) => {\r\n        // Safe fallback for type config\r\n        const typeConfig = projectTypeConfig[project.type] || {\r\n          label: 'General Contractor',\r\n          icon: <Build />,\r\n          color: '#e67e22',\r\n          bgColor: '#fef5e7'\r\n        };\r\n        \r\n        const progress = calculateProjectProgress(project.id);\r\n        const stats = getProjectStats(project.id);\r\n        const projectStatus = getProjectStatus(project, stats);\r\n        \r\n        // Safe fallback for status config\r\n        const statusConfig = projectStatusConfig[projectStatus] || {\r\n          label: 'On Tender',\r\n          color: '#3498db',\r\n          bgColor: '#ebf3fd'\r\n        };\r\n        \r\n        return (\r\n          <Grid item xs={12} md={6} key={project.id}>\r\n            <Card\r\n              className={`project-card construction-card type-${project.type}`}\r\n              sx={{\r\n                cursor: 'pointer',\r\n                position: 'relative',\r\n                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'\r\n              }}\r\n              onClick={() => {}}\r\n            >\r\n\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    <Box sx={{ color: typeConfig.color }}>\r\n                      {typeConfig.icon}\r\n                    </Box>\r\n                    <Chip\r\n                      label={typeConfig.label}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        backgroundColor: typeConfig.bgColor,\r\n                        color: typeConfig.color,\r\n                        fontWeight: 'bold'\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                  \r\n                  {/* Status Badge */}\r\n                  <Chip\r\n                    label={statusConfig.label}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      backgroundColor: statusConfig.bgColor,\r\n                      color: statusConfig.color,\r\n                      fontWeight: 'bold'\r\n                    }}\r\n                  />\r\n                  \r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDeleteProject(project.id, project.name);\r\n                    }}\r\n                    sx={{ color: '#e74c3c' }}\r\n                  >\r\n                    <Delete fontSize=\"small\" />\r\n                  </IconButton>\r\n                </Box>\r\n\r\n                <Typography \r\n                  variant=\"h6\" \r\n                  component=\"h3\" \r\n                  gutterBottom\r\n                  sx={{\r\n                    color: '#3498db',\r\n                    cursor: 'pointer',\r\n                    textDecoration: 'none',\r\n                    '&:hover': {\r\n                      textDecoration: 'underline',\r\n                      color: '#2980b9'\r\n                    }\r\n                  }}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onManageScope && onManageScope(project);\r\n                  }}\r\n                >\r\n                  {project.name}\r\n                </Typography>\r\n\r\n                {project.clientId && (\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\r\n                    <Business fontSize=\"small\" color=\"action\" />\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Client: {getClientName(project.clientId)}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                  <CalendarToday fontSize=\"small\" color=\"action\" />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {formatDate(project.startDate)} - {formatDate(project.endDate)}\r\n                  </Typography>\r\n                </Box>\r\n\r\n\r\n                {/* Enhanced Progress Bar */}\r\n                <Box sx={{ mb: 2 }}>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Progress\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {progress}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <div className=\"construction-progress\">\r\n                    <div \r\n                      className=\"construction-progress-fill\" \r\n                      style={{ width: `${progress}%` }}\r\n                    ></div>\r\n                  </div>\r\n                </Box>\r\n\r\n                {/* Task Statistics with Status Badges */}\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                    <span className=\"status-badge status-badge-todo\" style={{ fontSize: '11px', padding: '2px 6px' }}>\r\n                      {stats.total} total\r\n                    </span>\r\n                    <span className=\"status-badge status-badge-completed\" style={{ fontSize: '11px', padding: '2px 6px' }}>\r\n                      {stats.completed} done\r\n                    </span>\r\n                    {stats.overdue > 0 && (\r\n                      <span className=\"status-badge status-badge-cancelled\" style={{ fontSize: '11px', padding: '2px 6px' }}>\r\n                        {stats.overdue} overdue\r\n                      </span>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n                \r\n                <Button\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                  }}\r\n                  sx={{ \r\n                    borderRadius: '8px',\r\n                    textTransform: 'none',\r\n                    fontWeight: 500 \r\n                  }}\r\n                >\r\n                  View Details\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ProjectsList;","import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Paper,\n  Chip,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Box,\n  Typography,\n  LinearProgress,\n  Avatar,\n  Tooltip\n} from '@mui/material';\nimport {\n  MoreVert as MoreVertIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Visibility as ViewIcon,\n  Business as BusinessIcon,\n  Person as PersonIcon,\n  CalendarToday as CalendarIcon,\n  AccountTree as ScopeIcon\n} from '@mui/icons-material';\n\nconst ProjectsTableView = ({ \n  projects = [], \n  clients = [], \n  teamMembers = [], \n  onEditProject,\n  onDeleteProject,\n  onViewProject,\n  onManageScope \n}) => {\n  const [orderBy, setOrderBy] = useState('name');\n  const [order, setOrder] = useState('asc');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedProject, setSelectedProject] = useState(null);\n\n  // Helper functions\n  const getClientName = (clientId) => {\n    const client = clients.find(c => c.id === clientId);\n    return client ? client.companyName : 'No Client Assigned';\n  };\n\n  const getProjectManager = (managerId) => {\n    const manager = teamMembers.find(tm => tm.id === managerId);\n    return manager ? manager.fullName : 'Unassigned';\n  };\n\n  const getStatusConfig = (status) => {\n    const configs = {\n      'on-tender': { label: 'On Tender', color: '#3498db', bgColor: '#ebf3fd' },\n      'awarded': { label: 'Awarded', color: '#27ae60', bgColor: '#eafaf1' },\n      'on-hold': { label: 'On Hold', color: '#f39c12', bgColor: '#fef9e7' },\n      'not-awarded': { label: 'Not Awarded', color: '#e74c3c', bgColor: '#fdedec' },\n      'active': { label: 'Active', color: '#9b59b6', bgColor: '#f4ecf7' },\n      'completed': { label: 'Completed', color: '#2c3e50', bgColor: '#eaeded' }\n    };\n    return configs[status] || configs['on-tender'];\n  };\n\n  const getTypeConfig = (type) => {\n    const configs = {\n      'general-contractor': { label: 'General Contractor', color: '#e67e22' },\n      'fit-out': { label: 'Fit-out', color: '#e67e22' },\n      'mep': { label: 'MEP', color: '#1abc9c' },\n      'electrical': { label: 'Electrical', color: '#f1c40f' },\n      'millwork': { label: 'Millwork', color: '#8e44ad' },\n      'management': { label: 'Management', color: '#37444B' }\n    };\n    return configs[type] || configs['general-contractor'];\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Not set';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      year: 'numeric', \n      month: 'short', \n      day: 'numeric' \n    });\n  };\n\n  const calculateProgress = (project) => {\n    // This would be calculated based on tasks in a real implementation\n    return Math.floor(Math.random() * 100); // Placeholder\n  };\n\n  // Sorting functionality\n  const handleRequestSort = (property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const sortedProjects = React.useMemo(() => {\n    return [...projects].sort((a, b) => {\n      let aValue = a[orderBy];\n      let bValue = b[orderBy];\n      \n      // Handle special cases\n      if (orderBy === 'client') {\n        aValue = getClientName(a.clientId);\n        bValue = getClientName(b.clientId);\n      }\n      \n      if (orderBy === 'manager') {\n        aValue = getProjectManager(a.projectManager);\n        bValue = getProjectManager(b.projectManager);\n      }\n      \n      if (aValue < bValue) {\n        return order === 'asc' ? -1 : 1;\n      }\n      if (aValue > bValue) {\n        return order === 'asc' ? 1 : -1;\n      }\n      return 0;\n    });\n  }, [projects, orderBy, order, clients, teamMembers]);\n\n  // Menu handlers\n  const handleMenuOpen = (event, project) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedProject(project);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedProject(null);\n  };\n\n  const handleMenuAction = (action) => {\n    if (selectedProject) {\n      switch (action) {\n        case 'view':\n          onViewProject && onViewProject(selectedProject);\n          break;\n        case 'edit':\n          onEditProject && onEditProject(selectedProject);\n          break;\n        case 'scope':\n          onManageScope && onManageScope(selectedProject);\n          break;\n        case 'delete':\n          if (window.confirm(`Are you sure you want to delete \"${selectedProject.name}\"?`)) {\n            onDeleteProject && onDeleteProject(selectedProject.id);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n    handleMenuClose();\n  };\n\n  const columns = [\n    { id: 'name', label: 'Project Name', sortable: true, minWidth: 200 },\n    { id: 'client', label: 'Client', sortable: true, minWidth: 150 },\n    { id: 'type', label: 'Type', sortable: true, minWidth: 130 },\n    { id: 'status', label: 'Status', sortable: true, minWidth: 120 },\n    { id: 'manager', label: 'Manager', sortable: true, minWidth: 150 },\n    { id: 'startDate', label: 'Start Date', sortable: true, minWidth: 120 },\n    { id: 'endDate', label: 'End Date', sortable: true, minWidth: 120 },\n    { id: 'progress', label: 'Progress', sortable: false, minWidth: 120 },\n    { id: 'actions', label: 'Actions', sortable: false, minWidth: 80 }\n  ];\n\n  if (projects.length === 0) {\n    return (\n      <Box sx={{ \n        textAlign: 'center', \n        py: 8,\n        backgroundColor: 'white',\n        borderRadius: 2,\n        border: '1px solid #E9ECEF'\n      }}>\n        <BusinessIcon sx={{ fontSize: 64, color: '#BDC3C7', mb: 2 }} />\n        <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n          No Projects Found\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Start by creating your first project or adjust your search filters.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Paper \n      elevation={0}\n      sx={{ \n        width: '100%', \n        overflow: 'hidden',\n        border: '1px solid #E9ECEF',\n        borderRadius: 2\n      }}\n    >\n      <TableContainer sx={{ maxHeight: 600 }}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  sx={{ \n                    minWidth: column.minWidth,\n                    backgroundColor: '#F8F9FA',\n                    fontWeight: 600,\n                    color: '#2C3E50'\n                  }}\n                >\n                  {column.sortable ? (\n                    <TableSortLabel\n                      active={orderBy === column.id}\n                      direction={orderBy === column.id ? order : 'asc'}\n                      onClick={() => handleRequestSort(column.id)}\n                    >\n                      {column.label}\n                    </TableSortLabel>\n                  ) : (\n                    column.label\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortedProjects.map((project) => {\n              const statusConfig = getStatusConfig(project.status);\n              const typeConfig = getTypeConfig(project.type);\n              const progress = calculateProgress(project);\n\n              return (\n                <TableRow \n                  key={project.id}\n                  hover\n                  sx={{ \n                    '&:hover': { \n                      backgroundColor: '#F8F9FA' \n                    }\n                  }}\n                >\n                  {/* Project Name */}\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <Avatar\n                        sx={{\n                          width: 32,\n                          height: 32,\n                          backgroundColor: typeConfig.color,\n                          fontSize: '0.8rem',\n                          fontWeight: 600\n                        }}\n                      >\n                        {project.name.substring(0, 2).toUpperCase()}\n                      </Avatar>\n                      <Box>\n                        <Typography \n                          variant=\"body2\" \n                          sx={{ \n                            fontWeight: 600, \n                            color: '#3498db',\n                            cursor: 'pointer',\n                            textDecoration: 'none',\n                            '&:hover': {\n                              textDecoration: 'underline',\n                              color: '#2980b9'\n                            }\n                          }}\n                          onClick={() => onManageScope && onManageScope(project)}\n                        >\n                          {project.name}\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n\n                  {/* Client */}\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <BusinessIcon fontSize=\"small\" color=\"action\" />\n                      <Typography variant=\"body2\">\n                        {getClientName(project.clientId)}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n\n                  {/* Type */}\n                  <TableCell>\n                    <Chip\n                      label={typeConfig.label}\n                      size=\"small\"\n                      sx={{\n                        backgroundColor: `${typeConfig.color}15`,\n                        color: typeConfig.color,\n                        fontWeight: 500,\n                        border: `1px solid ${typeConfig.color}30`\n                      }}\n                    />\n                  </TableCell>\n\n                  {/* Status */}\n                  <TableCell>\n                    <Chip\n                      label={statusConfig.label}\n                      size=\"small\"\n                      sx={{\n                        backgroundColor: statusConfig.bgColor,\n                        color: statusConfig.color,\n                        fontWeight: 500\n                      }}\n                    />\n                  </TableCell>\n\n                  {/* Manager */}\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <PersonIcon fontSize=\"small\" color=\"action\" />\n                      <Typography variant=\"body2\">\n                        {getProjectManager(project.projectManager)}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n\n                  {/* Start Date */}\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <CalendarIcon fontSize=\"small\" color=\"action\" />\n                      <Typography variant=\"body2\">\n                        {formatDate(project.startDate)}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n\n                  {/* End Date */}\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <CalendarIcon fontSize=\"small\" color=\"action\" />\n                      <Typography variant=\"body2\">\n                        {formatDate(project.endDate)}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n\n                  {/* Progress */}\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <Box sx={{ width: '100%' }}>\n                        <LinearProgress\n                          variant=\"determinate\"\n                          value={progress}\n                          sx={{ \n                            height: 6, \n                            borderRadius: 3,\n                            backgroundColor: '#E0E0E0',\n                            '& .MuiLinearProgress-bar': {\n                              backgroundColor: progress > 75 ? '#27AE60' : \n                                             progress > 50 ? '#F39C12' : \n                                             progress > 25 ? '#3498DB' : '#E74C3C'\n                            }\n                          }}\n                        />\n                        <Typography variant=\"caption\" color=\"textSecondary\">\n                          {progress}%\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n\n                  {/* Actions */}\n                  <TableCell>\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => handleMenuOpen(e, project)}\n                    >\n                      <MoreVertIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Context Menu */}\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      >\n        <MenuItem onClick={() => handleMenuAction('view')}>\n          <ListItemIcon>\n            <ViewIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>View Details</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuAction('edit')}>\n          <ListItemIcon>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>Edit Project</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuAction('scope')}>\n          <ListItemIcon>\n            <ScopeIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>Manage Scope</ListItemText>\n        </MenuItem>\n        <MenuItem \n          onClick={() => handleMenuAction('delete')}\n          sx={{ color: 'error.main' }}\n        >\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" color=\"error\" />\n          </ListItemIcon>\n          <ListItemText>Delete Project</ListItemText>\n        </MenuItem>\n      </Menu>\n    </Paper>\n  );\n};\n\nexport default ProjectsTableView;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 18H4V8h16z\"\n}), 'CalendarToday');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2zm12-3h-2v-2h2zm0-4h-2v-4h2z\"\n}), 'Warning');","import React from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  Chip,\n  Grid,\n  Collapse,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  OutlinedInput\n} from '@mui/material';\nimport {\n  DatePicker\n} from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nconst UnifiedFilters = ({\n  show,\n  filters,\n  onFilterChange,\n  onClearFilters,\n  onApplyQuickFilter,\n  filterConfig,\n  quickFilters = []\n}) => {\n  const handleFilterChange = (key, value) => {\n    onFilterChange(key, value);\n  };\n\n  const handleClearFilter = (key) => {\n    onFilterChange(key, '');\n  };\n\n  const renderFilterField = (config) => {\n    const { key, label, type, options, placeholder } = config;\n    const value = filters[key] || '';\n\n    switch (type) {\n      case 'select':\n        return (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>{label}</InputLabel>\n            <Select\n              value={value}\n              onChange={(e) => handleFilterChange(key, e.target.value)}\n              input={<OutlinedInput label={label} />}\n            >\n              <MenuItem value=\"\">All {label}</MenuItem>\n              {options.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n\n      case 'multiselect':\n        return (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>{label}</InputLabel>\n            <Select\n              multiple\n              value={Array.isArray(value) ? value : []}\n              onChange={(e) => handleFilterChange(key, e.target.value)}\n              input={<OutlinedInput label={label} />}\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((val) => {\n                    const option = options.find(opt => opt.value === val);\n                    return (\n                      <Chip \n                        key={val} \n                        label={option ? option.label : val} \n                        size=\"small\" \n                      />\n                    );\n                  })}\n                </Box>\n              )}\n            >\n              {options.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n\n      case 'date':\n        return (\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              label={label}\n              value={value || null}\n              onChange={(newValue) => handleFilterChange(key, newValue)}\n              slotProps={{\n                textField: {\n                  size: 'small',\n                  fullWidth: true\n                }\n              }}\n            />\n          </LocalizationProvider>\n        );\n\n      case 'number':\n        return (\n          <TextField\n            fullWidth\n            size=\"small\"\n            label={label}\n            type=\"number\"\n            value={value}\n            onChange={(e) => handleFilterChange(key, e.target.value)}\n            placeholder={placeholder}\n          />\n        );\n\n      case 'text':\n      default:\n        return (\n          <TextField\n            fullWidth\n            size=\"small\"\n            label={label}\n            value={value}\n            onChange={(e) => handleFilterChange(key, e.target.value)}\n            placeholder={placeholder}\n          />\n        );\n    }\n  };\n\n  const getActiveFiltersCount = () => {\n    return Object.values(filters).filter(value => {\n      if (Array.isArray(value)) return value.length > 0;\n      if (value instanceof Date) return true;\n      return value !== '' && value !== null && value !== undefined;\n    }).length;\n  };\n\n  return (\n    <Collapse in={show}>\n      <Paper \n        sx={{ \n          p: 3, \n          mb: 3, \n          backgroundColor: 'grey.50',\n          border: 1,\n          borderColor: 'divider'\n        }}\n      >\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\" component=\"h3\">\n            Filters ({getActiveFiltersCount()} active)\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={onClearFilters}\n            disabled={getActiveFiltersCount() === 0}\n          >\n            Clear All\n          </Button>\n        </Box>\n\n        {/* Quick Filters */}\n        {quickFilters.length > 0 && (\n          <>\n            <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\n              Quick Filters\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n              {quickFilters.map((quickFilter) => (\n                <Chip\n                  key={quickFilter.key}\n                  label={quickFilter.label}\n                  onClick={() => onApplyQuickFilter(quickFilter)}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  sx={{ '&:hover': { backgroundColor: 'primary.light', color: 'white' } }}\n                />\n              ))}\n            </Box>\n            <Divider sx={{ mb: 2 }} />\n          </>\n        )}\n\n        {/* Filter Fields */}\n        <Grid container spacing={2}>\n          {filterConfig.map((config) => (\n            <Grid item xs={12} sm={6} md={4} key={config.key}>\n              {renderFilterField(config)}\n            </Grid>\n          ))}\n        </Grid>\n\n        {/* Active Filters Display */}\n        {getActiveFiltersCount() > 0 && (\n          <>\n            <Divider sx={{ my: 2 }} />\n            <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\n              Active Filters\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n              {Object.entries(filters).map(([key, value]) => {\n                if (Array.isArray(value) && value.length === 0) return null;\n                if (!value || value === '') return null;\n                \n                const config = filterConfig.find(c => c.key === key);\n                if (!config) return null;\n\n                let displayValue = value;\n                if (Array.isArray(value)) {\n                  displayValue = value.map(v => {\n                    const option = config.options?.find(opt => opt.value === v);\n                    return option ? option.label : v;\n                  }).join(', ');\n                } else if (config.options) {\n                  const option = config.options.find(opt => opt.value === value);\n                  displayValue = option ? option.label : value;\n                } else if (value instanceof Date) {\n                  displayValue = value.toLocaleDateString();\n                }\n\n                return (\n                  <Chip\n                    key={key}\n                    label={`${config.label}: ${displayValue}`}\n                    onDelete={() => handleClearFilter(key)}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                  />\n                );\n              }).filter(Boolean)}\n            </Box>\n          </>\n        )}\n      </Paper>\n    </Collapse>\n  );\n};\n\nexport default UnifiedFilters;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M14.4 6 14 4H5v17h2v-7h5.6l.4 2h7V6z\"\n}), 'Flag');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');"],"names":["createSvgIcon","_jsx","d","_ref","projects","tasks","clients","teamMembers","onDeleteProject","onEditProject","onViewProject","onManageScope","onViewTask","onEditTask","onUpdateTask","currentUserId","searchValue","setSearchValue","useState","showFilters","setShowFilters","viewMode","setViewMode","filters","setFilters","status","type","client","startDateFrom","startDateTo","endDateFrom","endDateTo","budgetFrom","budgetTo","myProjects","filter","p","projectManager","myTasks","t","assignedTo","filterConfig","key","label","options","value","map","c","id","companyName","placeholder","quickFilters","Date","getFullYear","getMonth","filteredAndSortedProjects","useMemo","project","searchLower","toLowerCase","matchesSearch","name","includes","description","matchesStatus","matchesType","matchesClient","clientId","parseInt","projectStartDate","startDate","projectEndDate","endDate","matchesStartDateFrom","matchesStartDateTo","matchesEndDateFrom","matchesEndDateTo","projectBudget","budget","parseFloat","matchesBudgetFrom","matchesBudgetTo","activeFilters","Object","entries","_ref2","undefined","_ref3","_filterConfig$find","find","f","toLocaleDateString","handleClearFilters","handleClearFilter","prev","_objectSpread","handleExport","console","log","priorityConfig","low","color","bgColor","icon","Flag","medium","high","Warning","urgent","PriorityHigh","statusConfig","pending","Schedule","PlayArrow","completed","CheckCircle","getProjectName","projectId","formatDate","dateString","date","month","day","year","length","_jsxs","Box","children","UnifiedHeader","title","onSearchChange","onToggleFilters","activeFiltersCount","onViewModeChange","onExport","showAdd","onClearFilter","sx","textAlign","py","Assignment","fontSize","mb","Typography","variant","subtitle","concat","UnifiedFilters","show","onFilterChange","handleFilterChange","onClearFilters","onApplyQuickFilter","quickFilter","fontWeight","Grid","container","spacing","slice","task","priority","taskOverdue","today","setHours","dueDate","isOverdue","item","xs","sm","md","Card","elevation","border","borderRadius","borderLeft","boxShadow","transform","transition","CardContent","display","justifyContent","alignItems","flex","Chip","size","backgroundColor","ml","gap","IconButton","onClick","ViewIcon","EditIcon","progress","mt","LinearProgress","height","ProjectsTableView","ProjectsList","cx","cy","r","onAdd","addButtonText","exportButtonText","showExport","showViewToggle","flexWrap","component","borderColor","Tooltip","CardViewIcon","TableViewIcon","Button","startIcon","ExportIcon","AddIcon","TextField","onChange","e","target","minWidth","flexGrow","maxWidth","InputProps","startAdornment","InputAdornment","position","SearchIcon","endAdornment","handleClearSearch","edge","ClearIcon","Badge","badgeContent","FilterIcon","mr","alignSelf","index","onDelete","textTransform","px","projectTypeConfig","Build","millwork","Carpenter","electrical","ElectricalServices","mep","Engineering","management","Business","projectStatusConfig","awarded","active","getClientName","typeConfig","projectTasks","completedTasks","Math","round","calculateProjectProgress","stats","overdueTasks","total","overdue","getProjectStats","projectStatus","getProjectStatus","className","cursor","handleDeleteProject","projectName","stopPropagation","window","confirm","Delete","gutterBottom","textDecoration","CalendarToday","style","width","padding","fullWidth","orderBy","setOrderBy","order","setOrder","anchorEl","setAnchorEl","selectedProject","setSelectedProject","getProjectManager","managerId","manager","tm","fullName","sortedProjects","React","sort","a","b","aValue","bValue","handleMenuClose","handleMenuAction","action","BusinessIcon","Paper","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","sortable","column","TableCell","TableSortLabel","direction","handleRequestSort","property","TableBody","configs","getStatusConfig","getTypeConfig","floor","random","hover","Avatar","substring","toUpperCase","PersonIcon","CalendarIcon","handleMenuOpen","event","currentTarget","MoreVertIcon","Menu","open","Boolean","onClose","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","ListItemIcon","ListItemText","ScopeIcon","DeleteIcon","renderFilterField","config","FormControl","InputLabel","Select","input","OutlinedInput","option","multiple","Array","isArray","renderValue","selected","val","opt","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","newValue","slotProps","textField","getActiveFiltersCount","values","Collapse","in","disabled","_Fragment","Divider","my","displayValue","v","_config$options","join"],"sourceRoot":""}