{"version":3,"file":"static/js/510.e45eee83.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Delete.js","features/projects/components/ProjectForm.js","features/projects/components/ProjectFormPage.js","../node_modules/@mui/icons-material/esm/NavigateNext.js","../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Edit.js","components/ui/UniversalBreadcrumb.js","components/layout/PageWrapper.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Box,\r\n  Alert,\r\n  FormControl,\r\n  InputLabel,\r\n  Select\r\n} from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\n\r\nconst projectTypes = [\r\n  { value: 'general-contractor', label: 'General Contractor' },\r\n  { value: 'millwork', label: 'Millwork' },\r\n  { value: 'electrical', label: 'Electrical' },\r\n  { value: 'mep', label: 'MEP' },\r\n  { value: 'management', label: 'Management' }\r\n];\r\n\r\nconst projectStatuses = [\r\n  { value: 'on-tender', label: 'On Tender' },\r\n  { value: 'awarded', label: 'Awarded' },\r\n  { value: 'on-hold', label: 'On Hold' },\r\n  { value: 'not-awarded', label: 'Not Awarded' },\r\n  { value: 'active', label: 'Active' },\r\n  { value: 'completed', label: 'Completed' }\r\n];\r\n\r\nfunction ProjectForm({ onSubmit, clients = [], initialProject = null }) {\r\n  const [formData, setFormData] = useState(\r\n    initialProject ? {\r\n      name: initialProject.name || '',\r\n      type: initialProject.type || '',\r\n      startDate: initialProject.startDate ? new Date(initialProject.startDate) : null,\r\n      endDate: initialProject.endDate ? new Date(initialProject.endDate) : null,\r\n      clientId: initialProject.clientId || '',\r\n      status: initialProject.status || 'on-tender',\r\n      description: initialProject.description || ''\r\n    } : {\r\n      name: '',\r\n      type: '',\r\n      startDate: null,\r\n      endDate: null,\r\n      clientId: '',\r\n      status: 'on-tender',\r\n      description: ''\r\n    }\r\n  );\r\n  const [errors, setErrors] = useState({});\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleChange = (field) => (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [field]: event.target.value\r\n    });\r\n    if (errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (field) => (date) => {\r\n    setFormData({\r\n      ...formData,\r\n      [field]: date\r\n    });\r\n    if (errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Project name is required';\r\n    }\r\n\r\n    if (!formData.type) {\r\n      newErrors.type = 'Project type is required';\r\n    }\r\n\r\n    if (!formData.startDate) {\r\n      newErrors.startDate = 'Start date is required';\r\n    }\r\n\r\n    if (!formData.endDate) {\r\n      newErrors.endDate = 'End date is required';\r\n    }\r\n\r\n    if (!formData.clientId) {\r\n      newErrors.clientId = 'Client selection is required';\r\n    }\r\n\r\n    if (formData.startDate && formData.endDate && formData.startDate >= formData.endDate) {\r\n      newErrors.endDate = 'End date must be after start date';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (validateForm()) {\r\n      const submitData = {\r\n        ...formData,\r\n        startDate: formData.startDate.toISOString().split('T')[0],\r\n        endDate: formData.endDate.toISOString().split('T')[0]\r\n      };\r\n      \r\n      if (initialProject) {\r\n        submitData.id = initialProject.id;\r\n      }\r\n      \r\n      onSubmit(submitData);\r\n      \r\n      // Only clear form if creating new project\r\n      if (!initialProject) {\r\n        setFormData({\r\n          name: '',\r\n          type: '',\r\n          startDate: null,\r\n          endDate: null,\r\n          clientId: '',\r\n          status: 'on-tender',\r\n          description: ''\r\n        });\r\n      }\r\n      \r\n      setSuccess(true);\r\n      setTimeout(() => setSuccess(false), 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n        {success && (\r\n          <Alert severity=\"success\">\r\n            Project created successfully!\r\n          </Alert>\r\n        )}\r\n        \r\n        <TextField\r\n          label=\"Project Name\"\r\n          value={formData.name}\r\n          onChange={handleChange('name')}\r\n          error={!!errors.name}\r\n          helperText={errors.name}\r\n          fullWidth\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          select\r\n          label=\"Project Type\"\r\n          value={formData.type}\r\n          onChange={handleChange('type')}\r\n          error={!!errors.type}\r\n          helperText={errors.type}\r\n          fullWidth\r\n          required\r\n        >\r\n          {projectTypes.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        <DatePicker\r\n          label=\"Start Date\"\r\n          value={formData.startDate}\r\n          onChange={handleDateChange('startDate')}\r\n          slotProps={{\r\n            textField: {\r\n              error: !!errors.startDate,\r\n              helperText: errors.startDate,\r\n              fullWidth: true,\r\n              required: true\r\n            }\r\n          }}\r\n        />\r\n\r\n        <DatePicker\r\n          label=\"End Date\"\r\n          value={formData.endDate}\r\n          onChange={handleDateChange('endDate')}\r\n          slotProps={{\r\n            textField: {\r\n              error: !!errors.endDate,\r\n              helperText: errors.endDate,\r\n              fullWidth: true,\r\n              required: true\r\n            }\r\n          }}\r\n        />\r\n\r\n        <FormControl fullWidth required error={!!errors.clientId}>\r\n          <InputLabel>Client</InputLabel>\r\n          <Select\r\n            value={formData.clientId}\r\n            onChange={handleChange('clientId')}\r\n            label=\"Client\"\r\n          >\r\n            {clients.map((client) => (\r\n              <MenuItem key={client.id} value={client.id}>\r\n                {client.companyName}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          {errors.clientId && (\r\n            <Box sx={{ color: 'error.main', fontSize: '0.75rem', mt: 0.5, ml: 1.75 }}>\r\n              {errors.clientId}\r\n            </Box>\r\n          )}\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth>\r\n          <InputLabel>Project Status</InputLabel>\r\n          <Select\r\n            value={formData.status}\r\n            onChange={handleChange('status')}\r\n            label=\"Project Status\"\r\n          >\r\n            {projectStatuses.map((status) => (\r\n              <MenuItem key={status.value} value={status.value}>\r\n                {status.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField\r\n          label=\"Description\"\r\n          value={formData.description}\r\n          onChange={handleChange('description')}\r\n          multiline\r\n          rows={3}\r\n          fullWidth\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          sx={{ mt: 2 }}\r\n        >\r\n          Create Project\r\n        </Button>\r\n      </Box>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\nexport default ProjectForm;","import React from 'react';\nimport { Box } from '@mui/material';\nimport ProjectForm from './ProjectForm';\nimport PageWrapper from '../../../components/layout/PageWrapper';\n\nconst ProjectFormPage = ({ \n  project = null, \n  clients, \n  onSubmit, \n  onCancel,\n  isEdit = false \n}) => {\n  const pageTitle = isEdit ? 'Edit Project' : 'Create New Project';\n  const pageType = isEdit ? 'edit-project' : 'add-project';\n  \n  // Build page data for breadcrumbs\n  const pageData = isEdit && project ? {\n    projectId: project.id,\n    projectName: project.name,\n    status: project.status,\n    type: project.type\n  } : {};\n\n  return (\n    <PageWrapper\n      pageType={pageType}\n      pageTitle={pageTitle}\n      pageData={pageData}\n      subtitle={isEdit ? `Editing: ${project?.name}` : 'Create a new project'}\n      onNavigate={(path) => {\n        if (path === '/projects') {\n          onCancel && onCancel();\n        }\n      }}\n      contentPadding={3}\n    >\n      <Box \n        sx={{ \n          maxWidth: 800, \n          mx: 'auto',\n          backgroundColor: 'white',\n          borderRadius: 3,\n          border: '1px solid #E9ECEF',\n          p: 4\n        }}\n      >\n        <ProjectForm\n          clients={clients}\n          onSubmit={onSubmit}\n          initialProject={project}\n        />\n      </Box>\n    </PageWrapper>\n  );\n};\n\nexport default ProjectFormPage;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","import React from 'react';\nimport { \n  Box, \n  Typography, \n  Breadcrumbs, \n  Link, \n  IconButton,\n  Paper,\n  Chip,\n  Tooltip,\n  useMediaQuery,\n  useTheme\n} from '@mui/material';\nimport { \n  Home,\n  Business,\n  ArrowBack,\n  NavigateNext,\n  Edit,\n  Delete,\n  Share,\n  MoreHoriz,\n  Star,\n  StarBorder\n} from '@mui/icons-material';\n\nconst UniversalBreadcrumb = ({ \n  // Navigation data\n  currentPath = [],\n  onNavigate,\n  \n  // Page info\n  title,\n  subtitle,\n  itemType, // 'project', 'task', 'team', 'client'\n  itemId,\n  itemData = {},\n  \n  // Actions\n  actions = [],\n  onEdit,\n  onDelete,\n  onShare,\n  showMoreActions = false,\n  \n  // Favorites\n  isStarred = false,\n  onToggleStar,\n  \n  // Mobile support\n  showBackButton = true,\n  \n  // Custom styling\n  backgroundColor = 'white',\n  elevation = 0\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  // Generate breadcrumb items\n  const generateBreadcrumbs = () => {\n    const breadcrumbs = [\n      {\n        label: 'Formula PM',\n        icon: <Home sx={{ fontSize: 16 }} />,\n        href: '/',\n        onClick: () => onNavigate && onNavigate('/')\n      },\n      {\n        label: 'Team Space',\n        icon: <Business sx={{ fontSize: 16 }} />,\n        href: '/dashboard',\n        onClick: () => onNavigate && onNavigate('/dashboard')\n      }\n    ];\n\n    // Add dynamic path items\n    currentPath.forEach((pathItem, index) => {\n      breadcrumbs.push({\n        label: pathItem.label,\n        href: pathItem.href,\n        onClick: () => onNavigate && onNavigate(pathItem.href),\n        isLast: index === currentPath.length - 1\n      });\n    });\n\n    return breadcrumbs;\n  };\n\n  const breadcrumbItems = generateBreadcrumbs();\n\n  // Handle back navigation\n  const handleBack = () => {\n    if (currentPath.length > 0) {\n      const previousPath = currentPath[currentPath.length - 1];\n      if (onNavigate && previousPath.href) {\n        onNavigate(previousPath.href);\n      } else {\n        window.history.back();\n      }\n    } else {\n      window.history.back();\n    }\n  };\n\n  // Action button configurations\n  const actionButtons = [\n    ...(actions || []),\n    ...(onEdit ? [{ \n      icon: <Edit />, \n      label: 'Edit', \n      onClick: onEdit,\n      color: 'primary'\n    }] : []),\n    ...(onShare ? [{ \n      icon: <Share />, \n      label: 'Share', \n      onClick: onShare,\n      color: 'default'\n    }] : []),\n    ...(onDelete ? [{ \n      icon: <Delete />, \n      label: 'Delete', \n      onClick: onDelete,\n      color: 'error'\n    }] : [])\n  ];\n\n  return (\n    <Paper\n      elevation={elevation}\n      sx={{\n        backgroundColor,\n        borderBottom: '1px solid #E9ECEF',\n        px: { xs: 2, md: 4 },\n        py: 3,\n        borderRadius: 0\n      }}\n    >\n      {/* Mobile Back Button */}\n      {isMobile && showBackButton && (\n        <Box sx={{ mb: 2 }}>\n          <IconButton \n            onClick={handleBack}\n            size=\"small\"\n            sx={{ \n              color: '#7F8C8D',\n              '&:hover': { color: '#2C3E50' }\n            }}\n          >\n            <ArrowBack />\n          </IconButton>\n        </Box>\n      )}\n\n      {/* Desktop Breadcrumbs */}\n      {!isMobile && (\n        <Breadcrumbs \n          separator={<NavigateNext fontSize=\"small\" />}\n          sx={{ \n            mb: 2, \n            fontSize: '0.875rem',\n            '& .MuiBreadcrumbs-separator': {\n              color: '#7F8C8D'\n            }\n          }}\n        >\n          {breadcrumbItems.map((crumb, index) => {\n            const isLast = index === breadcrumbItems.length - 1;\n            \n            if (isLast) {\n              return (\n                <Typography \n                  key={index}\n                  color=\"text.primary\" \n                  fontWeight={500}\n                  sx={{ \n                    color: '#2C3E50',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 0.5\n                  }}\n                >\n                  {crumb.icon}\n                  {crumb.label}\n                </Typography>\n              );\n            }\n\n            return (\n              <Link\n                key={index}\n                underline=\"hover\"\n                color=\"inherit\"\n                href={crumb.href || '#'}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (crumb.onClick) crumb.onClick();\n                }}\n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  gap: 0.5,\n                  color: '#7F8C8D',\n                  cursor: 'pointer',\n                  '&:hover': { color: '#2C3E50' }\n                }}\n              >\n                {crumb.icon}\n                {crumb.label}\n              </Link>\n            );\n          })}\n        </Breadcrumbs>\n      )}\n\n      {/* Main Header Section */}\n      <Box sx={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: { xs: 'flex-start', md: 'center' },\n        flexDirection: { xs: 'column', md: 'row' },\n        gap: { xs: 2, md: 0 }\n      }}>\n        {/* Left Side - Title and Info */}\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, flex: 1 }}>\n          {/* Title with Star */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Typography \n              variant=\"h4\" \n              sx={{ \n                fontWeight: 700, \n                color: '#2C3E50',\n                fontSize: { xs: '1.5rem', md: '1.75rem' }\n              }}\n            >\n              {title}\n            </Typography>\n            \n            {onToggleStar && (\n              <Tooltip title={isStarred ? \"Remove from favorites\" : \"Add to favorites\"}>\n                <IconButton \n                  size=\"small\" \n                  onClick={onToggleStar}\n                  sx={{ \n                    color: isStarred ? '#F39C12' : '#BDC3C7',\n                    '&:hover': {\n                      color: isStarred ? '#E67E22' : '#F39C12'\n                    }\n                  }}\n                >\n                  {isStarred ? <Star /> : <StarBorder />}\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n\n          {/* Subtitle and Metadata */}\n          {(subtitle || itemData.status || itemData.type) && (\n            <Box sx={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: 1, \n              flexWrap: 'wrap',\n              ml: { xs: 0, md: 2 }\n            }}>\n              {subtitle && (\n                <Typography \n                  variant=\"body2\" \n                  sx={{ \n                    color: '#7F8C8D',\n                    fontSize: '0.9rem'\n                  }}\n                >\n                  {subtitle}\n                </Typography>\n              )}\n              \n              {itemData.status && (\n                <Chip \n                  label={itemData.status}\n                  size=\"small\"\n                  sx={{\n                    height: 24,\n                    fontSize: '0.75rem',\n                    backgroundColor: getStatusColor(itemData.status),\n                    color: 'white',\n                    fontWeight: 600\n                  }}\n                />\n              )}\n              \n              {itemData.type && (\n                <Chip \n                  label={itemData.type}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  sx={{\n                    height: 24,\n                    fontSize: '0.75rem',\n                    borderColor: '#D5DBDB',\n                    color: '#7F8C8D'\n                  }}\n                />\n              )}\n            </Box>\n          )}\n        </Box>\n\n        {/* Right Side - Actions */}\n        {actionButtons.length > 0 && (\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: 1.5,\n            flexShrink: 0\n          }}>\n            {actionButtons.slice(0, isMobile ? 2 : 4).map((action, index) => (\n              <Tooltip key={index} title={action.label}>\n                <IconButton \n                  onClick={action.onClick}\n                  size=\"small\"\n                  sx={{ \n                    backgroundColor: action.color === 'primary' ? '#3498DB' : '#F8F9FA',\n                    color: action.color === 'primary' ? 'white' : \n                           action.color === 'error' ? '#E74C3C' : '#7F8C8D',\n                    border: action.color === 'primary' ? 'none' : '1px solid #E9ECEF',\n                    borderRadius: 2,\n                    width: 36,\n                    height: 36,\n                    '&:hover': { \n                      backgroundColor: action.color === 'primary' ? '#2980B9' :\n                                     action.color === 'error' ? '#fadbd8' : '#ECF0F1',\n                      transform: 'translateY(-1px)',\n                      boxShadow: action.color === 'primary' ? '0 4px 12px rgba(52, 152, 219, 0.3)' : 'none'\n                    }\n                  }}\n                >\n                  {action.icon}\n                </IconButton>\n              </Tooltip>\n            ))}\n            \n            {(actionButtons.length > (isMobile ? 2 : 4) || showMoreActions) && (\n              <Tooltip title=\"More options\">\n                <IconButton \n                  size=\"small\"\n                  sx={{ \n                    backgroundColor: '#F8F9FA',\n                    border: '1px solid #E9ECEF',\n                    borderRadius: 2,\n                    width: 36,\n                    height: 36,\n                    '&:hover': { \n                      backgroundColor: '#ECF0F1',\n                      border: '1px solid #D5DBDB'\n                    }\n                  }}\n                >\n                  <MoreHoriz sx={{ fontSize: 18 }} />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\n// Helper function to get status colors\nconst getStatusColor = (status) => {\n  const statusColors = {\n    'completed': '#27AE60',\n    'active': '#8E44AD',\n    'in-progress': '#F39C12',\n    'in_progress': '#F39C12',\n    'pending': '#3498DB',\n    'on-hold': '#E67E22',\n    'on_hold': '#E67E22',\n    'cancelled': '#E74C3C',\n    'awarded': '#27AE60',\n    'on-tender': '#3498DB',\n    'on_tender': '#3498DB',\n    'not-awarded': '#E74C3C',\n    'not_awarded': '#E74C3C'\n  };\n  \n  return statusColors[status?.toLowerCase()] || '#95A5A6';\n};\n\nexport default UniversalBreadcrumb;","import React, { useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport UniversalBreadcrumb from '../ui/UniversalBreadcrumb';\nimport { useNavigation } from '../../context';\n\nconst PageWrapper = ({ \n  // Page identification\n  pageType,\n  pageTitle,\n  pageData = {},\n  \n  // Navigation\n  parentPath,\n  onNavigate,\n  \n  // Breadcrumb customization\n  subtitle,\n  actions = [],\n  \n  // Favorites\n  isStarred = false,\n  onToggleStar,\n  \n  // Action handlers\n  onEdit,\n  onDelete,\n  onShare,\n  \n  // Content\n  children,\n  \n  // Styling\n  showBreadcrumb = true,\n  breadcrumbElevation = 0,\n  contentPadding = 3\n}) => {\n  const { navigateTo, getBreadcrumbConfig } = useNavigation();\n\n  // Update navigation context when page loads\n  useEffect(() => {\n    if (pageType && pageTitle) {\n      navigateTo({\n        title: pageTitle,\n        path: window.location.pathname,\n        type: pageType,\n        parentPath,\n        data: pageData\n      });\n    }\n  }, [pageType, pageTitle, parentPath, pageData, navigateTo]);\n\n  // Handle navigation events\n  const handleNavigate = (path) => {\n    if (onNavigate) {\n      onNavigate(path);\n    } else {\n      // Default navigation behavior - update URL and trigger route change\n      window.history.pushState({}, '', path);\n      // You might want to trigger a route change event here\n      // depending on your routing solution\n    }\n  };\n\n  const breadcrumbConfig = getBreadcrumbConfig();\n\n  return (\n    <Box sx={{ minHeight: '100vh', backgroundColor: '#F8F9FA' }}>\n      {/* Universal Breadcrumb */}\n      {showBreadcrumb && (\n        <UniversalBreadcrumb\n          currentPath={breadcrumbConfig.currentPath}\n          title={pageTitle}\n          subtitle={subtitle}\n          itemType={pageType}\n          itemData={pageData}\n          actions={actions}\n          isStarred={isStarred}\n          onToggleStar={onToggleStar}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onShare={onShare}\n          onNavigate={handleNavigate}\n          elevation={breadcrumbElevation}\n        />\n      )}\n\n      {/* Page Content */}\n      <Box sx={{ p: contentPadding }}>\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default PageWrapper;"],"names":["createSvgIcon","_jsx","d","projectTypes","value","label","projectStatuses","_ref","onSubmit","clients","initialProject","formData","setFormData","useState","name","type","startDate","Date","endDate","clientId","status","description","errors","setErrors","success","setSuccess","handleChange","field","event","_objectSpread","target","handleDateChange","date","LocalizationProvider","dateAdapter","AdapterDateFns","children","_jsxs","Box","component","preventDefault","validateForm","newErrors","trim","Object","keys","length","submitData","toISOString","split","id","setTimeout","sx","display","flexDirection","gap","Alert","severity","TextField","onChange","error","helperText","fullWidth","required","select","map","option","MenuItem","DatePicker","slotProps","textField","FormControl","InputLabel","Select","client","companyName","color","fontSize","mt","ml","multiline","rows","Button","variant","size","project","onCancel","isEdit","pageTitle","pageType","pageData","projectId","projectName","PageWrapper","subtitle","concat","onNavigate","path","contentPadding","maxWidth","mx","backgroundColor","borderRadius","border","p","ProjectForm","getStatusColor","toLowerCase","currentPath","title","itemType","itemId","itemData","actions","onEdit","onDelete","onShare","showMoreActions","isStarred","onToggleStar","showBackButton","elevation","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","breadcrumbItems","generateBreadcrumbs","breadcrumbs","icon","Home","href","onClick","Business","forEach","pathItem","index","push","isLast","actionButtons","Edit","Share","Delete","Paper","borderBottom","px","xs","md","py","mb","IconButton","handleBack","previousPath","window","history","back","ArrowBack","Breadcrumbs","separator","NavigateNext","crumb","Typography","fontWeight","alignItems","Link","underline","e","cursor","justifyContent","flex","Tooltip","Star","StarBorder","flexWrap","Chip","height","borderColor","flexShrink","slice","action","width","transform","boxShadow","MoreHoriz","parentPath","showBreadcrumb","breadcrumbElevation","navigateTo","getBreadcrumbConfig","useNavigation","useEffect","location","pathname","data","breadcrumbConfig","minHeight","UniversalBreadcrumb","pushState"],"sourceRoot":""}