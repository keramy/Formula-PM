{"version":3,"file":"static/js/855.a5471d01.chunk.js","mappings":"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","sources":["features/projects/components/EnhancedScopeItemForm.js","features/projects/components/ScopeImportDialog.js","features/projects/components/EnhancedProjectScope.js","components/ui/UniversalBreadcrumb.js","components/layout/PageWrapper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  InputAdornment,\n  Paper\n} from '@mui/material';\nimport { AttachFile as AttachFileIcon } from '@mui/icons-material';\n\nconst EnhancedScopeItemForm = ({ item, categories, onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState({\n    description: '',\n    quantity: '',\n    unitPrice: '',\n    unit: 'pcs',\n    category: '',\n    notes: '',\n    attachments: null\n  });\n\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    if (item) {\n      setFormData({\n        description: item.description || '',\n        quantity: item.quantity || '',\n        unitPrice: item.unitPrice || '',\n        unit: item.unit || 'pcs',\n        category: item.category || '',\n        notes: item.notes || '',\n        attachments: item.attachments || null\n      });\n    }\n  }, [item]);\n\n  useEffect(() => {\n    const qty = parseFloat(formData.quantity) || 0;\n    const price = parseFloat(formData.unitPrice) || 0;\n    setTotalPrice(qty * price);\n  }, [formData.quantity, formData.unitPrice]);\n\n  const handleChange = (field) => (event) => {\n    setFormData({\n      ...formData,\n      [field]: event.target.value\n    });\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setFormData({\n        ...formData,\n        attachments: file.name\n      });\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    if (!formData.description.trim()) {\n      alert('Please enter a description');\n      return;\n    }\n    \n    if (!formData.quantity || parseFloat(formData.quantity) <= 0) {\n      alert('Please enter a valid quantity');\n      return;\n    }\n    \n    if (!formData.unitPrice || parseFloat(formData.unitPrice) <= 0) {\n      alert('Please enter a valid unit price');\n      return;\n    }\n\n    onSubmit(formData);\n  };\n\n  const unitOptions = [\n    'pcs', 'sqm', 'sqft', 'lm', 'lft', 'm', 'ft', \n    'kg', 'lb', 'ton', 'hours', 'days', 'lot'\n  ];\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n        {/* 1. Description */}\n        <TextField\n          fullWidth\n          label=\"1. Description\"\n          required\n          value={formData.description}\n          onChange={handleChange('description')}\n          placeholder=\"Enter item description...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                📝\n              </InputAdornment>\n            )\n          }}\n        />\n\n        {/* 2. Category */}\n        <FormControl fullWidth>\n          <InputLabel>2. Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={handleChange('category')}\n            label=\"2. Category\"\n            displayEmpty\n          >\n            <MenuItem value=\"\">\n              <em>Select Category</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem key={category} value={category}>\n                {category}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        {/* 3. Quantity */}\n        <TextField\n          fullWidth\n          label=\"3. Quantity\"\n          required\n          type=\"number\"\n          value={formData.quantity}\n          onChange={handleChange('quantity')}\n          inputProps={{ step: 'any', min: 0 }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                📊\n              </InputAdornment>\n            )\n          }}\n        />\n\n        {/* 4. Unit */}\n        <FormControl fullWidth>\n          <InputLabel>4. Unit</InputLabel>\n          <Select\n            value={formData.unit}\n            onChange={handleChange('unit')}\n            label=\"4. Unit\"\n          >\n            {unitOptions.map(unit => (\n              <MenuItem key={unit} value={unit}>\n                {unit}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        {/* 5. Unit Price */}\n        <TextField\n          fullWidth\n          label=\"5. Unit Price\"\n          required\n          type=\"number\"\n          value={formData.unitPrice}\n          onChange={handleChange('unitPrice')}\n          inputProps={{ step: 'any', min: 0 }}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">💰 $</InputAdornment>\n          }}\n        />\n\n        {/* Total Price Display */}\n        <Paper sx={{ p: 3, backgroundColor: '#F8F9FA', border: '2px solid #27AE60', borderRadius: 2 }}>\n          <Typography variant=\"h5\" sx={{ color: '#27AE60', fontWeight: 700, textAlign: 'center' }}>\n            Total Price: ${totalPrice.toLocaleString()}\n          </Typography>\n        </Paper>\n\n        {/* 6. Notes */}\n        <TextField\n          fullWidth\n          label=\"6. Notes (Optional)\"\n          multiline\n          rows={3}\n          value={formData.notes}\n          onChange={handleChange('notes')}\n          placeholder=\"Additional notes or specifications...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\" sx={{ alignSelf: 'flex-start', mt: 1 }}>\n                📋\n              </InputAdornment>\n            )\n          }}\n        />\n\n        {/* 7. File Attachments */}\n        <Box>\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600, color: '#2C3E50' }}>\n            7. File Attachments (Optional)\n          </Typography>\n          <Box sx={{ \n            border: '2px dashed #E9ECEF', \n            borderRadius: 2, \n            p: 3,\n            textAlign: 'center',\n            backgroundColor: '#F8F9FA'\n          }}>\n            <input\n              accept=\"*/*\"\n              style={{ display: 'none' }}\n              id=\"file-upload\"\n              type=\"file\"\n              onChange={handleFileUpload}\n            />\n            <label htmlFor=\"file-upload\">\n              <Button\n                variant=\"outlined\"\n                component=\"span\"\n                startIcon={<AttachFileIcon />}\n                sx={{ \n                  borderRadius: '20px',\n                  textTransform: 'none',\n                  fontWeight: 600\n                }}\n              >\n                📎 Choose File\n              </Button>\n            </label>\n            {formData.attachments && (\n              <Typography variant=\"body2\" sx={{ mt: 1, color: '#27AE60' }}>\n                ✅ Attached: {formData.attachments}\n              </Typography>\n            )}\n            <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1, color: '#6C757D' }}>\n              Upload specifications, drawings, or other relevant files\n            </Typography>\n          </Box>\n        </Box>\n\n        {/* Action Buttons */}\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 4, pt: 3, borderTop: '1px solid #E9ECEF' }}>\n          <Button\n            variant=\"outlined\"\n            onClick={onCancel}\n            sx={{ \n              borderRadius: '20px',\n              textTransform: 'none',\n              fontWeight: 600,\n              px: 4\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            sx={{ \n                borderRadius: '20px',\n                textTransform: 'none',\n                fontWeight: 600,\n                backgroundColor: '#27AE60',\n                px: 4,\n                '&:hover': {\n                  backgroundColor: '#229954'\n                }\n              }}\n            >\n              {item ? '✅ Update Item' : '➕ Add Item'}\n            </Button>\n          </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default EnhancedScopeItemForm;","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Box,\n  Typography,\n  LinearProgress,\n  Alert,\n  List,\n  ListItem,\n  ListItemText\n} from '@mui/material';\nimport { CloudUpload as UploadIcon } from '@mui/icons-material';\n\nconst ScopeImportDialog = ({ open, onClose, onImport, categories }) => {\n  const [file, setFile] = useState(null);\n  const [importing, setImporting] = useState(false);\n  const [previewData, setPreviewData] = useState([]);\n  const [error, setError] = useState('');\n\n  const handleFileSelect = (event) => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setError('');\n      // In a real implementation, you would parse the Excel file here\n      // For now, we'll simulate with sample data\n      setPreviewData([\n        {\n          description: 'Drywall Installation',\n          quantity: 500,\n          unitPrice: 15.50,\n          unit: 'sqm',\n          category: 'Millwork & Carpentry'\n        },\n        {\n          description: 'Electrical Outlets',\n          quantity: 25,\n          unitPrice: 45.00,\n          unit: 'pcs',\n          category: 'Electrical Systems'\n        }\n      ]);\n    }\n  };\n\n  const handleImport = async () => {\n    if (!file || previewData.length === 0) {\n      setError('Please select a valid Excel file');\n      return;\n    }\n\n    setImporting(true);\n    \n    try {\n      // Simulate import delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      onImport(previewData);\n      handleClose();\n    } catch (error) {\n      setError('Failed to import items');\n    } finally {\n      setImporting(false);\n    }\n  };\n\n  const handleClose = () => {\n    setFile(null);\n    setPreviewData([]);\n    setError('');\n    setImporting(false);\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>Import Scope Items from Excel</DialogTitle>\n      \n      <DialogContent>\n        {/* File Upload Area */}\n        <Box sx={{ \n          border: '2px dashed #E9ECEF', \n          borderRadius: 2, \n          p: 4,\n          textAlign: 'center',\n          backgroundColor: '#F8F9FA',\n          mb: 3\n        }}>\n          <input\n            accept=\".xlsx,.xls,.csv\"\n            style={{ display: 'none' }}\n            id=\"excel-upload\"\n            type=\"file\"\n            onChange={handleFileSelect}\n          />\n          <label htmlFor=\"excel-upload\">\n            <Button\n              variant=\"contained\"\n              component=\"span\"\n              startIcon={<UploadIcon />}\n              sx={{ \n                borderRadius: '20px',\n                textTransform: 'none',\n                fontWeight: 600,\n                mb: 2\n              }}\n            >\n              Select Excel File\n            </Button>\n          </label>\n          \n          {file && (\n            <Typography variant=\"body2\" sx={{ color: '#27AE60', mb: 2 }}>\n              Selected: {file.name}\n            </Typography>\n          )}\n          \n          <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n            Supported formats: .xlsx, .xls, .csv\n          </Typography>\n          \n          <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\" sx={{ mt: 1 }}>\n            Required columns: Description, Quantity, Unit Price, Unit, Category\n          </Typography>\n        </Box>\n\n        {/* Error Message */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Import Progress */}\n        {importing && (\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"body2\" gutterBottom>\n              Importing scope items...\n            </Typography>\n            <LinearProgress />\n          </Box>\n        )}\n\n        {/* Preview Data */}\n        {previewData.length > 0 && !importing && (\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Preview ({previewData.length} items)\n            </Typography>\n            <List dense>\n              {previewData.slice(0, 5).map((item, index) => (\n                <ListItem key={index} divider>\n                  <ListItemText\n                    primary={item.description}\n                    secondary={`${item.quantity} ${item.unit} × $${item.unitPrice} = $${(item.quantity * item.unitPrice).toLocaleString()}`}\n                  />\n                </ListItem>\n              ))}\n              {previewData.length > 5 && (\n                <ListItem>\n                  <ListItemText\n                    primary={`... and ${previewData.length - 5} more items`}\n                  />\n                </ListItem>\n              )}\n            </List>\n          </Box>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button \n          onClick={handleClose}\n          disabled={importing}\n          sx={{ \n            borderRadius: '20px',\n            textTransform: 'none',\n            fontWeight: 600\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={handleImport}\n          variant=\"contained\"\n          disabled={!file || previewData.length === 0 || importing}\n          sx={{ \n            borderRadius: '20px',\n            textTransform: 'none',\n            fontWeight: 600,\n            backgroundColor: '#27AE60',\n            '&:hover': {\n              backgroundColor: '#229954'\n            }\n          }}\n        >\n          {importing ? 'Importing...' : `Import ${previewData.length} Items`}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ScopeImportDialog;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Grid,\n  Card,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Chip,\n  Alert,\n  Snackbar\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  FileUpload as ImportIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  AttachFile as AttachFileIcon,\n  Download as DownloadIcon\n} from '@mui/icons-material';\nimport EnhancedScopeItemForm from './EnhancedScopeItemForm';\nimport ScopeImportDialog from './ScopeImportDialog';\nimport apiService from '../../../services/api/apiService';\nimport PageWrapper from '../../../components/layout/PageWrapper';\n\nconst EnhancedProjectScope = ({ project, onClose }) => {\n  const [scopeItems, setScopeItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [importDialogOpen, setImportDialogOpen] = useState(false);\n  const [editingItem, setEditingItem] = useState(null);\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'success' });\n\n  // Construction/Millwork categories\n  const scopeCategories = [\n    'Demolition',\n    'Structural Work',\n    'MEP (Mechanical, Electrical, Plumbing)',\n    'Millwork & Carpentry',\n    'Flooring & Tiling',\n    'Painting & Finishing',\n    'Glass & Glazing',\n    'Hardware & Accessories',\n    'Insulation',\n    'Waterproofing',\n    'HVAC Systems',\n    'Electrical Systems',\n    'Fire Safety',\n    'Security Systems',\n    'General Contractor Items'\n  ];\n\n  useEffect(() => {\n    loadScopeItems();\n  }, [project.id]);\n\n  const loadScopeItems = async () => {\n    try {\n      setLoading(true);\n      const items = await apiService.getScopeItems(project.id);\n      setScopeItems(items || []);\n    } catch (error) {\n      console.error('Error loading scope items:', error);\n      showNotification('Failed to load scope items', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const showNotification = (message, severity = 'success') => {\n    setNotification({ open: true, message, severity });\n  };\n\n  const handleAddScopeItem = async (itemData) => {\n    try {\n      const newItem = {\n        ...itemData,\n        id: Date.now(),\n        projectId: project.id,\n        createdAt: new Date().toISOString(),\n        totalPrice: parseFloat(itemData.quantity) * parseFloat(itemData.unitPrice)\n      };\n\n      await apiService.createScopeItem(newItem);\n      setScopeItems([...scopeItems, newItem]);\n      setAddDialogOpen(false);\n      showNotification('Scope item added successfully');\n    } catch (error) {\n      console.error('Error adding scope item:', error);\n      showNotification('Failed to add scope item', 'error');\n    }\n  };\n\n  const handleEditScopeItem = async (itemData) => {\n    try {\n      const updatedItem = {\n        ...itemData,\n        totalPrice: parseFloat(itemData.quantity) * parseFloat(itemData.unitPrice),\n        updatedAt: new Date().toISOString()\n      };\n\n      await apiService.updateScopeItem(editingItem.id, updatedItem);\n      setScopeItems(scopeItems.map(item => \n        item.id === editingItem.id ? updatedItem : item\n      ));\n      setEditingItem(null);\n      showNotification('Scope item updated successfully');\n    } catch (error) {\n      console.error('Error updating scope item:', error);\n      showNotification('Failed to update scope item', 'error');\n    }\n  };\n\n  const handleDeleteScopeItem = async (itemId) => {\n    if (window.confirm('Are you sure you want to delete this scope item?')) {\n      try {\n        await apiService.deleteScopeItem(itemId);\n        setScopeItems(scopeItems.filter(item => item.id !== itemId));\n        showNotification('Scope item deleted successfully');\n      } catch (error) {\n        console.error('Error deleting scope item:', error);\n        showNotification('Failed to delete scope item', 'error');\n      }\n    }\n  };\n\n  const handleImportItems = async (importedItems) => {\n    try {\n      const newItems = importedItems.map(item => ({\n        ...item,\n        id: Date.now() + Math.random(),\n        projectId: project.id,\n        createdAt: new Date().toISOString(),\n        totalPrice: parseFloat(item.quantity || 0) * parseFloat(item.unitPrice || 0)\n      }));\n\n      for (const item of newItems) {\n        await apiService.createScopeItem(item);\n      }\n\n      setScopeItems([...scopeItems, ...newItems]);\n      setImportDialogOpen(false);\n      showNotification(`Successfully imported ${newItems.length} scope items`);\n    } catch (error) {\n      console.error('Error importing scope items:', error);\n      showNotification('Failed to import scope items', 'error');\n    }\n  };\n\n  const downloadExcelTemplate = () => {\n    // Create CSV content for Excel template\n    const csvContent = [\n      ['Description', 'Category', 'Quantity', 'Unit', 'Unit Price', 'Notes'],\n      ['Example: Install Kitchen Cabinets', 'Millwork & Carpentry', '10', 'sqft', '150', 'Premium oak finish'],\n      ['Example: Electrical Wiring', 'Electrical Systems', '500', 'lft', '12', 'Include outlets and switches'],\n      ['Example: Flooring Installation', 'Flooring & Tiling', '200', 'sqft', '45', 'Hardwood flooring']\n    ].map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\n\n    // Create and download file\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `scope_items_template_${project.name.replace(/\\s+/g, '_')}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      showNotification('Excel template downloaded successfully');\n    }\n  };\n\n  // Calculate summary statistics\n  const totalItems = scopeItems.length;\n  const totalQuantity = scopeItems.reduce((sum, item) => sum + (parseFloat(item.quantity) || 0), 0);\n  const totalValue = scopeItems.reduce((sum, item) => sum + (item.totalPrice || 0), 0);\n\n  return (\n    <PageWrapper\n      pageType=\"project-scope\"\n      pageTitle=\"Scope Management\"\n      pageData={{\n        projectId: project.id,\n        projectName: project.name,\n        status: project.status,\n        type: project.type\n      }}\n      subtitle={`${totalItems} items • $${totalValue.toLocaleString()} total value`}\n      actions={[\n        {\n          icon: <DownloadIcon />,\n          label: 'Download Template',\n          onClick: downloadExcelTemplate,\n          color: 'success'\n        },\n        {\n          icon: <ImportIcon />,\n          label: 'Import Excel',\n          onClick: () => setImportDialogOpen(true),\n          color: 'default'\n        },\n        {\n          icon: <AddIcon />,\n          label: 'Add Item',\n          onClick: () => setAddDialogOpen(true),\n          color: 'primary'\n        }\n      ]}\n      onNavigate={(path) => {\n        if (path === '/projects') {\n          onClose();\n        }\n      }}\n      contentPadding={0}\n    >\n      <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n\n      {/* Summary Cards */}\n      <Box sx={{ p: 3 }}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ \n              borderRadius: 3, \n              border: '1px solid #E9ECEF',\n              boxShadow: 'none'\n            }}>\n              <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                <Box sx={{ \n                  width: 60, \n                  height: 60, \n                  backgroundColor: '#3498DB', \n                  borderRadius: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: '0 auto 16px'\n                }}>\n                  <Typography variant=\"h4\" sx={{ color: 'white', fontWeight: 'bold' }}>\n                    📋\n                  </Typography>\n                </Box>\n                <Typography variant=\"h3\" sx={{ fontWeight: 'bold', color: '#2C3E50', mb: 1 }}>\n                  {totalItems}\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Total Items\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Card sx={{ \n              borderRadius: 3, \n              border: '1px solid #E9ECEF',\n              boxShadow: 'none'\n            }}>\n              <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                <Box sx={{ \n                  width: 60, \n                  height: 60, \n                  backgroundColor: '#27AE60', \n                  borderRadius: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: '0 auto 16px'\n                }}>\n                  <Typography variant=\"h4\" sx={{ color: 'white', fontWeight: 'bold' }}>\n                    📊\n                  </Typography>\n                </Box>\n                <Typography variant=\"h3\" sx={{ fontWeight: 'bold', color: '#2C3E50', mb: 1 }}>\n                  {totalQuantity.toFixed(0)}\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Total Quantity\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Card sx={{ \n              borderRadius: 3, \n              border: '1px solid #E9ECEF',\n              boxShadow: 'none'\n            }}>\n              <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                <Box sx={{ \n                  width: 60, \n                  height: 60, \n                  backgroundColor: '#F39C12', \n                  borderRadius: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: '0 auto 16px'\n                }}>\n                  <Typography variant=\"h4\" sx={{ color: 'white', fontWeight: 'bold' }}>\n                    💰\n                  </Typography>\n                </Box>\n                <Typography variant=\"h3\" sx={{ fontWeight: 'bold', color: '#2C3E50', mb: 1 }}>\n                  ${totalValue.toLocaleString()}\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Total Value\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* Scope Items Table */}\n      <Box sx={{ flexGrow: 1, mx: 3, mb: 3 }}>\n        <Paper sx={{ \n          borderRadius: 3, \n          border: '1px solid #E9ECEF',\n          boxShadow: 'none',\n          overflow: 'hidden'\n        }}>\n          <TableContainer sx={{ maxHeight: 'calc(100vh - 400px)' }}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Category</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Description</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Unit</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Quantity</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Unit Price</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Total</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {scopeItems.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={7} sx={{ textAlign: 'center', py: 8 }}>\n                      <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n                        No scope items found. Click \"Add Item\" to get started.\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  scopeItems.map((item) => (\n                    <TableRow key={item.id} hover>\n                      <TableCell>\n                        <Chip \n                          label={item.category || 'Uncategorized'} \n                          size=\"small\"\n                          sx={{ \n                            backgroundColor: '#E3F2FD',\n                            color: '#1976D2'\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          {item.description}\n                        </Typography>\n                        {item.notes && (\n                          <Typography variant=\"caption\" color=\"textSecondary\">\n                            {item.notes}\n                          </Typography>\n                        )}\n                      </TableCell>\n                      <TableCell>{item.unit || 'pcs'}</TableCell>\n                      <TableCell>{item.quantity}</TableCell>\n                      <TableCell>${parseFloat(item.unitPrice || 0).toLocaleString()}</TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\n                          ${(item.totalPrice || 0).toLocaleString()}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Box sx={{ display: 'flex', gap: 1 }}>\n                          <IconButton \n                            size=\"small\"\n                            onClick={() => setEditingItem(item)}\n                            sx={{ color: '#3498DB' }}\n                          >\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                          <IconButton \n                            size=\"small\"\n                            onClick={() => handleDeleteScopeItem(item.id)}\n                            sx={{ color: '#E74C3C' }}\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                          {item.attachments && (\n                            <IconButton \n                              size=\"small\"\n                              sx={{ color: '#95A5A6' }}\n                            >\n                              <AttachFileIcon fontSize=\"small\" />\n                            </IconButton>\n                          )}\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Box>\n\n      {/* Add/Edit Scope Item Dialog */}\n      <Dialog \n        open={addDialogOpen || !!editingItem} \n        onClose={() => {\n          setAddDialogOpen(false);\n          setEditingItem(null);\n        }}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          {editingItem ? 'Edit Scope Item' : 'Add New Scope Item'}\n        </DialogTitle>\n        <DialogContent>\n          <EnhancedScopeItemForm\n            item={editingItem}\n            categories={scopeCategories}\n            onSubmit={editingItem ? handleEditScopeItem : handleAddScopeItem}\n            onCancel={() => {\n              setAddDialogOpen(false);\n              setEditingItem(null);\n            }}\n          />\n        </DialogContent>\n      </Dialog>\n\n      {/* Import Dialog */}\n      <ScopeImportDialog\n        open={importDialogOpen}\n        onClose={() => setImportDialogOpen(false)}\n        onImport={handleImportItems}\n        categories={scopeCategories}\n      />\n\n      {/* Notification Snackbar */}\n      <Snackbar\n        open={notification.open}\n        autoHideDuration={6000}\n        onClose={() => setNotification({ ...notification, open: false })}\n      >\n        <Alert \n          onClose={() => setNotification({ ...notification, open: false })} \n          severity={notification.severity}\n          sx={{ width: '100%' }}\n        >\n          {notification.message}\n        </Alert>\n      </Snackbar>\n      </Box>\n    </PageWrapper>\n  );\n};\n\nexport default EnhancedProjectScope;","import React from 'react';\nimport { \n  Box, \n  Typography, \n  Breadcrumbs, \n  Link, \n  IconButton,\n  Paper,\n  Chip,\n  Tooltip,\n  useMediaQuery,\n  useTheme\n} from '@mui/material';\nimport { \n  Home,\n  Business,\n  ArrowBack,\n  NavigateNext,\n  Edit,\n  Delete,\n  Share,\n  MoreHoriz,\n  Star,\n  StarBorder\n} from '@mui/icons-material';\n\nconst UniversalBreadcrumb = ({ \n  // Navigation data\n  currentPath = [],\n  onNavigate,\n  \n  // Page info\n  title,\n  subtitle,\n  itemType, // 'project', 'task', 'team', 'client'\n  itemId,\n  itemData = {},\n  \n  // Actions\n  actions = [],\n  onEdit,\n  onDelete,\n  onShare,\n  showMoreActions = false,\n  \n  // Favorites\n  isStarred = false,\n  onToggleStar,\n  \n  // Mobile support\n  showBackButton = true,\n  \n  // Custom styling\n  backgroundColor = 'white',\n  elevation = 0\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  // Generate breadcrumb items\n  const generateBreadcrumbs = () => {\n    const breadcrumbs = [\n      {\n        label: 'Formula PM',\n        icon: <Home sx={{ fontSize: 16 }} />,\n        href: '/',\n        onClick: () => onNavigate && onNavigate('/')\n      },\n      {\n        label: 'Team Space',\n        icon: <Business sx={{ fontSize: 16 }} />,\n        href: '/dashboard',\n        onClick: () => onNavigate && onNavigate('/dashboard')\n      }\n    ];\n\n    // Add dynamic path items\n    currentPath.forEach((pathItem, index) => {\n      breadcrumbs.push({\n        label: pathItem.label,\n        href: pathItem.href,\n        onClick: () => onNavigate && onNavigate(pathItem.href),\n        isLast: index === currentPath.length - 1\n      });\n    });\n\n    return breadcrumbs;\n  };\n\n  const breadcrumbItems = generateBreadcrumbs();\n\n  // Handle back navigation\n  const handleBack = () => {\n    if (currentPath.length > 0) {\n      const previousPath = currentPath[currentPath.length - 1];\n      if (onNavigate && previousPath.href) {\n        onNavigate(previousPath.href);\n      } else {\n        window.history.back();\n      }\n    } else {\n      window.history.back();\n    }\n  };\n\n  // Action button configurations\n  const actionButtons = [\n    ...(actions || []),\n    ...(onEdit ? [{ \n      icon: <Edit />, \n      label: 'Edit', \n      onClick: onEdit,\n      color: 'primary'\n    }] : []),\n    ...(onShare ? [{ \n      icon: <Share />, \n      label: 'Share', \n      onClick: onShare,\n      color: 'default'\n    }] : []),\n    ...(onDelete ? [{ \n      icon: <Delete />, \n      label: 'Delete', \n      onClick: onDelete,\n      color: 'error'\n    }] : [])\n  ];\n\n  return (\n    <Paper\n      elevation={elevation}\n      sx={{\n        backgroundColor,\n        borderBottom: '1px solid #E9ECEF',\n        px: { xs: 2, md: 4 },\n        py: 3,\n        borderRadius: 0\n      }}\n    >\n      {/* Mobile Back Button */}\n      {isMobile && showBackButton && (\n        <Box sx={{ mb: 2 }}>\n          <IconButton \n            onClick={handleBack}\n            size=\"small\"\n            sx={{ \n              color: '#7F8C8D',\n              '&:hover': { color: '#2C3E50' }\n            }}\n          >\n            <ArrowBack />\n          </IconButton>\n        </Box>\n      )}\n\n      {/* Desktop Breadcrumbs */}\n      {!isMobile && (\n        <Breadcrumbs \n          separator={<NavigateNext fontSize=\"small\" />}\n          sx={{ \n            mb: 2, \n            fontSize: '0.875rem',\n            '& .MuiBreadcrumbs-separator': {\n              color: '#7F8C8D'\n            }\n          }}\n        >\n          {breadcrumbItems.map((crumb, index) => {\n            const isLast = index === breadcrumbItems.length - 1;\n            \n            if (isLast) {\n              return (\n                <Typography \n                  key={index}\n                  color=\"text.primary\" \n                  fontWeight={500}\n                  sx={{ \n                    color: '#2C3E50',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 0.5\n                  }}\n                >\n                  {crumb.icon}\n                  {crumb.label}\n                </Typography>\n              );\n            }\n\n            return (\n              <Link\n                key={index}\n                underline=\"hover\"\n                color=\"inherit\"\n                href={crumb.href || '#'}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (crumb.onClick) crumb.onClick();\n                }}\n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  gap: 0.5,\n                  color: '#7F8C8D',\n                  cursor: 'pointer',\n                  '&:hover': { color: '#2C3E50' }\n                }}\n              >\n                {crumb.icon}\n                {crumb.label}\n              </Link>\n            );\n          })}\n        </Breadcrumbs>\n      )}\n\n      {/* Main Header Section */}\n      <Box sx={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: { xs: 'flex-start', md: 'center' },\n        flexDirection: { xs: 'column', md: 'row' },\n        gap: { xs: 2, md: 0 }\n      }}>\n        {/* Left Side - Title and Info */}\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, flex: 1 }}>\n          {/* Title with Star */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Typography \n              variant=\"h4\" \n              sx={{ \n                fontWeight: 700, \n                color: '#2C3E50',\n                fontSize: { xs: '1.5rem', md: '1.75rem' }\n              }}\n            >\n              {title}\n            </Typography>\n            \n            {onToggleStar && (\n              <Tooltip title={isStarred ? \"Remove from favorites\" : \"Add to favorites\"}>\n                <IconButton \n                  size=\"small\" \n                  onClick={onToggleStar}\n                  sx={{ \n                    color: isStarred ? '#F39C12' : '#BDC3C7',\n                    '&:hover': {\n                      color: isStarred ? '#E67E22' : '#F39C12'\n                    }\n                  }}\n                >\n                  {isStarred ? <Star /> : <StarBorder />}\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n\n          {/* Subtitle and Metadata */}\n          {(subtitle || itemData.status || itemData.type) && (\n            <Box sx={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: 1, \n              flexWrap: 'wrap',\n              ml: { xs: 0, md: 2 }\n            }}>\n              {subtitle && (\n                <Typography \n                  variant=\"body2\" \n                  sx={{ \n                    color: '#7F8C8D',\n                    fontSize: '0.9rem'\n                  }}\n                >\n                  {subtitle}\n                </Typography>\n              )}\n              \n              {itemData.status && (\n                <Chip \n                  label={itemData.status}\n                  size=\"small\"\n                  sx={{\n                    height: 24,\n                    fontSize: '0.75rem',\n                    backgroundColor: getStatusColor(itemData.status),\n                    color: 'white',\n                    fontWeight: 600\n                  }}\n                />\n              )}\n              \n              {itemData.type && (\n                <Chip \n                  label={itemData.type}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  sx={{\n                    height: 24,\n                    fontSize: '0.75rem',\n                    borderColor: '#D5DBDB',\n                    color: '#7F8C8D'\n                  }}\n                />\n              )}\n            </Box>\n          )}\n        </Box>\n\n        {/* Right Side - Actions */}\n        {actionButtons.length > 0 && (\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: 1.5,\n            flexShrink: 0\n          }}>\n            {actionButtons.slice(0, isMobile ? 2 : 4).map((action, index) => (\n              <Tooltip key={index} title={action.label}>\n                <IconButton \n                  onClick={action.onClick}\n                  size=\"small\"\n                  sx={{ \n                    backgroundColor: action.color === 'primary' ? '#3498DB' : '#F8F9FA',\n                    color: action.color === 'primary' ? 'white' : \n                           action.color === 'error' ? '#E74C3C' : '#7F8C8D',\n                    border: action.color === 'primary' ? 'none' : '1px solid #E9ECEF',\n                    borderRadius: 2,\n                    width: 36,\n                    height: 36,\n                    '&:hover': { \n                      backgroundColor: action.color === 'primary' ? '#2980B9' :\n                                     action.color === 'error' ? '#fadbd8' : '#ECF0F1',\n                      transform: 'translateY(-1px)',\n                      boxShadow: action.color === 'primary' ? '0 4px 12px rgba(52, 152, 219, 0.3)' : 'none'\n                    }\n                  }}\n                >\n                  {action.icon}\n                </IconButton>\n              </Tooltip>\n            ))}\n            \n            {(actionButtons.length > (isMobile ? 2 : 4) || showMoreActions) && (\n              <Tooltip title=\"More options\">\n                <IconButton \n                  size=\"small\"\n                  sx={{ \n                    backgroundColor: '#F8F9FA',\n                    border: '1px solid #E9ECEF',\n                    borderRadius: 2,\n                    width: 36,\n                    height: 36,\n                    '&:hover': { \n                      backgroundColor: '#ECF0F1',\n                      border: '1px solid #D5DBDB'\n                    }\n                  }}\n                >\n                  <MoreHoriz sx={{ fontSize: 18 }} />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\n// Helper function to get status colors\nconst getStatusColor = (status) => {\n  const statusColors = {\n    'completed': '#27AE60',\n    'active': '#8E44AD',\n    'in-progress': '#F39C12',\n    'in_progress': '#F39C12',\n    'pending': '#3498DB',\n    'on-hold': '#E67E22',\n    'on_hold': '#E67E22',\n    'cancelled': '#E74C3C',\n    'awarded': '#27AE60',\n    'on-tender': '#3498DB',\n    'on_tender': '#3498DB',\n    'not-awarded': '#E74C3C',\n    'not_awarded': '#E74C3C'\n  };\n  \n  return statusColors[status?.toLowerCase()] || '#95A5A6';\n};\n\nexport default UniversalBreadcrumb;","import React, { useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport UniversalBreadcrumb from '../ui/UniversalBreadcrumb';\nimport { useNavigation } from '../../context';\n\nconst PageWrapper = ({ \n  // Page identification\n  pageType,\n  pageTitle,\n  pageData = {},\n  \n  // Navigation\n  parentPath,\n  onNavigate,\n  \n  // Breadcrumb customization\n  subtitle,\n  actions = [],\n  \n  // Favorites\n  isStarred = false,\n  onToggleStar,\n  \n  // Action handlers\n  onEdit,\n  onDelete,\n  onShare,\n  \n  // Content\n  children,\n  \n  // Styling\n  showBreadcrumb = true,\n  breadcrumbElevation = 0,\n  contentPadding = 3\n}) => {\n  const { navigateTo, getBreadcrumbConfig } = useNavigation();\n\n  // Update navigation context when page loads\n  useEffect(() => {\n    if (pageType && pageTitle) {\n      navigateTo({\n        title: pageTitle,\n        path: window.location.pathname,\n        type: pageType,\n        parentPath,\n        data: pageData\n      });\n    }\n  }, [pageType, pageTitle, parentPath, pageData, navigateTo]);\n\n  // Handle navigation events\n  const handleNavigate = (path) => {\n    if (onNavigate) {\n      onNavigate(path);\n    } else {\n      // Default navigation behavior - update URL and trigger route change\n      window.history.pushState({}, '', path);\n      // You might want to trigger a route change event here\n      // depending on your routing solution\n    }\n  };\n\n  const breadcrumbConfig = getBreadcrumbConfig();\n\n  return (\n    <Box sx={{ minHeight: '100vh', backgroundColor: '#F8F9FA' }}>\n      {/* Universal Breadcrumb */}\n      {showBreadcrumb && (\n        <UniversalBreadcrumb\n          currentPath={breadcrumbConfig.currentPath}\n          title={pageTitle}\n          subtitle={subtitle}\n          itemType={pageType}\n          itemData={pageData}\n          actions={actions}\n          isStarred={isStarred}\n          onToggleStar={onToggleStar}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onShare={onShare}\n          onNavigate={handleNavigate}\n          elevation={breadcrumbElevation}\n        />\n      )}\n\n      {/* Page Content */}\n      <Box sx={{ p: contentPadding }}>\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default PageWrapper;"],"names":["_ref","item","categories","onSubmit","onCancel","formData","setFormData","useState","description","quantity","unitPrice","unit","category","notes","attachments","totalPrice","setTotalPrice","useEffect","qty","parseFloat","price","handleChange","field","event","_objectSpread","target","value","_jsx","Box","component","preventDefault","trim","alert","sx","mt","children","_jsxs","display","flexDirection","gap","TextField","fullWidth","label","required","onChange","placeholder","InputProps","startAdornment","InputAdornment","position","FormControl","InputLabel","Select","displayEmpty","MenuItem","map","type","inputProps","step","min","Paper","p","backgroundColor","border","borderRadius","Typography","variant","color","fontWeight","textAlign","toLocaleString","multiline","rows","alignSelf","mb","accept","style","id","file","files","name","htmlFor","Button","startIcon","AttachFileIcon","textTransform","justifyContent","pt","borderTop","onClick","px","open","onClose","onImport","setFile","importing","setImporting","previewData","setPreviewData","error","setError","handleClose","Dialog","maxWidth","DialogTitle","DialogContent","selectedFile","UploadIcon","Alert","severity","gutterBottom","LinearProgress","length","List","dense","slice","index","ListItem","divider","ListItemText","primary","secondary","concat","DialogActions","disabled","async","Promise","resolve","setTimeout","project","scopeItems","setScopeItems","loading","setLoading","addDialogOpen","setAddDialogOpen","importDialogOpen","setImportDialogOpen","editingItem","setEditingItem","notification","setNotification","message","scopeCategories","loadScopeItems","items","apiService","getScopeItems","console","showNotification","arguments","undefined","totalItems","totalQuantity","reduce","sum","totalValue","PageWrapper","pageType","pageTitle","pageData","projectId","projectName","status","subtitle","actions","icon","DownloadIcon","downloadExcelTemplate","csvContent","row","cell","join","blob","Blob","link","document","createElement","download","url","URL","createObjectURL","setAttribute","replace","visibility","body","appendChild","click","removeChild","ImportIcon","AddIcon","onNavigate","path","contentPadding","height","Grid","container","spacing","xs","md","Card","boxShadow","CardContent","py","width","alignItems","margin","toFixed","flexGrow","mx","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","colSpan","hover","Chip","size","IconButton","EditIcon","fontSize","window","confirm","deleteScopeItem","itemId","filter","handleDeleteScopeItem","DeleteIcon","EnhancedScopeItemForm","updatedItem","itemData","updatedAt","Date","toISOString","updateScopeItem","newItem","now","createdAt","createScopeItem","ScopeImportDialog","newItems","importedItems","Math","random","Snackbar","autoHideDuration","getStatusColor","toLowerCase","currentPath","title","itemType","onEdit","onDelete","onShare","showMoreActions","isStarred","onToggleStar","showBackButton","elevation","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","breadcrumbItems","generateBreadcrumbs","breadcrumbs","Home","href","Business","forEach","pathItem","push","isLast","actionButtons","Edit","Share","Delete","borderBottom","handleBack","previousPath","history","back","ArrowBack","Breadcrumbs","separator","NavigateNext","crumb","Link","underline","e","cursor","flex","Tooltip","Star","StarBorder","flexWrap","ml","borderColor","flexShrink","action","transform","MoreHoriz","parentPath","showBreadcrumb","breadcrumbElevation","navigateTo","getBreadcrumbConfig","useNavigation","location","pathname","data","breadcrumbConfig","minHeight","UniversalBreadcrumb","pushState"],"sourceRoot":""}