{"version":3,"file":"static/js/145.0cf705a4.chunk.js","mappings":"siBAiBA,MA6LA,EA7L0BA,IAA8C,IAA7C,KAAEC,EAAI,QAAEC,EAAO,SAAEC,EAAQ,WAAEC,GAAYJ,EAChE,MAAOK,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAgD7BO,EAAcA,KAClBR,EAAQ,MACRK,EAAe,IACfE,EAAS,IACTJ,GAAa,GACbP,KAGF,OACEa,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACf,KAAMA,EAAMC,QAASY,EAAaG,SAAS,KAAKC,WAAS,EAAAC,SAAA,EAC/DC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,SAAC,mCAEbJ,EAAAA,EAAAA,MAACO,EAAAA,EAAa,CAAAH,SAAA,EAEZJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CACPC,OAAQ,qBACRC,aAAc,EACdC,EAAG,EACHC,UAAW,SACXC,gBAAiB,UACjBC,GAAI,GACJX,SAAA,EACAC,EAAAA,EAAAA,KAAA,SACEW,OAAO,kBACPC,MAAO,CAAEC,QAAS,QAClBC,GAAG,eACHC,KAAK,OACLC,SAzEgBC,IACxB,MAAMC,EAAeD,EAAME,OAAOC,MAAM,GACpCF,IACFhC,EAAQgC,GACRzB,EAAS,IAGTF,EAAe,CACb,CACE8B,YAAa,uBACbC,SAAU,IACVC,UAAW,KACXC,KAAM,MACNC,SAAU,wBAEZ,CACEJ,YAAa,qBACbC,SAAU,GACVC,UAAW,GACXC,KAAM,MACNC,SAAU,6BAuDVzB,EAAAA,EAAAA,KAAA,SAAO0B,QAAQ,eAAc3B,UAC3BC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,YACRC,UAAU,OACVC,WAAW9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,IACtB3B,GAAI,CACFE,aAAc,OACd0B,cAAe,OACfC,WAAY,IACZvB,GAAI,GACJX,SACH,wBAKFd,IACCU,EAAAA,EAAAA,MAACuC,EAAAA,EAAU,CAACN,QAAQ,QAAQxB,GAAI,CAAE+B,MAAO,UAAWzB,GAAI,GAAIX,SAAA,CAAC,aAChDd,EAAKmD,SAIpBpC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,UAAUf,QAAQ,QAAQsB,MAAM,gBAAepC,SAAC,0CAIpEC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,UAAUf,QAAQ,QAAQsB,MAAM,gBAAgB/B,GAAI,CAAEiC,GAAI,GAAItC,SAAC,2EAMpFP,IACCQ,EAAAA,EAAAA,KAACsC,EAAAA,EAAK,CAACC,SAAS,QAAQnC,GAAI,CAAEM,GAAI,GAAIX,SACnCP,IAKJJ,IACCO,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAEM,GAAI,GAAIX,SAAA,EACjBC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,QAAQY,cAAY,EAAAzC,SAAC,8BAGzCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,OAKlBnD,EAAYoD,OAAS,IAAMtD,IAC1BO,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAEM,GAAI,GAAIX,SAAA,EACjBJ,EAAAA,EAAAA,MAACuC,EAAAA,EAAU,CAACN,QAAQ,KAAKY,cAAY,EAAAzC,SAAA,CAAC,YAC1BT,EAAYoD,OAAO,cAE/B/C,EAAAA,EAAAA,MAACgD,EAAAA,EAAI,CAACC,OAAK,EAAA7C,SAAA,CACRT,EAAYuD,MAAM,EAAG,GAAGC,KAAI,CAACC,EAAMC,KAClChD,EAAAA,EAAAA,KAACiD,EAAAA,GAAQ,CAAaC,SAAO,EAAAnD,UAC3BC,EAAAA,EAAAA,KAACmD,EAAAA,EAAY,CACXC,QAASL,EAAK1B,YACdgC,UAAS,GAAAC,OAAKP,EAAKzB,SAAQ,KAAAgC,OAAIP,EAAKvB,KAAI,WAAA8B,OAAOP,EAAKxB,UAAS,QAAA+B,QAAQP,EAAKzB,SAAWyB,EAAKxB,WAAWgC,qBAH1FP,KAOhB1D,EAAYoD,OAAS,IACpB1C,EAAAA,EAAAA,KAACiD,EAAAA,GAAQ,CAAAlD,UACPC,EAAAA,EAAAA,KAACmD,EAAAA,EAAY,CACXC,QAAO,WAAAE,OAAahE,EAAYoD,OAAS,EAAC,6BASxD/C,EAAAA,EAAAA,MAAC6D,EAAAA,EAAa,CAAAzD,SAAA,EACZC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACL8B,QAAS/D,EACTgE,SAAUtE,EACVgB,GAAI,CACFE,aAAc,OACd0B,cAAe,OACfC,WAAY,KACZlC,SACH,YAGDC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACL8B,QAzIaE,UACnB,GAAK1E,GAA+B,IAAvBK,EAAYoD,OAAzB,CAKArD,GAAa,GAEb,UAEQ,IAAIuE,SAAQC,GAAWC,WAAWD,EAAS,OACjD9E,EAASO,GACTI,GACF,CAAE,MAAOF,GACPC,EAAS,yBACX,CAAC,QACCJ,GAAa,EACf,CAbA,MAFEI,EAAS,qCAwILmC,QAAQ,YACR8B,UAAWzE,GAA+B,IAAvBK,EAAYoD,QAAgBtD,EAC/CgB,GAAI,CACFE,aAAc,OACd0B,cAAe,OACfC,WAAY,IACZxB,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAEnBV,SAEDX,EAAY,eAAc,UAAAkE,OAAahE,EAAYoD,OAAM,mB,0BCnKpE,MAwbA,EAxb6B9D,IAA2B,IAA1B,QAAEmF,EAAO,QAAEjF,GAASF,EAChD,MAAOoF,EAAYC,IAAiB9E,EAAAA,EAAAA,UAAS,KACtC+E,EAASC,IAAchF,EAAAA,EAAAA,WAAS,IAChCiF,EAAeC,IAAoBlF,EAAAA,EAAAA,WAAS,IAC5CmF,EAAkBC,IAAuBpF,EAAAA,EAAAA,WAAS,IAClDqF,EAAaC,IAAkBtF,EAAAA,EAAAA,UAAS,OACxCuF,EAAcC,IAAmBxF,EAAAA,EAAAA,UAAS,CAAEN,MAAM,EAAO+F,QAAS,GAAIrC,SAAU,YAGjFsC,EAAkB,CACtB,aACA,kBACA,yCACA,uBACA,oBACA,uBACA,kBACA,yBACA,aACA,gBACA,eACA,qBACA,cACA,mBACA,6BAGFC,EAAAA,EAAAA,YAAU,KACRC,MACC,CAAChB,EAAQjD,KAEZ,MAAMiE,EAAiBpB,UACrB,IACEQ,GAAW,GACX,MAAMa,QAAcC,EAAAA,QAAWC,cAAcnB,EAAQjD,IACrDmD,EAAce,GAAS,GACzB,CAAE,MAAOxF,GACP2F,QAAQ3F,MAAM,6BAA8BA,GAC5C4F,EAAiB,6BAA8B,QACjD,CAAC,QACCjB,GAAW,EACb,GAGIiB,EAAmB,SAACR,GACxBD,EAAgB,CAAE9F,MAAM,EAAM+F,UAASrC,SADE8C,UAAA3C,OAAA,QAAA4C,IAAAD,UAAA,GAAAA,UAAA,GAAG,WAE9C,EAuGME,EAAavB,EAAWtB,OACxB8C,EAAgBxB,EAAWyB,QAAO,CAACC,EAAK3C,IAAS2C,GAAOC,WAAW5C,EAAKzB,WAAa,IAAI,GACzFsE,EAAa5B,EAAWyB,QAAO,CAACC,EAAK3C,IAAS2C,GAAO3C,EAAK8C,YAAc,IAAI,GAElF,OACE7F,EAAAA,EAAAA,KAAC8F,EAAAA,EAAW,CACVC,SAAS,gBACTC,UAAU,mBACVC,SAAU,CACRC,UAAWnC,EAAQjD,GACnBqF,YAAapC,EAAQ3B,KACrBgE,OAAQrC,EAAQqC,OAChBrF,KAAMgD,EAAQhD,MAEhBsF,SAAQ,GAAA/C,OAAKiC,EAAU,mBAAAjC,OAAasC,EAAWrC,iBAAgB,gBAC/D+C,QAAS,CACP,CACEC,MAAMvG,EAAAA,EAAAA,KAACwG,EAAAA,EAAY,IACnBC,MAAO,oBACPhD,QA5CsBiD,KAE5B,MAAMC,EAAa,CACjB,CAAC,cAAe,WAAY,WAAY,OAAQ,aAAc,SAC9D,CAAC,oCAAqC,uBAAwB,KAAM,OAAQ,MAAO,sBACnF,CAAC,6BAA8B,qBAAsB,MAAO,MAAO,KAAM,gCACzE,CAAC,iCAAkC,oBAAqB,MAAO,OAAQ,KAAM,sBAC7E7D,KAAI8D,GAAOA,EAAI9D,KAAI+D,GAAI,IAAAvD,OAAQuD,EAAI,OAAKC,KAAK,OAAMA,KAAK,MAGpDC,EAAO,IAAIC,KAAK,CAACL,GAAa,CAAE5F,KAAM,4BACtCkG,EAAOC,SAASC,cAAc,KACpC,QAAsB7B,IAAlB2B,EAAKG,SAAwB,CAC/B,MAAMC,EAAMC,IAAIC,gBAAgBR,GAChCE,EAAKO,aAAa,OAAQH,GAC1BJ,EAAKO,aAAa,WAAW,wBAADlE,OAA0BS,EAAQ3B,KAAKqF,QAAQ,OAAQ,KAAI,SACvFR,EAAKrG,MAAM8G,WAAa,SACxBR,SAASS,KAAKC,YAAYX,GAC1BA,EAAKY,QACLX,SAASS,KAAKG,YAAYb,GAC1B7B,EAAiB,yCACnB,GAwBMjD,MAAO,WAET,CACEoE,MAAMvG,EAAAA,EAAAA,KAAC+H,EAAAA,EAAU,IACjBtB,MAAO,eACPhD,QAASA,IAAMc,GAAoB,GACnCpC,MAAO,WAET,CACEoE,MAAMvG,EAAAA,EAAAA,KAACgI,EAAAA,EAAO,IACdvB,MAAO,WACPhD,QAASA,IAAMY,GAAiB,GAChClC,MAAO,YAGX8F,WAAaC,IACE,cAATA,GACFpJ,KAGJqJ,eAAgB,EAAEpI,UAElBJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAEgI,OAAQ,OAAQvH,QAAS,OAAQwH,cAAe,UAAWtI,SAAA,EAGtEC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CAAEG,EAAG,GAAIR,UAChBJ,EAAAA,EAAAA,MAAC2I,EAAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAEzI,SAAA,EACzBC,EAAAA,EAAAA,KAACsI,EAAAA,EAAI,CAACvF,MAAI,EAAC0F,GAAI,GAAIC,GAAI,EAAE3I,UACvBC,EAAAA,EAAAA,KAAC2I,EAAAA,EAAI,CAACvI,GAAI,CACRE,aAAc,EACdD,OAAQ,oBACRuI,UAAW,QACX7I,UACAJ,EAAAA,EAAAA,MAACkJ,EAAAA,EAAW,CAACzI,GAAI,CAAEI,UAAW,SAAUsI,GAAI,GAAI/I,SAAA,EAC9CC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CACP2I,MAAO,GACPX,OAAQ,GACR3H,gBAAiB,UACjBH,aAAc,EACdO,QAAS,OACTmI,WAAY,SACZC,eAAgB,SAChBC,OAAQ,eACRnJ,UACAC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,KAAKxB,GAAI,CAAE+B,MAAO,QAASF,WAAY,QAASlC,SAAC,oBAIvEC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,KAAKxB,GAAI,CAAE6B,WAAY,OAAQE,MAAO,UAAWzB,GAAI,GAAIX,SAC1EwF,KAEHvF,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,QAAQO,MAAM,gBAAepC,SAAC,wBAOxDC,EAAAA,EAAAA,KAACsI,EAAAA,EAAI,CAACvF,MAAI,EAAC0F,GAAI,GAAIC,GAAI,EAAE3I,UACvBC,EAAAA,EAAAA,KAAC2I,EAAAA,EAAI,CAACvI,GAAI,CACRE,aAAc,EACdD,OAAQ,oBACRuI,UAAW,QACX7I,UACAJ,EAAAA,EAAAA,MAACkJ,EAAAA,EAAW,CAACzI,GAAI,CAAEI,UAAW,SAAUsI,GAAI,GAAI/I,SAAA,EAC9CC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CACP2I,MAAO,GACPX,OAAQ,GACR3H,gBAAiB,UACjBH,aAAc,EACdO,QAAS,OACTmI,WAAY,SACZC,eAAgB,SAChBC,OAAQ,eACRnJ,UACAC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,KAAKxB,GAAI,CAAE+B,MAAO,QAASF,WAAY,QAASlC,SAAC,oBAIvEC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,KAAKxB,GAAI,CAAE6B,WAAY,OAAQE,MAAO,UAAWzB,GAAI,GAAIX,SAC1EyF,EAAc2D,QAAQ,MAEzBnJ,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,QAAQO,MAAM,gBAAepC,SAAC,2BAOxDC,EAAAA,EAAAA,KAACsI,EAAAA,EAAI,CAACvF,MAAI,EAAC0F,GAAI,GAAIC,GAAI,EAAE3I,UACvBC,EAAAA,EAAAA,KAAC2I,EAAAA,EAAI,CAACvI,GAAI,CACRE,aAAc,EACdD,OAAQ,oBACRuI,UAAW,QACX7I,UACAJ,EAAAA,EAAAA,MAACkJ,EAAAA,EAAW,CAACzI,GAAI,CAAEI,UAAW,SAAUsI,GAAI,GAAI/I,SAAA,EAC9CC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CACP2I,MAAO,GACPX,OAAQ,GACR3H,gBAAiB,UACjBH,aAAc,EACdO,QAAS,OACTmI,WAAY,SACZC,eAAgB,SAChBC,OAAQ,eACRnJ,UACAC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,KAAKxB,GAAI,CAAE+B,MAAO,QAASF,WAAY,QAASlC,SAAC,oBAIvEJ,EAAAA,EAAAA,MAACuC,EAAAA,EAAU,CAACN,QAAQ,KAAKxB,GAAI,CAAE6B,WAAY,OAAQE,MAAO,UAAWzB,GAAI,GAAIX,SAAA,CAAC,IAC1E6F,EAAWrC,qBAEfvD,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,QAAQO,MAAM,gBAAepC,SAAC,6BAU5DC,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CAAEgJ,SAAU,EAAGC,GAAI,EAAG3I,GAAI,GAAIX,UACrCC,EAAAA,EAAAA,KAACsJ,EAAAA,EAAK,CAAClJ,GAAI,CACTE,aAAc,EACdD,OAAQ,oBACRuI,UAAW,OACXW,SAAU,UACVxJ,UACAC,EAAAA,EAAAA,KAACwJ,EAAAA,EAAc,CAACpJ,GAAI,CAAEqJ,UAAW,uBAAwB1J,UACvDJ,EAAAA,EAAAA,MAAC+J,EAAAA,EAAK,CAACC,cAAY,EAAA5J,SAAA,EACjBC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAS,CAAA7J,UACRJ,EAAAA,EAAAA,MAACkK,EAAAA,EAAQ,CAAA9J,SAAA,EACPC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAC1J,GAAI,CAAE6B,WAAY,IAAKxB,gBAAiB,WAAYV,SAAC,cAChEC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAC1J,GAAI,CAAE6B,WAAY,IAAKxB,gBAAiB,WAAYV,SAAC,iBAChEC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAC1J,GAAI,CAAE6B,WAAY,IAAKxB,gBAAiB,WAAYV,SAAC,UAChEC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAC1J,GAAI,CAAE6B,WAAY,IAAKxB,gBAAiB,WAAYV,SAAC,cAChEC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAC1J,GAAI,CAAE6B,WAAY,IAAKxB,gBAAiB,WAAYV,SAAC,gBAChEC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAC1J,GAAI,CAAE6B,WAAY,IAAKxB,gBAAiB,WAAYV,SAAC,WAChEC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAC1J,GAAI,CAAE6B,WAAY,IAAKxB,gBAAiB,WAAYV,SAAC,kBAGpEC,EAAAA,EAAAA,KAAC+J,EAAAA,EAAS,CAAAhK,SACe,IAAtBiE,EAAWtB,QACV1C,EAAAA,EAAAA,KAAC6J,EAAAA,EAAQ,CAAA9J,UACPC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAACE,QAAS,EAAG5J,GAAI,CAAEI,UAAW,SAAUsI,GAAI,GAAI/I,UACxDC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,KAAKO,MAAM,gBAAgBK,cAAY,EAAAzC,SAAC,+DAMhEiE,EAAWlB,KAAKC,IACdpD,EAAAA,EAAAA,MAACkK,EAAAA,EAAQ,CAAeI,OAAK,EAAAlK,SAAA,EAC3BC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAA/J,UACRC,EAAAA,EAAAA,KAACkK,EAAAA,EAAI,CACHzD,MAAO1D,EAAKtB,UAAY,gBACxB0I,KAAK,QACL/J,GAAI,CACFK,gBAAiB,UACjB0B,MAAO,gBAIbxC,EAAAA,EAAAA,MAACmK,EAAAA,EAAS,CAAA/J,SAAA,EACRC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,QAAQxB,GAAI,CAAE6B,WAAY,KAAMlC,SACjDgD,EAAK1B,cAEP0B,EAAKqH,QACJpK,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,UAAUO,MAAM,gBAAepC,SAChDgD,EAAKqH,YAIZpK,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAA/J,SAAEgD,EAAKvB,MAAQ,SACzBxB,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAA/J,SAAEgD,EAAKzB,YACjB3B,EAAAA,EAAAA,MAACmK,EAAAA,EAAS,CAAA/J,SAAA,CAAC,IAAE4F,WAAW5C,EAAKxB,WAAa,GAAGgC,qBAC7CvD,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAA/J,UACRJ,EAAAA,EAAAA,MAACuC,EAAAA,EAAU,CAACN,QAAQ,QAAQxB,GAAI,CAAE6B,WAAY,KAAMlC,SAAA,CAAC,KAChDgD,EAAK8C,YAAc,GAAGtC,uBAG7BvD,EAAAA,EAAAA,KAAC8J,EAAAA,EAAS,CAAA/J,UACRJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAES,QAAS,OAAQwJ,IAAK,GAAItK,SAAA,EACnCC,EAAAA,EAAAA,KAACsK,EAAAA,EAAU,CACTH,KAAK,QACL1G,QAASA,IAAMgB,EAAe1B,GAC9B3C,GAAI,CAAE+B,MAAO,WAAYpC,UAEzBC,EAAAA,EAAAA,KAACuK,EAAAA,EAAQ,CAACC,SAAS,aAErBxK,EAAAA,EAAAA,KAACsK,EAAAA,EAAU,CACTH,KAAK,QACL1G,QAASA,IAnRLE,WAC5B,GAAI8G,OAAOC,QAAQ,oDACjB,UACQzF,EAAAA,QAAW0F,gBAAgBC,GACjC3G,EAAcD,EAAW6G,QAAO9H,GAAQA,EAAKjC,KAAO8J,KACpDxF,EAAiB,kCACnB,CAAE,MAAO5F,GACP2F,QAAQ3F,MAAM,6BAA8BA,GAC5C4F,EAAiB,8BAA+B,QAClD,GA0QqC0F,CAAsB/H,EAAKjC,IAC1CV,GAAI,CAAE+B,MAAO,WAAYpC,UAEzBC,EAAAA,EAAAA,KAAC+K,EAAAA,EAAU,CAACP,SAAS,YAEtBzH,EAAKiI,cACJhL,EAAAA,EAAAA,KAACsK,EAAAA,EAAU,CACTH,KAAK,QACL/J,GAAI,CAAE+B,MAAO,WAAYpC,UAEzBC,EAAAA,EAAAA,KAACiL,EAAAA,EAAc,CAACT,SAAS,mBAlDpBzH,EAAKjC,kBAiElCnB,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACLf,KAAMuF,KAAmBI,EACzB1F,QAASA,KACPuF,GAAiB,GACjBI,EAAe,OAEjB5E,SAAS,KACTC,WAAS,EAAAC,SAAA,EAETC,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CAAAF,SACTyE,EAAc,kBAAoB,wBAErCxE,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CAAAH,UACZC,EAAAA,EAAAA,KAACkL,EAAAA,EAAqB,CACpBnI,KAAMyB,EACNxF,WAAY6F,EACZsG,SAAU3G,EAhVQb,UAC1B,IACE,MAAMyH,GAAWC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZC,GAAQ,IACXzF,WAAYF,WAAW2F,EAAShK,UAAYqE,WAAW2F,EAAS/J,WAChEgK,WAAW,IAAIC,MAAOC,sBAGlBxG,EAAAA,QAAWyG,gBAAgBlH,EAAY1D,GAAIsK,GACjDnH,EAAcD,EAAWlB,KAAIC,GAC3BA,EAAKjC,KAAO0D,EAAY1D,GAAKsK,EAAcrI,KAE7C0B,EAAe,MACfW,EAAiB,kCACnB,CAAE,MAAO5F,GACP2F,QAAQ3F,MAAM,6BAA8BA,GAC5C4F,EAAiB,8BAA+B,QAClD,GArCyBzB,UACzB,IACE,MAAMgI,GAAON,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRC,GAAQ,IACXxK,GAAI0K,KAAKI,MACT1F,UAAWnC,EAAQjD,GACnB+K,WAAW,IAAIL,MAAOC,cACtB5F,WAAYF,WAAW2F,EAAShK,UAAYqE,WAAW2F,EAAS/J,mBAG5D0D,EAAAA,QAAW6G,gBAAgBH,GACjC1H,EAAc,IAAID,EAAY2H,IAC9BtH,GAAiB,GACjBe,EAAiB,gCACnB,CAAE,MAAO5F,GACP2F,QAAQ3F,MAAM,2BAA4BA,GAC1C4F,EAAiB,2BAA4B,QAC/C,GAoVQ2G,SAAUA,KACR1H,GAAiB,GACjBI,EAAe,eAOvBzE,EAAAA,EAAAA,KAACgM,EAAiB,CAChBnN,KAAMyF,EACNxF,QAASA,IAAMyF,GAAoB,GACnCxF,SA5ToB4E,UACxB,IACE,MAAMsI,EAAWC,EAAcpJ,KAAIC,IAAIsI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClCtI,GAAI,IACPjC,GAAI0K,KAAKI,MAAQO,KAAKC,SACtBlG,UAAWnC,EAAQjD,GACnB+K,WAAW,IAAIL,MAAOC,cACtB5F,WAAYF,WAAW5C,EAAKzB,UAAY,GAAKqE,WAAW5C,EAAKxB,WAAa,OAG5E,IAAK,MAAMwB,KAAQkJ,QACXhH,EAAAA,QAAW6G,gBAAgB/I,GAGnCkB,EAAc,IAAID,KAAeiI,IACjC1H,GAAoB,GACpBa,EAAiB,yBAAD9B,OAA0B2I,EAASvJ,OAAM,gBAC3D,CAAE,MAAOlD,GACP2F,QAAQ3F,MAAM,+BAAgCA,GAC9C4F,EAAiB,+BAAgC,QACnD,GAySIpG,WAAY6F,KAId7E,EAAAA,EAAAA,KAACqM,EAAAA,EAAQ,CACPxN,KAAM6F,EAAa7F,KACnByN,iBAAkB,IAClBxN,QAASA,IAAM6F,GAAe0G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI3G,GAAY,IAAE7F,MAAM,KAASkB,UAEjEC,EAAAA,EAAAA,KAACsC,EAAAA,EAAK,CACJxD,QAASA,IAAM6F,GAAe0G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI3G,GAAY,IAAE7F,MAAM,KACxD0D,SAAUmC,EAAanC,SACvBnC,GAAI,CAAE2I,MAAO,QAAShJ,SAErB2E,EAAaE,iB,iMCpcxB,MA6QA,EA7Q8BhG,IAA+C,IAA9C,KAAEmE,EAAI,WAAE/D,EAAU,SAAEmM,EAAQ,SAAEY,GAAUnN,EACrE,MAAO2N,EAAUC,IAAerN,EAAAA,EAAAA,UAAS,CACvCkC,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,KAAM,MACNC,SAAU,GACV2I,MAAO,GACPY,YAAa,QAGRnF,EAAY4G,IAAiBtN,EAAAA,EAAAA,UAAS,IAE7C2F,EAAAA,EAAAA,YAAU,KACJ/B,GACFyJ,EAAY,CACVnL,YAAa0B,EAAK1B,aAAe,GACjCC,SAAUyB,EAAKzB,UAAY,GAC3BC,UAAWwB,EAAKxB,WAAa,GAC7BC,KAAMuB,EAAKvB,MAAQ,MACnBC,SAAUsB,EAAKtB,UAAY,GAC3B2I,MAAOrH,EAAKqH,OAAS,GACrBY,YAAajI,EAAKiI,aAAe,SAGpC,CAACjI,KAEJ+B,EAAAA,EAAAA,YAAU,KACR,MAAM4H,EAAM/G,WAAW4G,EAASjL,WAAa,EACvCqL,EAAQhH,WAAW4G,EAAShL,YAAc,EAChDkL,EAAcC,EAAMC,KACnB,CAACJ,EAASjL,SAAUiL,EAAShL,YAEhC,MAAMqL,EAAgBC,GAAW5L,IAC/BuL,GAAWnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRkB,GAAQ,IACX,CAACM,GAAQ5L,EAAME,OAAO2L,UAwC1B,OACE9M,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAAC0B,UAAU,OAAOsJ,SA3BFlK,IACpBA,EAAM8L,iBAEDR,EAASlL,YAAY2L,QAKrBT,EAASjL,UAAYqE,WAAW4G,EAASjL,WAAa,EACzD2L,MAAM,kCAIHV,EAAShL,WAAaoE,WAAW4G,EAAShL,YAAc,EAC3D0L,MAAM,mCAIR9B,EAASoB,GAdPU,MAAM,+BAuBsC7M,GAAI,CAAEiC,GAAI,GAAItC,UAC1DJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAES,QAAS,OAAQwH,cAAe,SAAUgC,IAAK,GAAItK,SAAA,EAE5DC,EAAAA,EAAAA,KAACkN,EAAAA,EAAS,CACRpN,WAAS,EACT2G,MAAM,iBACN0G,UAAQ,EACRL,MAAOP,EAASlL,YAChBL,SAAU4L,EAAa,eACvBQ,YAAY,4BACZC,WAAY,CACVC,gBACEtN,EAAAA,EAAAA,KAACuN,EAAAA,EAAc,CAACC,SAAS,QAAOzN,SAAC,qBAQvCJ,EAAAA,EAAAA,MAAC8N,EAAAA,EAAW,CAAC3N,WAAS,EAAAC,SAAA,EACpBC,EAAAA,EAAAA,KAAC0N,EAAAA,EAAU,CAAA3N,SAAC,iBACZJ,EAAAA,EAAAA,MAACgO,EAAAA,EAAM,CACLb,MAAOP,EAAS9K,SAChBT,SAAU4L,EAAa,YACvBnG,MAAM,cACNmH,cAAY,EAAA7N,SAAA,EAEZC,EAAAA,EAAAA,KAAC6N,EAAAA,EAAQ,CAACf,MAAM,GAAE/M,UAChBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBAELf,EAAW8D,KAAIrB,IACdzB,EAAAA,EAAAA,KAAC6N,EAAAA,EAAQ,CAAgBf,MAAOrL,EAAS1B,SACtC0B,GADYA,YAQrBzB,EAAAA,EAAAA,KAACkN,EAAAA,EAAS,CACRpN,WAAS,EACT2G,MAAM,cACN0G,UAAQ,EACRpM,KAAK,SACL+L,MAAOP,EAASjL,SAChBN,SAAU4L,EAAa,YACvBkB,WAAY,CAAEC,KAAM,MAAOC,IAAK,GAChCX,WAAY,CACVC,gBACEtN,EAAAA,EAAAA,KAACuN,EAAAA,EAAc,CAACC,SAAS,QAAOzN,SAAC,qBAQvCJ,EAAAA,EAAAA,MAAC8N,EAAAA,EAAW,CAAC3N,WAAS,EAAAC,SAAA,EACpBC,EAAAA,EAAAA,KAAC0N,EAAAA,EAAU,CAAA3N,SAAC,aACZC,EAAAA,EAAAA,KAAC2N,EAAAA,EAAM,CACLb,MAAOP,EAAS/K,KAChBR,SAAU4L,EAAa,QACvBnG,MAAM,UAAS1G,SArEL,CAClB,MAAO,MAAO,OAAQ,KAAM,MAAO,IAAK,KACxC,KAAM,KAAM,MAAO,QAAS,OAAQ,OAqEf+C,KAAItB,IACfxB,EAAAA,EAAAA,KAAC6N,EAAAA,EAAQ,CAAYf,MAAOtL,EAAKzB,SAC9ByB,GADYA,WAQrBxB,EAAAA,EAAAA,KAACkN,EAAAA,EAAS,CACRpN,WAAS,EACT2G,MAAM,gBACN0G,UAAQ,EACRpM,KAAK,SACL+L,MAAOP,EAAShL,UAChBP,SAAU4L,EAAa,aACvBkB,WAAY,CAAEC,KAAM,MAAOC,IAAK,GAChCX,WAAY,CACVC,gBAAgBtN,EAAAA,EAAAA,KAACuN,EAAAA,EAAc,CAACC,SAAS,QAAOzN,SAAC,uBAKrDC,EAAAA,EAAAA,KAACsJ,EAAAA,EAAK,CAAClJ,GAAI,CAAEG,EAAG,EAAGE,gBAAiB,UAAWJ,OAAQ,oBAAqBC,aAAc,GAAIP,UAC5FJ,EAAAA,EAAAA,MAACuC,EAAAA,EAAU,CAACN,QAAQ,KAAKxB,GAAI,CAAE+B,MAAO,UAAWF,WAAY,IAAKzB,UAAW,UAAWT,SAAA,CAAC,iBACxE8F,EAAWtC,uBAK9BvD,EAAAA,EAAAA,KAACkN,EAAAA,EAAS,CACRpN,WAAS,EACT2G,MAAM,sBACNwH,WAAS,EACTC,KAAM,EACNpB,MAAOP,EAASnC,MAChBpJ,SAAU4L,EAAa,SACvBQ,YAAY,wCACZC,WAAY,CACVC,gBACEtN,EAAAA,EAAAA,KAACuN,EAAAA,EAAc,CAACC,SAAS,QAAQpN,GAAI,CAAE+N,UAAW,aAAc9L,GAAI,GAAItC,SAAC,qBAQ/EJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAAAJ,SAAA,EACFC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,KAAKxB,GAAI,CAAEM,GAAI,EAAGuB,WAAY,IAAKE,MAAO,WAAYpC,SAAC,oCAG3EJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CACPC,OAAQ,qBACRC,aAAc,EACdC,EAAG,EACHC,UAAW,SACXC,gBAAiB,WACjBV,SAAA,EACAC,EAAAA,EAAAA,KAAA,SACEW,OAAO,MACPC,MAAO,CAAEC,QAAS,QAClBC,GAAG,cACHC,KAAK,OACLC,SAtKcC,IACxB,MAAMhC,EAAOgC,EAAME,OAAOC,MAAM,GAC5BnC,GACFuN,GAAWnB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACRkB,GAAQ,IACXvB,YAAa/L,EAAKmD,YAmKdpC,EAAAA,EAAAA,KAAA,SAAO0B,QAAQ,cAAa3B,UAC1BC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,WACRC,UAAU,OACVC,WAAW9B,EAAAA,EAAAA,KAACiL,EAAAA,EAAc,IAC1B7K,GAAI,CACFE,aAAc,OACd0B,cAAe,OACfC,WAAY,KACZlC,SACH,+BAIFwM,EAASvB,cACRrL,EAAAA,EAAAA,MAACuC,EAAAA,EAAU,CAACN,QAAQ,QAAQxB,GAAI,CAAEiC,GAAI,EAAGF,MAAO,WAAYpC,SAAA,CAAC,oBAC9CwM,EAASvB,gBAG1BhL,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CAACN,QAAQ,UAAUf,QAAQ,QAAQT,GAAI,CAAEiC,GAAI,EAAGF,MAAO,WAAYpC,SAAC,oEAOnFJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAES,QAAS,OAAQoI,eAAgB,WAAYoB,IAAK,EAAGhI,GAAI,EAAG+L,GAAI,EAAGC,UAAW,qBAAsBtO,SAAA,EAC7GC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,QAAQ,WACR6B,QAASsI,EACT3L,GAAI,CACFE,aAAc,OACd0B,cAAe,OACfC,WAAY,IACZqM,GAAI,GACJvO,SACH,YAGDC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLZ,KAAK,SACLa,QAAQ,YACRxB,GAAI,CACAE,aAAc,OACd0B,cAAe,OACfC,WAAY,IACZxB,gBAAiB,UACjB6N,GAAI,EACJ,UAAW,CACT7N,gBAAiB,YAEnBV,SAEDgD,EAAO,qBAAkB,4B,wRC3PxC,MAyVMwL,EAAkBnI,IACD,CACnB,UAAa,UACb,OAAU,UACV,cAAe,UACf,YAAe,UACf,QAAW,UACX,UAAW,UACX,QAAW,UACX,UAAa,UACb,QAAW,UACX,YAAa,UACb,UAAa,UACb,cAAe,UACf,YAAe,WAGS,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQoI,gBAAkB,WAGhD,EA7W4B5P,IA6BrB,IA7BsB,YAE3B6P,EAAc,GAAE,WAChBxG,EAAU,MAGVyG,EAAK,SACLrI,EAAQ,SACRsI,EAAQ,OACR/D,EAAM,SACNU,EAAW,CAAC,EAAC,QAGbhF,EAAU,GAAE,OACZsI,EAAM,SACNC,EAAQ,QACRC,EAAO,gBACPC,GAAkB,EAAK,UAGvBC,GAAY,EAAK,aACjBC,EAAY,eAGZC,GAAiB,EAAI,gBAGrBzO,EAAkB,QAAO,UACzB0O,EAAY,GACbvQ,EACC,MAAMwQ,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,OAgChDC,EA7BsBC,MAC1B,MAAMC,EAAc,CAClB,CACEnJ,MAAO,aACPF,MAAMvG,EAAAA,EAAAA,KAAC6P,EAAAA,EAAI,CAACzP,GAAI,CAAEoK,SAAU,MAC5BsF,KAAM,IACNrM,QAASA,IAAMwE,GAAcA,EAAW,MAE1C,CACExB,MAAO,aACPF,MAAMvG,EAAAA,EAAAA,KAAC+P,EAAAA,EAAQ,CAAC3P,GAAI,CAAEoK,SAAU,MAChCsF,KAAM,aACNrM,QAASA,IAAMwE,GAAcA,EAAW,gBAc5C,OATAwG,EAAYuB,SAAQ,CAACC,EAAUjN,KAC7B4M,EAAYM,KAAK,CACfzJ,MAAOwJ,EAASxJ,MAChBqJ,KAAMG,EAASH,KACfrM,QAASA,IAAMwE,GAAcA,EAAWgI,EAASH,MACjDK,OAAQnN,IAAUyL,EAAY/L,OAAS,OAIpCkN,GAGeD,GAiBlBS,EAAgB,IAChB9J,GAAW,MACXsI,EAAS,CAAC,CACZrI,MAAMvG,EAAAA,EAAAA,KAACqQ,EAAAA,EAAI,IACX5J,MAAO,OACPhD,QAASmL,EACTzM,MAAO,YACJ,MACD2M,EAAU,CAAC,CACbvI,MAAMvG,EAAAA,EAAAA,KAACsQ,EAAAA,EAAK,IACZ7J,MAAO,QACPhD,QAASqL,EACT3M,MAAO,YACJ,MACD0M,EAAW,CAAC,CACdtI,MAAMvG,EAAAA,EAAAA,KAACuQ,EAAAA,EAAM,IACb9J,MAAO,SACPhD,QAASoL,EACT1M,MAAO,UACJ,IAGP,OACExC,EAAAA,EAAAA,MAAC2J,EAAAA,EAAK,CACJ6F,UAAWA,EACX/O,GAAI,CACFK,kBACA+P,aAAc,oBACdlC,GAAI,CAAE7F,GAAI,EAAGC,GAAI,GACjBI,GAAI,EACJxI,aAAc,GACdP,SAAA,CAGDuP,GAAYJ,IACXlP,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CAAEM,GAAI,GAAIX,UACjBC,EAAAA,EAAAA,KAACsK,EAAAA,EAAU,CACT7G,QAnDSgN,KACjB,GAAIhC,EAAY/L,OAAS,EAAG,CAC1B,MAAMgO,EAAejC,EAAYA,EAAY/L,OAAS,GAClDuF,GAAcyI,EAAaZ,KAC7B7H,EAAWyI,EAAaZ,MAExBrF,OAAOkG,QAAQC,MAEnB,MACEnG,OAAOkG,QAAQC,QA2CTzG,KAAK,QACL/J,GAAI,CACF+B,MAAO,UACP,UAAW,CAAEA,MAAO,YACpBpC,UAEFC,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAS,SAMdvB,IACAtP,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAW,CACVC,WAAW/Q,EAAAA,EAAAA,KAACgR,EAAAA,EAAY,CAACxG,SAAS,UAClCpK,GAAI,CACFM,GAAI,EACJ8J,SAAU,WACV,8BAA+B,CAC7BrI,MAAO,YAETpC,SAED2P,EAAgB5M,KAAI,CAACmO,EAAOjO,IACZA,IAAU0M,EAAgBhN,OAAS,GAI9C/C,EAAAA,EAAAA,MAACuC,EAAAA,EAAU,CAETC,MAAM,eACNF,WAAY,IACZ7B,GAAI,CACF+B,MAAO,UACPtB,QAAS,OACTmI,WAAY,SACZqB,IAAK,IACLtK,SAAA,CAEDkR,EAAM1K,KACN0K,EAAMxK,QAXFzD,IAiBTrD,EAAAA,EAAAA,MAACuR,EAAAA,EAAI,CAEHC,UAAU,QACVhP,MAAM,UACN2N,KAAMmB,EAAMnB,MAAQ,IACpBrM,QAAU2N,IACRA,EAAErE,iBACEkE,EAAMxN,SAASwN,EAAMxN,WAE3BrD,GAAI,CACFS,QAAS,OACTmI,WAAY,SACZqB,IAAK,GACLlI,MAAO,UACPkP,OAAQ,UACR,UAAW,CAAElP,MAAO,YACpBpC,SAAA,CAEDkR,EAAM1K,KACN0K,EAAMxK,QAlBFzD,QA0BfrD,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CACPS,QAAS,OACToI,eAAgB,gBAChBD,WAAY,CAAEP,GAAI,aAAcC,GAAI,UACpCL,cAAe,CAAEI,GAAI,SAAUC,GAAI,OACnC2B,IAAK,CAAE5B,GAAI,EAAGC,GAAI,IAClB3I,SAAA,EAEAJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAES,QAAS,OAAQmI,WAAY,SAAUqB,IAAK,EAAGiH,KAAM,GAAIvR,SAAA,EAElEJ,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAES,QAAS,OAAQmI,WAAY,SAAUqB,IAAK,GAAItK,SAAA,EACzDC,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CACTN,QAAQ,KACRxB,GAAI,CACF6B,WAAY,IACZE,MAAO,UACPqI,SAAU,CAAE/B,GAAI,SAAUC,GAAI,YAC9B3I,SAED2O,IAGFO,IACCjP,EAAAA,EAAAA,KAACuR,EAAAA,EAAO,CAAC7C,MAAOM,EAAY,wBAA0B,mBAAmBjP,UACvEC,EAAAA,EAAAA,KAACsK,EAAAA,EAAU,CACTH,KAAK,QACL1G,QAASwL,EACT7O,GAAI,CACF+B,MAAO6M,EAAY,UAAY,UAC/B,UAAW,CACT7M,MAAO6M,EAAY,UAAY,YAEjCjP,SAEDiP,GAAYhP,EAAAA,EAAAA,KAACwR,EAAAA,EAAI,KAAMxR,EAAAA,EAAAA,KAACyR,EAAAA,EAAU,YAOzCpL,GAAYiF,EAASlF,QAAUkF,EAASvK,QACxCpB,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CACPS,QAAS,OACTmI,WAAY,SACZqB,IAAK,EACLqH,SAAU,OACVC,GAAI,CAAElJ,GAAI,EAAGC,GAAI,IACjB3I,SAAA,CACCsG,IACCrG,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CACTN,QAAQ,QACRxB,GAAI,CACF+B,MAAO,UACPqI,SAAU,UACVzK,SAEDsG,IAIJiF,EAASlF,SACRpG,EAAAA,EAAAA,KAACkK,EAAAA,EAAI,CACHzD,MAAO6E,EAASlF,OAChB+D,KAAK,QACL/J,GAAI,CACFgI,OAAQ,GACRoC,SAAU,UACV/J,gBAAiB8N,EAAejD,EAASlF,QACzCjE,MAAO,QACPF,WAAY,OAKjBqJ,EAASvK,OACRf,EAAAA,EAAAA,KAACkK,EAAAA,EAAI,CACHzD,MAAO6E,EAASvK,KAChBoJ,KAAK,QACLvI,QAAQ,WACRxB,GAAI,CACFgI,OAAQ,GACRoC,SAAU,UACVoH,YAAa,UACbzP,MAAO,mBASlBiO,EAAc1N,OAAS,IACtB/C,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CACPS,QAAS,OACTmI,WAAY,SACZqB,IAAK,IACLwH,WAAY,GACZ9R,SAAA,CACCqQ,EAAcvN,MAAM,EAAGyM,EAAW,EAAI,GAAGxM,KAAI,CAACgP,EAAQ9O,KACrDhD,EAAAA,EAAAA,KAACuR,EAAAA,EAAO,CAAa7C,MAAOoD,EAAOrL,MAAM1G,UACvCC,EAAAA,EAAAA,KAACsK,EAAAA,EAAU,CACT7G,QAASqO,EAAOrO,QAChB0G,KAAK,QACL/J,GAAI,CACFK,gBAAkC,YAAjBqR,EAAO3P,MAAsB,UAAY,UAC1DA,MAAwB,YAAjB2P,EAAO3P,MAAsB,QACZ,UAAjB2P,EAAO3P,MAAoB,UAAY,UAC9C9B,OAAyB,YAAjByR,EAAO3P,MAAsB,OAAS,oBAC9C7B,aAAc,EACdyI,MAAO,GACPX,OAAQ,GACR,UAAW,CACT3H,gBAAkC,YAAjBqR,EAAO3P,MAAsB,UACd,UAAjB2P,EAAO3P,MAAoB,UAAY,UACtD4P,UAAW,mBACXnJ,UAA4B,YAAjBkJ,EAAO3P,MAAsB,qCAAuC,SAEjFpC,SAED+R,EAAOvL,QApBEvD,MAyBdoN,EAAc1N,QAAU4M,EAAW,EAAI,IAAMP,KAC7C/O,EAAAA,EAAAA,KAACuR,EAAAA,EAAO,CAAC7C,MAAM,eAAc3O,UAC3BC,EAAAA,EAAAA,KAACsK,EAAAA,EAAU,CACTH,KAAK,QACL/J,GAAI,CACFK,gBAAiB,UACjBJ,OAAQ,oBACRC,aAAc,EACdyI,MAAO,GACPX,OAAQ,GACR,UAAW,CACT3H,gBAAiB,UACjBJ,OAAQ,sBAEVN,UAEFC,EAAAA,EAAAA,KAACgS,EAAAA,EAAS,CAAC5R,GAAI,CAAEoK,SAAU,oB,eClW7C,MAyFA,EAzFoB5L,IA8Bb,IA9Bc,SAEnBmH,EAAQ,UACRC,EAAS,SACTC,EAAW,CAAC,EAAC,WAGbgM,EAAU,WACVhK,EAAU,SAGV5B,EAAQ,QACRC,EAAU,GAAE,UAGZ0I,GAAY,EAAK,aACjBC,EAAY,OAGZL,EAAM,SACNC,EAAQ,QACRC,EAAO,SAGP/O,EAAQ,eAGRmS,GAAiB,EAAI,oBACrBC,EAAsB,EAAC,eACvBhK,EAAiB,GAClBvJ,EACC,MAAM,WAAEwT,EAAU,oBAAEC,IAAwBC,EAAAA,EAAAA,OAG5CxN,EAAAA,EAAAA,YAAU,KACJiB,GAAYC,GACdoM,EAAW,CACT1D,MAAO1I,EACPkC,KAAMuC,OAAO8H,SAASC,SACtBzR,KAAMgF,EACNkM,aACAQ,KAAMxM,MAGT,CAACF,EAAUC,EAAWiM,EAAYhM,EAAUmM,IAG/C,MAWMM,EAAmBL,IAEzB,OACE1S,EAAAA,EAAAA,MAACQ,EAAAA,EAAG,CAACC,GAAI,CAAEuS,UAAW,QAASlS,gBAAiB,WAAYV,SAAA,CAEzDmS,IACClS,EAAAA,EAAAA,KAAC4S,EAAmB,CAClBnE,YAAaiE,EAAiBjE,YAC9BC,MAAO1I,EACPK,SAAUA,EACVsI,SAAU5I,EACVuF,SAAUrF,EACVK,QAASA,EACT0I,UAAWA,EACXC,aAAcA,EACdL,OAAQA,EACRC,SAAUA,EACVC,QAASA,EACT7G,WA7BgBC,IAClBD,EACFA,EAAWC,GAGXuC,OAAOkG,QAAQkC,UAAU,CAAC,EAAG,GAAI3K,IAyB7BiH,UAAWgD,KAKfnS,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,GAAI,CAAEG,EAAG4H,GAAiBpI,SAC5BA,O","sources":["features/projects/components/ScopeImportDialog.js","features/projects/components/EnhancedProjectScope.js","features/projects/components/EnhancedScopeItemForm.js","components/ui/UniversalBreadcrumb.js","components/layout/PageWrapper.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Box,\n  Typography,\n  LinearProgress,\n  Alert,\n  List,\n  ListItem,\n  ListItemText\n} from '@mui/material';\nimport { CloudUpload as UploadIcon } from '@mui/icons-material';\n\nconst ScopeImportDialog = ({ open, onClose, onImport, categories }) => {\n  const [file, setFile] = useState(null);\n  const [importing, setImporting] = useState(false);\n  const [previewData, setPreviewData] = useState([]);\n  const [error, setError] = useState('');\n\n  const handleFileSelect = (event) => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n      setError('');\n      // In a real implementation, you would parse the Excel file here\n      // For now, we'll simulate with sample data\n      setPreviewData([\n        {\n          description: 'Drywall Installation',\n          quantity: 500,\n          unitPrice: 15.50,\n          unit: 'sqm',\n          category: 'Millwork & Carpentry'\n        },\n        {\n          description: 'Electrical Outlets',\n          quantity: 25,\n          unitPrice: 45.00,\n          unit: 'pcs',\n          category: 'Electrical Systems'\n        }\n      ]);\n    }\n  };\n\n  const handleImport = async () => {\n    if (!file || previewData.length === 0) {\n      setError('Please select a valid Excel file');\n      return;\n    }\n\n    setImporting(true);\n    \n    try {\n      // Simulate import delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      onImport(previewData);\n      handleClose();\n    } catch (error) {\n      setError('Failed to import items');\n    } finally {\n      setImporting(false);\n    }\n  };\n\n  const handleClose = () => {\n    setFile(null);\n    setPreviewData([]);\n    setError('');\n    setImporting(false);\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>Import Scope Items from Excel</DialogTitle>\n      \n      <DialogContent>\n        {/* File Upload Area */}\n        <Box sx={{ \n          border: '2px dashed #E9ECEF', \n          borderRadius: 2, \n          p: 4,\n          textAlign: 'center',\n          backgroundColor: '#F8F9FA',\n          mb: 3\n        }}>\n          <input\n            accept=\".xlsx,.xls,.csv\"\n            style={{ display: 'none' }}\n            id=\"excel-upload\"\n            type=\"file\"\n            onChange={handleFileSelect}\n          />\n          <label htmlFor=\"excel-upload\">\n            <Button\n              variant=\"contained\"\n              component=\"span\"\n              startIcon={<UploadIcon />}\n              sx={{ \n                borderRadius: '20px',\n                textTransform: 'none',\n                fontWeight: 600,\n                mb: 2\n              }}\n            >\n              Select Excel File\n            </Button>\n          </label>\n          \n          {file && (\n            <Typography variant=\"body2\" sx={{ color: '#27AE60', mb: 2 }}>\n              Selected: {file.name}\n            </Typography>\n          )}\n          \n          <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n            Supported formats: .xlsx, .xls, .csv\n          </Typography>\n          \n          <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\" sx={{ mt: 1 }}>\n            Required columns: Description, Quantity, Unit Price, Unit, Category\n          </Typography>\n        </Box>\n\n        {/* Error Message */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\n            {error}\n          </Alert>\n        )}\n\n        {/* Import Progress */}\n        {importing && (\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"body2\" gutterBottom>\n              Importing scope items...\n            </Typography>\n            <LinearProgress />\n          </Box>\n        )}\n\n        {/* Preview Data */}\n        {previewData.length > 0 && !importing && (\n          <Box sx={{ mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Preview ({previewData.length} items)\n            </Typography>\n            <List dense>\n              {previewData.slice(0, 5).map((item, index) => (\n                <ListItem key={index} divider>\n                  <ListItemText\n                    primary={item.description}\n                    secondary={`${item.quantity} ${item.unit} × $${item.unitPrice} = $${(item.quantity * item.unitPrice).toLocaleString()}`}\n                  />\n                </ListItem>\n              ))}\n              {previewData.length > 5 && (\n                <ListItem>\n                  <ListItemText\n                    primary={`... and ${previewData.length - 5} more items`}\n                  />\n                </ListItem>\n              )}\n            </List>\n          </Box>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button \n          onClick={handleClose}\n          disabled={importing}\n          sx={{ \n            borderRadius: '20px',\n            textTransform: 'none',\n            fontWeight: 600\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={handleImport}\n          variant=\"contained\"\n          disabled={!file || previewData.length === 0 || importing}\n          sx={{ \n            borderRadius: '20px',\n            textTransform: 'none',\n            fontWeight: 600,\n            backgroundColor: '#27AE60',\n            '&:hover': {\n              backgroundColor: '#229954'\n            }\n          }}\n        >\n          {importing ? 'Importing...' : `Import ${previewData.length} Items`}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ScopeImportDialog;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Grid,\n  Card,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Chip,\n  Alert,\n  Snackbar\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  FileUpload as ImportIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  AttachFile as AttachFileIcon,\n  Download as DownloadIcon\n} from '@mui/icons-material';\nimport EnhancedScopeItemForm from './EnhancedScopeItemForm';\nimport ScopeImportDialog from './ScopeImportDialog';\nimport apiService from '../../../services/api/apiService';\nimport PageWrapper from '../../../components/layout/PageWrapper';\n\nconst EnhancedProjectScope = ({ project, onClose }) => {\n  const [scopeItems, setScopeItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [importDialogOpen, setImportDialogOpen] = useState(false);\n  const [editingItem, setEditingItem] = useState(null);\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'success' });\n\n  // Construction/Millwork categories\n  const scopeCategories = [\n    'Demolition',\n    'Structural Work',\n    'MEP (Mechanical, Electrical, Plumbing)',\n    'Millwork & Carpentry',\n    'Flooring & Tiling',\n    'Painting & Finishing',\n    'Glass & Glazing',\n    'Hardware & Accessories',\n    'Insulation',\n    'Waterproofing',\n    'HVAC Systems',\n    'Electrical Systems',\n    'Fire Safety',\n    'Security Systems',\n    'General Contractor Items'\n  ];\n\n  useEffect(() => {\n    loadScopeItems();\n  }, [project.id]);\n\n  const loadScopeItems = async () => {\n    try {\n      setLoading(true);\n      const items = await apiService.getScopeItems(project.id);\n      setScopeItems(items || []);\n    } catch (error) {\n      console.error('Error loading scope items:', error);\n      showNotification('Failed to load scope items', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const showNotification = (message, severity = 'success') => {\n    setNotification({ open: true, message, severity });\n  };\n\n  const handleAddScopeItem = async (itemData) => {\n    try {\n      const newItem = {\n        ...itemData,\n        id: Date.now(),\n        projectId: project.id,\n        createdAt: new Date().toISOString(),\n        totalPrice: parseFloat(itemData.quantity) * parseFloat(itemData.unitPrice)\n      };\n\n      await apiService.createScopeItem(newItem);\n      setScopeItems([...scopeItems, newItem]);\n      setAddDialogOpen(false);\n      showNotification('Scope item added successfully');\n    } catch (error) {\n      console.error('Error adding scope item:', error);\n      showNotification('Failed to add scope item', 'error');\n    }\n  };\n\n  const handleEditScopeItem = async (itemData) => {\n    try {\n      const updatedItem = {\n        ...itemData,\n        totalPrice: parseFloat(itemData.quantity) * parseFloat(itemData.unitPrice),\n        updatedAt: new Date().toISOString()\n      };\n\n      await apiService.updateScopeItem(editingItem.id, updatedItem);\n      setScopeItems(scopeItems.map(item => \n        item.id === editingItem.id ? updatedItem : item\n      ));\n      setEditingItem(null);\n      showNotification('Scope item updated successfully');\n    } catch (error) {\n      console.error('Error updating scope item:', error);\n      showNotification('Failed to update scope item', 'error');\n    }\n  };\n\n  const handleDeleteScopeItem = async (itemId) => {\n    if (window.confirm('Are you sure you want to delete this scope item?')) {\n      try {\n        await apiService.deleteScopeItem(itemId);\n        setScopeItems(scopeItems.filter(item => item.id !== itemId));\n        showNotification('Scope item deleted successfully');\n      } catch (error) {\n        console.error('Error deleting scope item:', error);\n        showNotification('Failed to delete scope item', 'error');\n      }\n    }\n  };\n\n  const handleImportItems = async (importedItems) => {\n    try {\n      const newItems = importedItems.map(item => ({\n        ...item,\n        id: Date.now() + Math.random(),\n        projectId: project.id,\n        createdAt: new Date().toISOString(),\n        totalPrice: parseFloat(item.quantity || 0) * parseFloat(item.unitPrice || 0)\n      }));\n\n      for (const item of newItems) {\n        await apiService.createScopeItem(item);\n      }\n\n      setScopeItems([...scopeItems, ...newItems]);\n      setImportDialogOpen(false);\n      showNotification(`Successfully imported ${newItems.length} scope items`);\n    } catch (error) {\n      console.error('Error importing scope items:', error);\n      showNotification('Failed to import scope items', 'error');\n    }\n  };\n\n  const downloadExcelTemplate = () => {\n    // Create CSV content for Excel template\n    const csvContent = [\n      ['Description', 'Category', 'Quantity', 'Unit', 'Unit Price', 'Notes'],\n      ['Example: Install Kitchen Cabinets', 'Millwork & Carpentry', '10', 'sqft', '150', 'Premium oak finish'],\n      ['Example: Electrical Wiring', 'Electrical Systems', '500', 'lft', '12', 'Include outlets and switches'],\n      ['Example: Flooring Installation', 'Flooring & Tiling', '200', 'sqft', '45', 'Hardwood flooring']\n    ].map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\n\n    // Create and download file\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', `scope_items_template_${project.name.replace(/\\s+/g, '_')}.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      showNotification('Excel template downloaded successfully');\n    }\n  };\n\n  // Calculate summary statistics\n  const totalItems = scopeItems.length;\n  const totalQuantity = scopeItems.reduce((sum, item) => sum + (parseFloat(item.quantity) || 0), 0);\n  const totalValue = scopeItems.reduce((sum, item) => sum + (item.totalPrice || 0), 0);\n\n  return (\n    <PageWrapper\n      pageType=\"project-scope\"\n      pageTitle=\"Scope Management\"\n      pageData={{\n        projectId: project.id,\n        projectName: project.name,\n        status: project.status,\n        type: project.type\n      }}\n      subtitle={`${totalItems} items • $${totalValue.toLocaleString()} total value`}\n      actions={[\n        {\n          icon: <DownloadIcon />,\n          label: 'Download Template',\n          onClick: downloadExcelTemplate,\n          color: 'success'\n        },\n        {\n          icon: <ImportIcon />,\n          label: 'Import Excel',\n          onClick: () => setImportDialogOpen(true),\n          color: 'default'\n        },\n        {\n          icon: <AddIcon />,\n          label: 'Add Item',\n          onClick: () => setAddDialogOpen(true),\n          color: 'primary'\n        }\n      ]}\n      onNavigate={(path) => {\n        if (path === '/projects') {\n          onClose();\n        }\n      }}\n      contentPadding={0}\n    >\n      <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n\n      {/* Summary Cards */}\n      <Box sx={{ p: 3 }}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ \n              borderRadius: 3, \n              border: '1px solid #E9ECEF',\n              boxShadow: 'none'\n            }}>\n              <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                <Box sx={{ \n                  width: 60, \n                  height: 60, \n                  backgroundColor: '#3498DB', \n                  borderRadius: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: '0 auto 16px'\n                }}>\n                  <Typography variant=\"h4\" sx={{ color: 'white', fontWeight: 'bold' }}>\n                    📋\n                  </Typography>\n                </Box>\n                <Typography variant=\"h3\" sx={{ fontWeight: 'bold', color: '#2C3E50', mb: 1 }}>\n                  {totalItems}\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Total Items\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Card sx={{ \n              borderRadius: 3, \n              border: '1px solid #E9ECEF',\n              boxShadow: 'none'\n            }}>\n              <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                <Box sx={{ \n                  width: 60, \n                  height: 60, \n                  backgroundColor: '#27AE60', \n                  borderRadius: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: '0 auto 16px'\n                }}>\n                  <Typography variant=\"h4\" sx={{ color: 'white', fontWeight: 'bold' }}>\n                    📊\n                  </Typography>\n                </Box>\n                <Typography variant=\"h3\" sx={{ fontWeight: 'bold', color: '#2C3E50', mb: 1 }}>\n                  {totalQuantity.toFixed(0)}\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Total Quantity\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Card sx={{ \n              borderRadius: 3, \n              border: '1px solid #E9ECEF',\n              boxShadow: 'none'\n            }}>\n              <CardContent sx={{ textAlign: 'center', py: 3 }}>\n                <Box sx={{ \n                  width: 60, \n                  height: 60, \n                  backgroundColor: '#F39C12', \n                  borderRadius: 2,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  margin: '0 auto 16px'\n                }}>\n                  <Typography variant=\"h4\" sx={{ color: 'white', fontWeight: 'bold' }}>\n                    💰\n                  </Typography>\n                </Box>\n                <Typography variant=\"h3\" sx={{ fontWeight: 'bold', color: '#2C3E50', mb: 1 }}>\n                  ${totalValue.toLocaleString()}\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  Total Value\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* Scope Items Table */}\n      <Box sx={{ flexGrow: 1, mx: 3, mb: 3 }}>\n        <Paper sx={{ \n          borderRadius: 3, \n          border: '1px solid #E9ECEF',\n          boxShadow: 'none',\n          overflow: 'hidden'\n        }}>\n          <TableContainer sx={{ maxHeight: 'calc(100vh - 400px)' }}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Category</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Description</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Unit</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Quantity</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Unit Price</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Total</TableCell>\n                  <TableCell sx={{ fontWeight: 600, backgroundColor: '#F8F9FA' }}>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {scopeItems.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={7} sx={{ textAlign: 'center', py: 8 }}>\n                      <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n                        No scope items found. Click \"Add Item\" to get started.\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  scopeItems.map((item) => (\n                    <TableRow key={item.id} hover>\n                      <TableCell>\n                        <Chip \n                          label={item.category || 'Uncategorized'} \n                          size=\"small\"\n                          sx={{ \n                            backgroundColor: '#E3F2FD',\n                            color: '#1976D2'\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          {item.description}\n                        </Typography>\n                        {item.notes && (\n                          <Typography variant=\"caption\" color=\"textSecondary\">\n                            {item.notes}\n                          </Typography>\n                        )}\n                      </TableCell>\n                      <TableCell>{item.unit || 'pcs'}</TableCell>\n                      <TableCell>{item.quantity}</TableCell>\n                      <TableCell>${parseFloat(item.unitPrice || 0).toLocaleString()}</TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\n                          ${(item.totalPrice || 0).toLocaleString()}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Box sx={{ display: 'flex', gap: 1 }}>\n                          <IconButton \n                            size=\"small\"\n                            onClick={() => setEditingItem(item)}\n                            sx={{ color: '#3498DB' }}\n                          >\n                            <EditIcon fontSize=\"small\" />\n                          </IconButton>\n                          <IconButton \n                            size=\"small\"\n                            onClick={() => handleDeleteScopeItem(item.id)}\n                            sx={{ color: '#E74C3C' }}\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </IconButton>\n                          {item.attachments && (\n                            <IconButton \n                              size=\"small\"\n                              sx={{ color: '#95A5A6' }}\n                            >\n                              <AttachFileIcon fontSize=\"small\" />\n                            </IconButton>\n                          )}\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Box>\n\n      {/* Add/Edit Scope Item Dialog */}\n      <Dialog \n        open={addDialogOpen || !!editingItem} \n        onClose={() => {\n          setAddDialogOpen(false);\n          setEditingItem(null);\n        }}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          {editingItem ? 'Edit Scope Item' : 'Add New Scope Item'}\n        </DialogTitle>\n        <DialogContent>\n          <EnhancedScopeItemForm\n            item={editingItem}\n            categories={scopeCategories}\n            onSubmit={editingItem ? handleEditScopeItem : handleAddScopeItem}\n            onCancel={() => {\n              setAddDialogOpen(false);\n              setEditingItem(null);\n            }}\n          />\n        </DialogContent>\n      </Dialog>\n\n      {/* Import Dialog */}\n      <ScopeImportDialog\n        open={importDialogOpen}\n        onClose={() => setImportDialogOpen(false)}\n        onImport={handleImportItems}\n        categories={scopeCategories}\n      />\n\n      {/* Notification Snackbar */}\n      <Snackbar\n        open={notification.open}\n        autoHideDuration={6000}\n        onClose={() => setNotification({ ...notification, open: false })}\n      >\n        <Alert \n          onClose={() => setNotification({ ...notification, open: false })} \n          severity={notification.severity}\n          sx={{ width: '100%' }}\n        >\n          {notification.message}\n        </Alert>\n      </Snackbar>\n      </Box>\n    </PageWrapper>\n  );\n};\n\nexport default EnhancedProjectScope;","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  InputAdornment,\n  Paper\n} from '@mui/material';\nimport { AttachFile as AttachFileIcon } from '@mui/icons-material';\n\nconst EnhancedScopeItemForm = ({ item, categories, onSubmit, onCancel }) => {\n  const [formData, setFormData] = useState({\n    description: '',\n    quantity: '',\n    unitPrice: '',\n    unit: 'pcs',\n    category: '',\n    notes: '',\n    attachments: null\n  });\n\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    if (item) {\n      setFormData({\n        description: item.description || '',\n        quantity: item.quantity || '',\n        unitPrice: item.unitPrice || '',\n        unit: item.unit || 'pcs',\n        category: item.category || '',\n        notes: item.notes || '',\n        attachments: item.attachments || null\n      });\n    }\n  }, [item]);\n\n  useEffect(() => {\n    const qty = parseFloat(formData.quantity) || 0;\n    const price = parseFloat(formData.unitPrice) || 0;\n    setTotalPrice(qty * price);\n  }, [formData.quantity, formData.unitPrice]);\n\n  const handleChange = (field) => (event) => {\n    setFormData({\n      ...formData,\n      [field]: event.target.value\n    });\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setFormData({\n        ...formData,\n        attachments: file.name\n      });\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n    if (!formData.description.trim()) {\n      alert('Please enter a description');\n      return;\n    }\n    \n    if (!formData.quantity || parseFloat(formData.quantity) <= 0) {\n      alert('Please enter a valid quantity');\n      return;\n    }\n    \n    if (!formData.unitPrice || parseFloat(formData.unitPrice) <= 0) {\n      alert('Please enter a valid unit price');\n      return;\n    }\n\n    onSubmit(formData);\n  };\n\n  const unitOptions = [\n    'pcs', 'sqm', 'sqft', 'lm', 'lft', 'm', 'ft', \n    'kg', 'lb', 'ton', 'hours', 'days', 'lot'\n  ];\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n        {/* 1. Description */}\n        <TextField\n          fullWidth\n          label=\"1. Description\"\n          required\n          value={formData.description}\n          onChange={handleChange('description')}\n          placeholder=\"Enter item description...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                📝\n              </InputAdornment>\n            )\n          }}\n        />\n\n        {/* 2. Category */}\n        <FormControl fullWidth>\n          <InputLabel>2. Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={handleChange('category')}\n            label=\"2. Category\"\n            displayEmpty\n          >\n            <MenuItem value=\"\">\n              <em>Select Category</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem key={category} value={category}>\n                {category}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        {/* 3. Quantity */}\n        <TextField\n          fullWidth\n          label=\"3. Quantity\"\n          required\n          type=\"number\"\n          value={formData.quantity}\n          onChange={handleChange('quantity')}\n          inputProps={{ step: 'any', min: 0 }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                📊\n              </InputAdornment>\n            )\n          }}\n        />\n\n        {/* 4. Unit */}\n        <FormControl fullWidth>\n          <InputLabel>4. Unit</InputLabel>\n          <Select\n            value={formData.unit}\n            onChange={handleChange('unit')}\n            label=\"4. Unit\"\n          >\n            {unitOptions.map(unit => (\n              <MenuItem key={unit} value={unit}>\n                {unit}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        {/* 5. Unit Price */}\n        <TextField\n          fullWidth\n          label=\"5. Unit Price\"\n          required\n          type=\"number\"\n          value={formData.unitPrice}\n          onChange={handleChange('unitPrice')}\n          inputProps={{ step: 'any', min: 0 }}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">💰 $</InputAdornment>\n          }}\n        />\n\n        {/* Total Price Display */}\n        <Paper sx={{ p: 3, backgroundColor: '#F8F9FA', border: '2px solid #27AE60', borderRadius: 2 }}>\n          <Typography variant=\"h5\" sx={{ color: '#27AE60', fontWeight: 700, textAlign: 'center' }}>\n            Total Price: ${totalPrice.toLocaleString()}\n          </Typography>\n        </Paper>\n\n        {/* 6. Notes */}\n        <TextField\n          fullWidth\n          label=\"6. Notes (Optional)\"\n          multiline\n          rows={3}\n          value={formData.notes}\n          onChange={handleChange('notes')}\n          placeholder=\"Additional notes or specifications...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\" sx={{ alignSelf: 'flex-start', mt: 1 }}>\n                📋\n              </InputAdornment>\n            )\n          }}\n        />\n\n        {/* 7. File Attachments */}\n        <Box>\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 600, color: '#2C3E50' }}>\n            7. File Attachments (Optional)\n          </Typography>\n          <Box sx={{ \n            border: '2px dashed #E9ECEF', \n            borderRadius: 2, \n            p: 3,\n            textAlign: 'center',\n            backgroundColor: '#F8F9FA'\n          }}>\n            <input\n              accept=\"*/*\"\n              style={{ display: 'none' }}\n              id=\"file-upload\"\n              type=\"file\"\n              onChange={handleFileUpload}\n            />\n            <label htmlFor=\"file-upload\">\n              <Button\n                variant=\"outlined\"\n                component=\"span\"\n                startIcon={<AttachFileIcon />}\n                sx={{ \n                  borderRadius: '20px',\n                  textTransform: 'none',\n                  fontWeight: 600\n                }}\n              >\n                📎 Choose File\n              </Button>\n            </label>\n            {formData.attachments && (\n              <Typography variant=\"body2\" sx={{ mt: 1, color: '#27AE60' }}>\n                ✅ Attached: {formData.attachments}\n              </Typography>\n            )}\n            <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1, color: '#6C757D' }}>\n              Upload specifications, drawings, or other relevant files\n            </Typography>\n          </Box>\n        </Box>\n\n        {/* Action Buttons */}\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 4, pt: 3, borderTop: '1px solid #E9ECEF' }}>\n          <Button\n            variant=\"outlined\"\n            onClick={onCancel}\n            sx={{ \n              borderRadius: '20px',\n              textTransform: 'none',\n              fontWeight: 600,\n              px: 4\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            sx={{ \n                borderRadius: '20px',\n                textTransform: 'none',\n                fontWeight: 600,\n                backgroundColor: '#27AE60',\n                px: 4,\n                '&:hover': {\n                  backgroundColor: '#229954'\n                }\n              }}\n            >\n              {item ? '✅ Update Item' : '➕ Add Item'}\n            </Button>\n          </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default EnhancedScopeItemForm;","import React from 'react';\nimport { \n  Box, \n  Typography, \n  Breadcrumbs, \n  Link, \n  IconButton,\n  Paper,\n  Chip,\n  Tooltip,\n  useMediaQuery,\n  useTheme\n} from '@mui/material';\nimport { \n  Home,\n  Business,\n  ArrowBack,\n  NavigateNext,\n  Edit,\n  Delete,\n  Share,\n  MoreHoriz,\n  Star,\n  StarBorder\n} from '@mui/icons-material';\n\nconst UniversalBreadcrumb = ({ \n  // Navigation data\n  currentPath = [],\n  onNavigate,\n  \n  // Page info\n  title,\n  subtitle,\n  itemType, // 'project', 'task', 'team', 'client'\n  itemId,\n  itemData = {},\n  \n  // Actions\n  actions = [],\n  onEdit,\n  onDelete,\n  onShare,\n  showMoreActions = false,\n  \n  // Favorites\n  isStarred = false,\n  onToggleStar,\n  \n  // Mobile support\n  showBackButton = true,\n  \n  // Custom styling\n  backgroundColor = 'white',\n  elevation = 0\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  // Generate breadcrumb items\n  const generateBreadcrumbs = () => {\n    const breadcrumbs = [\n      {\n        label: 'Formula PM',\n        icon: <Home sx={{ fontSize: 16 }} />,\n        href: '/',\n        onClick: () => onNavigate && onNavigate('/')\n      },\n      {\n        label: 'Team Space',\n        icon: <Business sx={{ fontSize: 16 }} />,\n        href: '/dashboard',\n        onClick: () => onNavigate && onNavigate('/dashboard')\n      }\n    ];\n\n    // Add dynamic path items\n    currentPath.forEach((pathItem, index) => {\n      breadcrumbs.push({\n        label: pathItem.label,\n        href: pathItem.href,\n        onClick: () => onNavigate && onNavigate(pathItem.href),\n        isLast: index === currentPath.length - 1\n      });\n    });\n\n    return breadcrumbs;\n  };\n\n  const breadcrumbItems = generateBreadcrumbs();\n\n  // Handle back navigation\n  const handleBack = () => {\n    if (currentPath.length > 0) {\n      const previousPath = currentPath[currentPath.length - 1];\n      if (onNavigate && previousPath.href) {\n        onNavigate(previousPath.href);\n      } else {\n        window.history.back();\n      }\n    } else {\n      window.history.back();\n    }\n  };\n\n  // Action button configurations\n  const actionButtons = [\n    ...(actions || []),\n    ...(onEdit ? [{ \n      icon: <Edit />, \n      label: 'Edit', \n      onClick: onEdit,\n      color: 'primary'\n    }] : []),\n    ...(onShare ? [{ \n      icon: <Share />, \n      label: 'Share', \n      onClick: onShare,\n      color: 'default'\n    }] : []),\n    ...(onDelete ? [{ \n      icon: <Delete />, \n      label: 'Delete', \n      onClick: onDelete,\n      color: 'error'\n    }] : [])\n  ];\n\n  return (\n    <Paper\n      elevation={elevation}\n      sx={{\n        backgroundColor,\n        borderBottom: '1px solid #E9ECEF',\n        px: { xs: 2, md: 4 },\n        py: 3,\n        borderRadius: 0\n      }}\n    >\n      {/* Mobile Back Button */}\n      {isMobile && showBackButton && (\n        <Box sx={{ mb: 2 }}>\n          <IconButton \n            onClick={handleBack}\n            size=\"small\"\n            sx={{ \n              color: '#7F8C8D',\n              '&:hover': { color: '#2C3E50' }\n            }}\n          >\n            <ArrowBack />\n          </IconButton>\n        </Box>\n      )}\n\n      {/* Desktop Breadcrumbs */}\n      {!isMobile && (\n        <Breadcrumbs \n          separator={<NavigateNext fontSize=\"small\" />}\n          sx={{ \n            mb: 2, \n            fontSize: '0.875rem',\n            '& .MuiBreadcrumbs-separator': {\n              color: '#7F8C8D'\n            }\n          }}\n        >\n          {breadcrumbItems.map((crumb, index) => {\n            const isLast = index === breadcrumbItems.length - 1;\n            \n            if (isLast) {\n              return (\n                <Typography \n                  key={index}\n                  color=\"text.primary\" \n                  fontWeight={500}\n                  sx={{ \n                    color: '#2C3E50',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 0.5\n                  }}\n                >\n                  {crumb.icon}\n                  {crumb.label}\n                </Typography>\n              );\n            }\n\n            return (\n              <Link\n                key={index}\n                underline=\"hover\"\n                color=\"inherit\"\n                href={crumb.href || '#'}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (crumb.onClick) crumb.onClick();\n                }}\n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  gap: 0.5,\n                  color: '#7F8C8D',\n                  cursor: 'pointer',\n                  '&:hover': { color: '#2C3E50' }\n                }}\n              >\n                {crumb.icon}\n                {crumb.label}\n              </Link>\n            );\n          })}\n        </Breadcrumbs>\n      )}\n\n      {/* Main Header Section */}\n      <Box sx={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: { xs: 'flex-start', md: 'center' },\n        flexDirection: { xs: 'column', md: 'row' },\n        gap: { xs: 2, md: 0 }\n      }}>\n        {/* Left Side - Title and Info */}\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, flex: 1 }}>\n          {/* Title with Star */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Typography \n              variant=\"h4\" \n              sx={{ \n                fontWeight: 700, \n                color: '#2C3E50',\n                fontSize: { xs: '1.5rem', md: '1.75rem' }\n              }}\n            >\n              {title}\n            </Typography>\n            \n            {onToggleStar && (\n              <Tooltip title={isStarred ? \"Remove from favorites\" : \"Add to favorites\"}>\n                <IconButton \n                  size=\"small\" \n                  onClick={onToggleStar}\n                  sx={{ \n                    color: isStarred ? '#F39C12' : '#BDC3C7',\n                    '&:hover': {\n                      color: isStarred ? '#E67E22' : '#F39C12'\n                    }\n                  }}\n                >\n                  {isStarred ? <Star /> : <StarBorder />}\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n\n          {/* Subtitle and Metadata */}\n          {(subtitle || itemData.status || itemData.type) && (\n            <Box sx={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: 1, \n              flexWrap: 'wrap',\n              ml: { xs: 0, md: 2 }\n            }}>\n              {subtitle && (\n                <Typography \n                  variant=\"body2\" \n                  sx={{ \n                    color: '#7F8C8D',\n                    fontSize: '0.9rem'\n                  }}\n                >\n                  {subtitle}\n                </Typography>\n              )}\n              \n              {itemData.status && (\n                <Chip \n                  label={itemData.status}\n                  size=\"small\"\n                  sx={{\n                    height: 24,\n                    fontSize: '0.75rem',\n                    backgroundColor: getStatusColor(itemData.status),\n                    color: 'white',\n                    fontWeight: 600\n                  }}\n                />\n              )}\n              \n              {itemData.type && (\n                <Chip \n                  label={itemData.type}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  sx={{\n                    height: 24,\n                    fontSize: '0.75rem',\n                    borderColor: '#D5DBDB',\n                    color: '#7F8C8D'\n                  }}\n                />\n              )}\n            </Box>\n          )}\n        </Box>\n\n        {/* Right Side - Actions */}\n        {actionButtons.length > 0 && (\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: 1.5,\n            flexShrink: 0\n          }}>\n            {actionButtons.slice(0, isMobile ? 2 : 4).map((action, index) => (\n              <Tooltip key={index} title={action.label}>\n                <IconButton \n                  onClick={action.onClick}\n                  size=\"small\"\n                  sx={{ \n                    backgroundColor: action.color === 'primary' ? '#3498DB' : '#F8F9FA',\n                    color: action.color === 'primary' ? 'white' : \n                           action.color === 'error' ? '#E74C3C' : '#7F8C8D',\n                    border: action.color === 'primary' ? 'none' : '1px solid #E9ECEF',\n                    borderRadius: 2,\n                    width: 36,\n                    height: 36,\n                    '&:hover': { \n                      backgroundColor: action.color === 'primary' ? '#2980B9' :\n                                     action.color === 'error' ? '#fadbd8' : '#ECF0F1',\n                      transform: 'translateY(-1px)',\n                      boxShadow: action.color === 'primary' ? '0 4px 12px rgba(52, 152, 219, 0.3)' : 'none'\n                    }\n                  }}\n                >\n                  {action.icon}\n                </IconButton>\n              </Tooltip>\n            ))}\n            \n            {(actionButtons.length > (isMobile ? 2 : 4) || showMoreActions) && (\n              <Tooltip title=\"More options\">\n                <IconButton \n                  size=\"small\"\n                  sx={{ \n                    backgroundColor: '#F8F9FA',\n                    border: '1px solid #E9ECEF',\n                    borderRadius: 2,\n                    width: 36,\n                    height: 36,\n                    '&:hover': { \n                      backgroundColor: '#ECF0F1',\n                      border: '1px solid #D5DBDB'\n                    }\n                  }}\n                >\n                  <MoreHoriz sx={{ fontSize: 18 }} />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\n// Helper function to get status colors\nconst getStatusColor = (status) => {\n  const statusColors = {\n    'completed': '#27AE60',\n    'active': '#8E44AD',\n    'in-progress': '#F39C12',\n    'in_progress': '#F39C12',\n    'pending': '#3498DB',\n    'on-hold': '#E67E22',\n    'on_hold': '#E67E22',\n    'cancelled': '#E74C3C',\n    'awarded': '#27AE60',\n    'on-tender': '#3498DB',\n    'on_tender': '#3498DB',\n    'not-awarded': '#E74C3C',\n    'not_awarded': '#E74C3C'\n  };\n  \n  return statusColors[status?.toLowerCase()] || '#95A5A6';\n};\n\nexport default UniversalBreadcrumb;","import React, { useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport UniversalBreadcrumb from '../ui/UniversalBreadcrumb';\nimport { useNavigation } from '../../context';\n\nconst PageWrapper = ({ \n  // Page identification\n  pageType,\n  pageTitle,\n  pageData = {},\n  \n  // Navigation\n  parentPath,\n  onNavigate,\n  \n  // Breadcrumb customization\n  subtitle,\n  actions = [],\n  \n  // Favorites\n  isStarred = false,\n  onToggleStar,\n  \n  // Action handlers\n  onEdit,\n  onDelete,\n  onShare,\n  \n  // Content\n  children,\n  \n  // Styling\n  showBreadcrumb = true,\n  breadcrumbElevation = 0,\n  contentPadding = 3\n}) => {\n  const { navigateTo, getBreadcrumbConfig } = useNavigation();\n\n  // Update navigation context when page loads\n  useEffect(() => {\n    if (pageType && pageTitle) {\n      navigateTo({\n        title: pageTitle,\n        path: window.location.pathname,\n        type: pageType,\n        parentPath,\n        data: pageData\n      });\n    }\n  }, [pageType, pageTitle, parentPath, pageData, navigateTo]);\n\n  // Handle navigation events\n  const handleNavigate = (path) => {\n    if (onNavigate) {\n      onNavigate(path);\n    } else {\n      // Default navigation behavior - update URL and trigger route change\n      window.history.pushState({}, '', path);\n      // You might want to trigger a route change event here\n      // depending on your routing solution\n    }\n  };\n\n  const breadcrumbConfig = getBreadcrumbConfig();\n\n  return (\n    <Box sx={{ minHeight: '100vh', backgroundColor: '#F8F9FA' }}>\n      {/* Universal Breadcrumb */}\n      {showBreadcrumb && (\n        <UniversalBreadcrumb\n          currentPath={breadcrumbConfig.currentPath}\n          title={pageTitle}\n          subtitle={subtitle}\n          itemType={pageType}\n          itemData={pageData}\n          actions={actions}\n          isStarred={isStarred}\n          onToggleStar={onToggleStar}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onShare={onShare}\n          onNavigate={handleNavigate}\n          elevation={breadcrumbElevation}\n        />\n      )}\n\n      {/* Page Content */}\n      <Box sx={{ p: contentPadding }}>\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default PageWrapper;"],"names":["_ref","open","onClose","onImport","categories","file","setFile","useState","importing","setImporting","previewData","setPreviewData","error","setError","handleClose","_jsxs","Dialog","maxWidth","fullWidth","children","_jsx","DialogTitle","DialogContent","Box","sx","border","borderRadius","p","textAlign","backgroundColor","mb","accept","style","display","id","type","onChange","event","selectedFile","target","files","description","quantity","unitPrice","unit","category","htmlFor","Button","variant","component","startIcon","UploadIcon","textTransform","fontWeight","Typography","color","name","mt","Alert","severity","gutterBottom","LinearProgress","length","List","dense","slice","map","item","index","ListItem","divider","ListItemText","primary","secondary","concat","toLocaleString","DialogActions","onClick","disabled","async","Promise","resolve","setTimeout","project","scopeItems","setScopeItems","loading","setLoading","addDialogOpen","setAddDialogOpen","importDialogOpen","setImportDialogOpen","editingItem","setEditingItem","notification","setNotification","message","scopeCategories","useEffect","loadScopeItems","items","apiService","getScopeItems","console","showNotification","arguments","undefined","totalItems","totalQuantity","reduce","sum","parseFloat","totalValue","totalPrice","PageWrapper","pageType","pageTitle","pageData","projectId","projectName","status","subtitle","actions","icon","DownloadIcon","label","downloadExcelTemplate","csvContent","row","cell","join","blob","Blob","link","document","createElement","download","url","URL","createObjectURL","setAttribute","replace","visibility","body","appendChild","click","removeChild","ImportIcon","AddIcon","onNavigate","path","contentPadding","height","flexDirection","Grid","container","spacing","xs","md","Card","boxShadow","CardContent","py","width","alignItems","justifyContent","margin","toFixed","flexGrow","mx","Paper","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","colSpan","hover","Chip","size","notes","gap","IconButton","EditIcon","fontSize","window","confirm","deleteScopeItem","itemId","filter","handleDeleteScopeItem","DeleteIcon","attachments","AttachFileIcon","EnhancedScopeItemForm","onSubmit","updatedItem","_objectSpread","itemData","updatedAt","Date","toISOString","updateScopeItem","newItem","now","createdAt","createScopeItem","onCancel","ScopeImportDialog","newItems","importedItems","Math","random","Snackbar","autoHideDuration","formData","setFormData","setTotalPrice","qty","price","handleChange","field","value","preventDefault","trim","alert","TextField","required","placeholder","InputProps","startAdornment","InputAdornment","position","FormControl","InputLabel","Select","displayEmpty","MenuItem","inputProps","step","min","multiline","rows","alignSelf","pt","borderTop","px","getStatusColor","toLowerCase","currentPath","title","itemType","onEdit","onDelete","onShare","showMoreActions","isStarred","onToggleStar","showBackButton","elevation","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","breadcrumbItems","generateBreadcrumbs","breadcrumbs","Home","href","Business","forEach","pathItem","push","isLast","actionButtons","Edit","Share","Delete","borderBottom","handleBack","previousPath","history","back","ArrowBack","Breadcrumbs","separator","NavigateNext","crumb","Link","underline","e","cursor","flex","Tooltip","Star","StarBorder","flexWrap","ml","borderColor","flexShrink","action","transform","MoreHoriz","parentPath","showBreadcrumb","breadcrumbElevation","navigateTo","getBreadcrumbConfig","useNavigation","location","pathname","data","breadcrumbConfig","minHeight","UniversalBreadcrumb","pushState"],"sourceRoot":""}