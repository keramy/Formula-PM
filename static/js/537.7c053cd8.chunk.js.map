{"version":3,"file":"static/js/537.7c053cd8.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/AccountTree.js","components/ui/UnifiedTableView.js","../node_modules/@mui/icons-material/esm/AccessTime.js","../node_modules/@mui/icons-material/esm/ContentCopy.js","../node_modules/@mui/icons-material/esm/Archive.js","components/ui/OptionsMenu.js","features/team/components/TeamMembersList.js","components/ui/UnifiedFilters.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M22 11V3h-7v3H9V3H2v8h7V8h2v10h4v3h7v-8h-7v3h-2V8h2v3z\"\n}), 'AccountTree');","import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Paper,\n  Checkbox,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Chip,\n  Avatar,\n  Box,\n  Typography,\n  LinearProgress,\n  Tooltip\n} from '@mui/material';\nimport {\n  MoreVert as MoreVertIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Visibility as ViewIcon\n} from '@mui/icons-material';\n\nconst UnifiedTableView = ({\n  data,\n  columns,\n  onSort,\n  sortBy,\n  sortDirection,\n  onRowAction,\n  showCheckboxes = false,\n  selectedRows = [],\n  onSelectRow,\n  onSelectAll,\n  actions = [],\n  emptyStateMessage = \"No data available\",\n  emptyStateIcon: EmptyStateIcon\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedRowData, setSelectedRowData] = useState(null);\n\n  const handleMenuOpen = (event, rowData) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedRowData(rowData);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedRowData(null);\n  };\n\n  const handleAction = (action) => {\n    if (onRowAction && selectedRowData) {\n      onRowAction(action, selectedRowData);\n    }\n    handleMenuClose();\n  };\n\n  const handleSort = (column) => {\n    if (column.sortable !== false && onSort) {\n      const isAsc = sortBy === column.key && sortDirection === 'asc';\n      onSort(column.key, isAsc ? 'desc' : 'asc');\n    }\n  };\n\n  const renderCellContent = (column, rowData) => {\n    // Ensure rowData is valid\n    if (!rowData || typeof rowData !== 'object') {\n      console.warn('Invalid rowData in renderCellContent:', rowData);\n      return '-';\n    }\n    \n    const value = rowData[column.key];\n\n    // Safety wrapper to ensure we never return invalid React children\n    const safeRender = (content) => {\n      if (React.isValidElement(content)) {\n        return content;\n      }\n      if (typeof content === 'string' || typeof content === 'number') {\n        return content;\n      }\n      if (content === null || content === undefined) {\n        return '-';\n      }\n      if (typeof content === 'boolean') {\n        return content.toString();\n      }\n      if (typeof content === 'object') {\n        console.warn('Attempting to render object as React child:', content);\n        return '[Object]';\n      }\n      return String(content);\n    };\n\n    if (column.render) {\n      try {\n        const renderedValue = column.render(value, rowData);\n      \n      // If the render function returns an object, we need to handle it properly\n      if (typeof renderedValue === 'object' && renderedValue !== null && !React.isValidElement(renderedValue)) {\n        \n        // Handle avatar objects (check for avatar-specific properties)\n        if (renderedValue.hasOwnProperty('fallback') || renderedValue.hasOwnProperty('bgColor') || renderedValue.hasOwnProperty('text')) {\n          return (\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <Avatar \n                src={renderedValue.src} \n                sx={{ \n                  width: 32, \n                  height: 32,\n                  backgroundColor: renderedValue.bgColor || 'primary.main'\n                }}\n              >\n                {renderedValue.fallback || '?'}\n              </Avatar>\n              {renderedValue.text && (\n                <Typography \n                  variant=\"body2\"\n                  sx={{\n                    cursor: renderedValue.clickable ? 'pointer' : 'default',\n                    color: renderedValue.clickable ? '#3498db' : 'inherit',\n                    textDecoration: 'none',\n                    '&:hover': renderedValue.clickable ? {\n                      textDecoration: 'underline',\n                      color: '#2980b9'\n                    } : {}\n                  }}\n                  onClick={renderedValue.clickable ? renderedValue.onClick : undefined}\n                >\n                  {renderedValue.text}\n                </Typography>\n              )}\n            </Box>\n          );\n        }\n        \n        // Handle chip objects (check for chip-specific properties)\n        if (renderedValue.hasOwnProperty('label') || renderedValue.hasOwnProperty('color')) {\n          return (\n            <Chip\n              label={renderedValue.label || 'Unknown'}\n              size=\"small\"\n              icon={renderedValue.icon || null}\n              sx={{\n                backgroundColor: renderedValue.bgColor || 'grey.100',\n                color: renderedValue.color || 'text.primary',\n                fontWeight: 500,\n                '& .MuiChip-icon': {\n                  color: renderedValue.color || 'text.primary',\n                  fontSize: '16px'\n                }\n              }}\n            />\n          );\n        }\n        \n        // For any other object, convert to string as fallback\n        console.warn('Unhandled object in table cell:', renderedValue, 'Column:', column);\n        try {\n          return String(renderedValue.toString ? renderedValue.toString() : JSON.stringify(renderedValue));\n        } catch (e) {\n          console.error('Failed to stringify object:', e, renderedValue);\n          return 'Error: Invalid object';\n        }\n      }\n      \n      // For non-objects or valid React elements, return safely\n      return safeRender(renderedValue);\n      } catch (error) {\n        console.error('Error in column render function:', error, 'Column:', column.key, 'Value:', value);\n        return 'Error: Render failed';\n      }\n    }\n\n    switch (column.type) {\n      case 'avatar':\n        return (\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Avatar \n              src={value?.src} \n              sx={{ \n                width: 32, \n                height: 32,\n                backgroundColor: value?.bgColor || 'primary.main'\n              }}\n            >\n              {value?.fallback || (typeof value === 'string' ? value.charAt(0) : '')}\n            </Avatar>\n            {value?.text && <Typography variant=\"body2\">{value.text}</Typography>}\n          </Box>\n        );\n\n      case 'chip':\n        if (!value) return '-';\n        return (\n          <Chip\n            label={value.label || value}\n            size=\"small\"\n            icon={value.icon || null}\n            sx={{\n              backgroundColor: value.bgColor || 'grey.100',\n              color: value.color || 'text.primary',\n              fontWeight: 500,\n              '& .MuiChip-icon': {\n                color: value.color || 'text.primary',\n                fontSize: '16px'\n              }\n            }}\n          />\n        );\n\n      case 'progress':\n        if (typeof value !== 'number') return '-';\n        return (\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, minWidth: 100 }}>\n            <LinearProgress\n              variant=\"determinate\"\n              value={value}\n              sx={{ flexGrow: 1, height: 8, borderRadius: 4 }}\n            />\n            <Typography variant=\"caption\" sx={{ minWidth: 35 }}>\n              {value}%\n            </Typography>\n          </Box>\n        );\n\n      case 'date':\n        if (!value) return '-';\n        const date = value instanceof Date ? value : new Date(value);\n        return date.toLocaleDateString();\n\n      case 'currency':\n        if (!value) return '-';\n        return new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD'\n        }).format(value);\n\n      case 'email':\n        if (!value) return '-';\n        return (\n          <Typography \n            variant=\"body2\" \n            component=\"a\" \n            href={`mailto:${value}`}\n            sx={{ color: 'primary.main', textDecoration: 'none' }}\n          >\n            {value}\n          </Typography>\n        );\n\n      case 'phone':\n        if (!value) return '-';\n        return (\n          <Typography \n            variant=\"body2\" \n            component=\"a\" \n            href={`tel:${value}`}\n            sx={{ color: 'primary.main', textDecoration: 'none' }}\n          >\n            {value}\n          </Typography>\n        );\n\n      case 'multiline':\n        if (!value) return '-';\n        return (\n          <Tooltip title={value} arrow>\n            <Typography \n              variant=\"body2\" \n              sx={{ \n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                maxWidth: 200\n              }}\n            >\n              {value}\n            </Typography>\n          </Tooltip>\n        );\n\n      default:\n        return safeRender(value);\n    }\n  };\n\n  if (data.length === 0) {\n    return (\n      <Paper sx={{ p: 4, textAlign: 'center' }}>\n        {EmptyStateIcon && <EmptyStateIcon sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />}\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          {emptyStateMessage}\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <TableContainer component={Paper} sx={{ mt: 2 }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {showCheckboxes && (\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  indeterminate={selectedRows.length > 0 && selectedRows.length < data.length}\n                  checked={data.length > 0 && selectedRows.length === data.length}\n                  onChange={onSelectAll}\n                />\n              </TableCell>\n            )}\n            \n            {columns.map((column) => (\n              <TableCell\n                key={column.key}\n                align={column.align || 'left'}\n                sx={{ \n                  fontWeight: 600,\n                  minWidth: column.minWidth,\n                  width: column.width\n                }}\n              >\n                {column.sortable !== false ? (\n                  <TableSortLabel\n                    active={sortBy === column.key}\n                    direction={sortBy === column.key ? sortDirection : 'asc'}\n                    onClick={() => handleSort(column)}\n                  >\n                    {column.label}\n                  </TableSortLabel>\n                ) : (\n                  column.label\n                )}\n              </TableCell>\n            ))}\n            \n            {actions.length > 0 && (\n              <TableCell align=\"center\" sx={{ width: 60 }}>\n                Actions\n              </TableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        \n        <TableBody>\n          {data.map((row, index) => (\n            <TableRow\n              key={row.id || index}\n              hover\n              selected={selectedRows.includes(row.id)}\n              sx={{ '&:nth-of-type(odd)': { backgroundColor: 'action.hover' } }}\n            >\n              {showCheckboxes && (\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedRows.includes(row.id)}\n                    onChange={() => onSelectRow && onSelectRow(row.id)}\n                  />\n                </TableCell>\n              )}\n              \n              {columns.map((column) => (\n                <TableCell \n                  key={column.key} \n                  align={column.align || 'left'}\n                  sx={{ py: 2 }}\n                >\n                  {renderCellContent(column, row)}\n                </TableCell>\n              ))}\n              \n              {actions.length > 0 && (\n                <TableCell align=\"center\">\n                  <IconButton\n                    size=\"small\"\n                    onClick={(e) => handleMenuOpen(e, row)}\n                  >\n                    <MoreVertIcon />\n                  </IconButton>\n                </TableCell>\n              )}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      {/* Actions Menu */}\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        PaperProps={{\n          sx: { minWidth: 120 }\n        }}\n      >\n        {actions.map((action) => (\n          <MenuItem\n            key={action.key}\n            onClick={() => handleAction(action.key)}\n            disabled={action.disabled && action.disabled(selectedRowData)}\n          >\n            <ListItemIcon>\n              {action.icon}\n            </ListItemIcon>\n            <ListItemText>\n              {action.label}\n            </ListItemText>\n          </MenuItem>\n        ))}\n      </Menu>\n    </TableContainer>\n  );\n};\n\nexport default UnifiedTableView;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m20.54 5.23-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27M12 17.5 6.5 12H10v-2h4v2h3.5zM5.12 5l.81-1h12l.94 1z\"\n}), 'Archive');","import React, { useState } from 'react';\nimport {\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider\n} from '@mui/material';\nimport {\n  MoreVert as MoreVertIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Visibility as ViewIcon,\n  Star as StarIcon,\n  StarBorder as StarBorderIcon,\n  Share as ShareIcon,\n  ContentCopy as DuplicateIcon,\n  Archive as ArchiveIcon\n} from '@mui/icons-material';\n\nconst OptionsMenu = ({ \n  options = [],\n  onAction,\n  iconButtonProps = {},\n  menuProps = {},\n  disabled = false\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    event.stopPropagation(); // Prevent triggering parent click events\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuAction = (action, option) => {\n    handleClose();\n    if (onAction) {\n      onAction(action, option);\n    }\n  };\n\n  const getIcon = (iconType) => {\n    const iconMap = {\n      view: <ViewIcon fontSize=\"small\" />,\n      edit: <EditIcon fontSize=\"small\" />,\n      delete: <DeleteIcon fontSize=\"small\" />,\n      star: <StarIcon fontSize=\"small\" />,\n      unstar: <StarBorderIcon fontSize=\"small\" />,\n      share: <ShareIcon fontSize=\"small\" />,\n      duplicate: <DuplicateIcon fontSize=\"small\" />,\n      archive: <ArchiveIcon fontSize=\"small\" />\n    };\n    return iconMap[iconType] || null;\n  };\n\n  const getColorForAction = (action) => {\n    if (action === 'delete') return 'error.main';\n    if (action === 'archive') return 'warning.main';\n    return 'text.primary';\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={handleClick}\n        disabled={disabled}\n        size=\"small\"\n        sx={{\n          opacity: 0.7,\n          transition: 'opacity 0.2s ease',\n          '&:hover': {\n            opacity: 1,\n            backgroundColor: 'rgba(0, 0, 0, 0.04)'\n          },\n          ...iconButtonProps.sx\n        }}\n        {...iconButtonProps}\n      >\n        <MoreVertIcon fontSize=\"small\" />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        onClick={(e) => e.stopPropagation()}\n        PaperProps={{\n          sx: {\n            minWidth: 160,\n            boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)',\n            border: '1px solid #E9ECEF',\n            borderRadius: 2,\n            '& .MuiMenuItem-root': {\n              px: 2,\n              py: 1,\n              fontSize: '0.875rem',\n              '&:hover': {\n                backgroundColor: '#F8F9FA'\n              }\n            }\n          }\n        }}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        {...menuProps}\n      >\n        {options.map((option, index) => {\n          if (option.divider) {\n            return <Divider key={`divider-${index}`} sx={{ my: 0.5 }} />;\n          }\n\n          return (\n            <MenuItem\n              key={option.action || index}\n              onClick={() => handleMenuAction(option.action, option)}\n              disabled={option.disabled}\n              sx={{\n                color: getColorForAction(option.action),\n                '&:hover': {\n                  backgroundColor: option.action === 'delete' \n                    ? 'rgba(231, 76, 60, 0.08)' \n                    : 'rgba(0, 0, 0, 0.04)'\n                }\n              }}\n            >\n              {option.icon && (\n                <ListItemIcon sx={{ color: 'inherit', minWidth: 36 }}>\n                  {typeof option.icon === 'string' ? getIcon(option.icon) : option.icon}\n                </ListItemIcon>\n              )}\n              <ListItemText>\n                {option.label}\n              </ListItemText>\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </>\n  );\n};\n\nexport default OptionsMenu;","import React, { useState, useMemo } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  IconButton,\r\n  Grid,\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  MenuItem,\r\n  Divider,\r\n  Badge,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport {\r\n  Edit,\r\n  Delete,\r\n  Email,\r\n  Phone,\r\n  Work,\r\n  Person,\r\n  Star,\r\n  AccountTree,\r\n  AccessTime,\r\n  Visibility,\r\n  Edit as EditIcon\r\n} from '@mui/icons-material';\r\nimport UnifiedHeader from '../../../components/ui/UnifiedHeader';\r\nimport UnifiedFilters from '../../../components/ui/UnifiedFilters';\r\nimport UnifiedTableView from '../../../components/ui/UnifiedTableView';\r\nimport OptionsMenu from '../../../components/ui/OptionsMenu';\r\nimport { exportTeamMembersToExcel } from '../../../services/export/excelExport';\r\n\r\nconst roles = [\r\n  { value: 'project_manager', label: 'Project Manager', color: '#e74c3c', level: 5 },\r\n  { value: 'team_lead', label: 'Team Lead', color: '#e67e22', level: 4 },\r\n  { value: 'senior', label: 'Senior', color: '#f39c12', level: 3 },\r\n  { value: 'junior', label: 'Junior', color: '#27ae60', level: 2 },\r\n  { value: 'client', label: 'Client', color: '#3498db', level: 1 }\r\n];\r\n\r\nconst departments = [\r\n  { value: 'construction', label: 'Construction' },\r\n  { value: 'millwork', label: 'Millwork' },\r\n  { value: 'electrical', label: 'Electrical' },\r\n  { value: 'mechanical', label: 'Mechanical' },\r\n  { value: 'management', label: 'Management' },\r\n  { value: 'client', label: 'Client' }\r\n];\r\n\r\nfunction TeamMembersList({ teamMembers, tasks, onUpdateMember, onDeleteMember, onAddMember, onViewMemberDetail, viewMode: propViewMode, onViewModeChange: propOnViewModeChange }) {\r\n  const [editDialog, setEditDialog] = useState(false);\r\n  const [viewDialog, setViewDialog] = useState(false);\r\n  const [selectedMember, setSelectedMember] = useState(null);\r\n  const [editFormData, setEditFormData] = useState({});\r\n  \r\n  // Enhanced view state\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [viewMode, setViewMode] = useState(propViewMode || 'card');\r\n  const [sortBy, setSortBy] = useState('roleLevel');\r\n  const [sortDirection, setSortDirection] = useState('desc');\r\n  const [filters, setFilters] = useState({\r\n    role: '',\r\n    department: '',\r\n    status: '',\r\n    level: ''\r\n  });\r\n\r\n  // Filter configuration for team members\r\n  const filterConfig = [\r\n    {\r\n      key: 'role',\r\n      label: 'Role',\r\n      type: 'select',\r\n      options: roles\r\n    },\r\n    {\r\n      key: 'department',\r\n      label: 'Department',\r\n      type: 'select',\r\n      options: departments\r\n    },\r\n    {\r\n      key: 'status',\r\n      label: 'Status',\r\n      type: 'select',\r\n      options: [\r\n        { value: 'active', label: 'Active' },\r\n        { value: 'inactive', label: 'Inactive' }\r\n      ]\r\n    },\r\n    {\r\n      key: 'level',\r\n      label: 'Level',\r\n      type: 'select',\r\n      options: [\r\n        { value: '1', label: 'Level 1' },\r\n        { value: '2', label: 'Level 2' },\r\n        { value: '3', label: 'Level 3' },\r\n        { value: '4', label: 'Level 4' },\r\n        { value: '5', label: 'Level 5' },\r\n        { value: '6', label: 'Level 6' },\r\n        { value: '7', label: 'Level 7' },\r\n        { value: '8', label: 'Level 8' },\r\n        { value: '9', label: 'Level 9' },\r\n        { value: '10', label: 'Level 10' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  // Quick filters for team members\r\n  const quickFilters = [\r\n    { key: 'managers', label: 'Managers', filters: { role: 'project_manager' } },\r\n    { key: 'senior', label: 'Senior Staff', filters: { role: 'senior' } },\r\n    { key: 'active', label: 'Active Members', filters: { status: 'active' } },\r\n    { key: 'management', label: 'Management', filters: { department: 'management' } },\r\n    { key: 'construction', label: 'Construction', filters: { department: 'construction' } }\r\n  ];\r\n\r\n  // Table columns configuration\r\n  const tableColumns = [\r\n    {\r\n      key: 'member',\r\n      label: 'Member',\r\n      sortable: true,\r\n      type: 'avatar',\r\n      render: (value, row) => ({\r\n        fallback: row.initials,\r\n        bgColor: row.roleColor,\r\n        text: row.fullName,\r\n        clickable: true,\r\n        onClick: () => onViewMemberDetail && onViewMemberDetail(row)\r\n      })\r\n    },\r\n    {\r\n      key: 'role',\r\n      label: 'Role',\r\n      type: 'chip',\r\n      render: (value, row) => {\r\n        const roleConfig = roles.find(r => r.value === value);\r\n        return {\r\n          label: roleConfig ? roleConfig.label : value,\r\n          color: row.roleColor,\r\n          bgColor: `${row.roleColor}20`\r\n        };\r\n      }\r\n    },\r\n    {\r\n      key: 'department',\r\n      label: 'Department',\r\n      render: (value) => {\r\n        const deptConfig = departments.find(d => d.value === value);\r\n        return deptConfig ? deptConfig.label : value;\r\n      }\r\n    },\r\n    {\r\n      key: 'status',\r\n      label: 'Status',\r\n      type: 'chip',\r\n      render: (value) => ({\r\n        label: value === 'active' ? 'Active' : 'Inactive',\r\n        color: value === 'active' ? '#27ae60' : '#e74c3c',\r\n        bgColor: value === 'active' ? '#eafaf1' : '#fdf2f2'\r\n      })\r\n    },\r\n    {\r\n      key: 'tasks',\r\n      label: 'Task Completion',\r\n      type: 'progress',\r\n      render: (value, row) => {\r\n        const stats = getMemberStats(row.id);\r\n        return stats.completionRate;\r\n      }\r\n    }\r\n  ];\r\n\r\n  // Table actions\r\n  const tableActions = [\r\n    {\r\n      key: 'view',\r\n      label: 'View Details',\r\n      icon: <Visibility />\r\n    },\r\n    {\r\n      key: 'edit',\r\n      label: 'Edit Member',\r\n      icon: <EditIcon />\r\n    },\r\n    {\r\n      key: 'delete',\r\n      label: 'Delete Member',\r\n      icon: <Delete />\r\n    }\r\n  ];\r\n\r\n  const getMemberStats = (memberId) => {\r\n    const memberTasks = tasks.filter(task => task.assignedTo === memberId);\r\n    const completedTasks = memberTasks.filter(task => task.status === 'completed').length;\r\n    const overdueTasks = memberTasks.filter(task => {\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      return task.status !== 'completed' && new Date(task.dueDate) < today;\r\n    }).length;\r\n\r\n    return {\r\n      total: memberTasks.length,\r\n      completed: completedTasks,\r\n      pending: memberTasks.length - completedTasks,\r\n      overdue: overdueTasks,\r\n      completionRate: memberTasks.length > 0 ? Math.round((completedTasks / memberTasks.length) * 100) : 0\r\n    };\r\n  };\r\n\r\n  const getReportsCount = (managerId) => {\r\n    return teamMembers.filter(member => member.reportsTo === managerId).length;\r\n  };\r\n\r\n  const getManagerName = (managerId) => {\r\n    const manager = teamMembers.find(member => member.id === managerId);\r\n    return manager ? manager.fullName : 'No Manager';\r\n  };\r\n\r\n  const handleEdit = (member) => {\r\n    setSelectedMember(member);\r\n    setEditFormData({\r\n      firstName: member.firstName,\r\n      lastName: member.lastName,\r\n      email: member.email,\r\n      phone: member.phone || '',\r\n      role: member.role,\r\n      department: member.department,\r\n      reportsTo: member.reportsTo || '',\r\n      hourlyRate: member.hourlyRate || '',\r\n      notes: member.notes || '',\r\n      status: member.status\r\n    });\r\n    setEditDialog(true);\r\n  };\r\n\r\n  const handleView = (member) => {\r\n    setSelectedMember(member);\r\n    setViewDialog(true);\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    const selectedRole = roles.find(r => r.value === editFormData.role);\r\n    \r\n    onUpdateMember(selectedMember.id, {\r\n      ...editFormData,\r\n      fullName: `${editFormData.firstName.trim()} ${editFormData.lastName.trim()}`,\r\n      initials: `${editFormData.firstName.charAt(0)}${editFormData.lastName.charAt(0)}`.toUpperCase(),\r\n      roleLevel: selectedRole.level,\r\n      roleColor: selectedRole.color\r\n    });\r\n    \r\n    setEditDialog(false);\r\n    setSelectedMember(null);\r\n  };\r\n\r\n  const handleDelete = (member) => {\r\n    if (window.confirm(`Are you sure you want to delete ${member.fullName}? This action cannot be undone.`)) {\r\n      onDeleteMember(member.id);\r\n    }\r\n  };\r\n\r\n  const formatJoinDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', { \r\n      year: 'numeric', \r\n      month: 'short', \r\n      day: 'numeric' \r\n    });\r\n  };\r\n\r\n  // Filter and sort team members\r\n  const filteredAndSortedMembers = useMemo(() => {\r\n    let filtered = teamMembers.filter(member => {\r\n      // Search filter\r\n      const searchLower = searchValue.toLowerCase();\r\n      const matchesSearch = !searchValue || \r\n        member.fullName.toLowerCase().includes(searchLower) ||\r\n        member.email.toLowerCase().includes(searchLower) ||\r\n        member.position?.toLowerCase().includes(searchLower);\r\n\r\n      // Role filter\r\n      const matchesRole = !filters.role || member.role === filters.role;\r\n\r\n      // Department filter\r\n      const matchesDepartment = !filters.department || member.department === filters.department;\r\n\r\n      // Status filter\r\n      const matchesStatus = !filters.status || member.status === filters.status;\r\n\r\n      // Level filter\r\n      const matchesLevel = !filters.level || member.level?.toString() === filters.level;\r\n\r\n      return matchesSearch && matchesRole && matchesDepartment && matchesStatus && matchesLevel;\r\n    });\r\n\r\n    // Sort members\r\n    filtered.sort((a, b) => {\r\n      let aValue, bValue;\r\n\r\n      switch (sortBy) {\r\n        case 'member':\r\n        case 'fullName':\r\n          aValue = a.fullName.toLowerCase();\r\n          bValue = b.fullName.toLowerCase();\r\n          break;\r\n        case 'roleLevel':\r\n          aValue = a.level || 0;\r\n          bValue = b.level || 0;\r\n          break;\r\n        case 'role':\r\n          aValue = a.role;\r\n          bValue = b.role;\r\n          break;\r\n        case 'department':\r\n          aValue = a.department;\r\n          bValue = b.department;\r\n          break;\r\n        case 'email':\r\n          aValue = a.email.toLowerCase();\r\n          bValue = b.email.toLowerCase();\r\n          break;\r\n        case 'status':\r\n          aValue = a.status;\r\n          bValue = b.status;\r\n          break;\r\n        default:\r\n          return 0;\r\n      }\r\n\r\n      if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    return filtered;\r\n  }, [teamMembers, searchValue, filters, sortBy, sortDirection]);\r\n\r\n  // Get active filters for display\r\n  const activeFilters = Object.entries(filters)\r\n    .filter(([key, value]) => value !== '')\r\n    .map(([key, value]) => {\r\n      let label = key.charAt(0).toUpperCase() + key.slice(1);\r\n      let displayValue = value;\r\n      \r\n      if (key === 'role') {\r\n        const role = roles.find(r => r.value === value);\r\n        displayValue = role ? role.label : value;\r\n      } else if (key === 'department') {\r\n        const dept = departments.find(d => d.value === value);\r\n        displayValue = dept ? dept.label : value;\r\n      }\r\n      \r\n      return { key, label, value: displayValue };\r\n    });\r\n\r\n  // Event handlers\r\n  const handleFilterChange = (key, value) => {\r\n    setFilters(prev => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const handleClearFilters = () => {\r\n    setFilters({\r\n      role: '',\r\n      department: '',\r\n      status: '',\r\n      level: ''\r\n    });\r\n  };\r\n\r\n  const handleClearFilter = (key) => {\r\n    if (key === 'all') {\r\n      handleClearFilters();\r\n    } else {\r\n      setFilters(prev => ({ ...prev, [key]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleApplyQuickFilter = (quickFilter) => {\r\n    setFilters(prev => ({ ...prev, ...quickFilter.filters }));\r\n  };\r\n\r\n  const handleSort = (column, direction) => {\r\n    setSortBy(column);\r\n    setSortDirection(direction);\r\n  };\r\n\r\n  const handleRowAction = (action, member) => {\r\n    switch (action) {\r\n      case 'view':\r\n        handleView(member);\r\n        break;\r\n      case 'edit':\r\n        handleEdit(member);\r\n        break;\r\n      case 'delete':\r\n        handleDelete(member);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleExport = () => {\r\n    exportTeamMembersToExcel(filteredAndSortedMembers, tasks);\r\n  };\r\n\r\n  // Sort members by role level (highest first) then by name\r\n  const sortedMembers = [...teamMembers].sort((a, b) => {\r\n    if (a.level !== b.level) {\r\n      return b.level - a.level;\r\n    }\r\n    return a.fullName.localeCompare(b.fullName);\r\n  });\r\n\r\n  // Empty state\r\n  if (teamMembers.length === 0) {\r\n    return (\r\n      <Box>\r\n        <UnifiedHeader\r\n          title=\"Team Members\"\r\n          searchValue={searchValue}\r\n          onSearchChange={setSearchValue}\r\n          showFilters={showFilters}\r\n          onToggleFilters={() => setShowFilters(!showFilters)}\r\n          activeFiltersCount={activeFilters.length}\r\n          viewMode={viewMode}\r\n          onViewModeChange={setViewMode}\r\n          onExport={handleExport}\r\n          onAdd={onAddMember}\r\n          addButtonText=\"Add Member\"\r\n          activeFilters={activeFilters}\r\n          onClearFilter={handleClearFilter}\r\n        />\r\n        <Box sx={{ textAlign: 'center', py: 4 }}>\r\n          <Person sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />\r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            No team members added yet. Add your first team member to get started!\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {/* Unified Header */}\r\n      <UnifiedHeader\r\n        title=\"Team Members\"\r\n        searchValue={searchValue}\r\n        onSearchChange={setSearchValue}\r\n        showFilters={showFilters}\r\n        onToggleFilters={() => setShowFilters(!showFilters)}\r\n        activeFiltersCount={activeFilters.length}\r\n        viewMode={viewMode}\r\n        onViewModeChange={(mode) => {\r\n          setViewMode(mode);\r\n          if (propOnViewModeChange) propOnViewModeChange(mode);\r\n        }}\r\n        onExport={handleExport}\r\n        onAdd={onAddMember}\r\n        addButtonText=\"Add Member\"\r\n        activeFilters={activeFilters}\r\n        onClearFilter={handleClearFilter}\r\n      />\r\n\r\n      {/* Unified Filters */}\r\n      <UnifiedFilters\r\n        show={showFilters}\r\n        filters={filters}\r\n        onFilterChange={handleFilterChange}\r\n        onClearFilters={handleClearFilters}\r\n        onApplyQuickFilter={handleApplyQuickFilter}\r\n        filterConfig={filterConfig}\r\n        quickFilters={quickFilters}\r\n      />\r\n\r\n      {/* Table View */}\r\n      {viewMode === 'table' && (\r\n        <UnifiedTableView\r\n          data={filteredAndSortedMembers}\r\n          columns={tableColumns}\r\n          onSort={handleSort}\r\n          sortBy={sortBy}\r\n          sortDirection={sortDirection}\r\n          onRowAction={handleRowAction}\r\n          actions={tableActions}\r\n          emptyStateMessage=\"No team members match your filters\"\r\n          emptyStateIcon={Person}\r\n        />\r\n      )}\r\n\r\n      {/* Card View */}\r\n      {viewMode === 'card' && (\r\n        <Grid container spacing={3}>\r\n          {filteredAndSortedMembers.length === 0 ? (\r\n            <Grid item xs={12}>\r\n              <Box sx={{ textAlign: 'center', py: 4 }}>\r\n                <Person sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  No team members match your filters\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          ) : (\r\n            filteredAndSortedMembers.map((member) => {\r\n          const stats = getMemberStats(member.id);\r\n          const reportsCount = getReportsCount(member.id);\r\n          const roleInfo = roles.find(r => r.value === member.role);\r\n          const deptInfo = departments.find(d => d.value === member.department);\r\n          \r\n          return (\r\n              <Grid item xs={12} sm={6} md={4} lg={3} key={member.id}>\r\n                <Card\r\n                  sx={{\r\n                    height: 320,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    position: 'relative',\r\n                    borderTop: `4px solid ${member.roleColor}`,\r\n                    '&:hover': {\r\n                      transform: 'translateY(-2px)',\r\n                      boxShadow: 3\r\n                    },\r\n                    transition: 'all 0.2s ease-in-out'\r\n                  }}\r\n              >\r\n                  <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', p: 2 }}>\r\n                  {/* Header */}\r\n                  <Box sx={{ display: 'flex', alignItems: 'flex-start', mb: 2 }}>\r\n                    <Badge\r\n                      overlap=\"circular\"\r\n                      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n                      badgeContent={\r\n                        <Box\r\n                          sx={{\r\n                            width: 12,\r\n                            height: 12,\r\n                            borderRadius: '50%',\r\n                            backgroundColor: member.status === 'active' ? '#27ae60' : '#95a5a6',\r\n                            border: '2px solid white'\r\n                          }}\r\n                        />\r\n                      }\r\n                    >\r\n                      <Avatar\r\n                        sx={{\r\n                          bgcolor: member.roleColor,\r\n                          width: 56,\r\n                          height: 56,\r\n                          fontSize: 20,\r\n                          fontWeight: 'bold'\r\n                        }}\r\n                      >\r\n                        {member.initials}\r\n                      </Avatar>\r\n                    </Badge>\r\n                    \r\n                    <Box sx={{ ml: 2, flex: 1 }}>\r\n                      <Typography \r\n                        variant=\"h6\" \r\n                        component=\"h3\"\r\n                        sx={{\r\n                          cursor: 'pointer',\r\n                          color: '#3498db',\r\n                          textDecoration: 'none',\r\n                          '&:hover': {\r\n                            textDecoration: 'underline',\r\n                            color: '#2980b9'\r\n                          }\r\n                        }}\r\n                        onClick={() => onViewMemberDetail && onViewMemberDetail(member)}\r\n                      >\r\n                        {member.fullName}\r\n                      </Typography>\r\n                      <Chip\r\n                        label={roleInfo?.label}\r\n                        size=\"small\"\r\n                        sx={{\r\n                          backgroundColor: member.roleColor + '20',\r\n                          color: member.roleColor,\r\n                          fontWeight: 'bold',\r\n                          mb: 1\r\n                        }}\r\n                      />\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {deptInfo?.label}\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <OptionsMenu\r\n                      options={[\r\n                        {\r\n                          action: 'view',\r\n                          label: 'View Details',\r\n                          icon: 'view'\r\n                        },\r\n                        {\r\n                          action: 'edit',\r\n                          label: 'Edit Member',\r\n                          icon: 'edit'\r\n                        },\r\n                        { divider: true },\r\n                        {\r\n                          action: 'delete',\r\n                          label: 'Delete Member',\r\n                          icon: 'delete'\r\n                        }\r\n                      ]}\r\n                      onAction={(action) => {\r\n                        switch (action) {\r\n                          case 'view':\r\n                            handleView(member);\r\n                            break;\r\n                          case 'edit':\r\n                            handleEdit(member);\r\n                            break;\r\n                          case 'delete':\r\n                            handleDelete(member);\r\n                            break;\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Contact Info - Removed from card view, kept in details */}\r\n\r\n                  {/* Stats */}\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                      Task Performance\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                      <Chip \r\n                        label={`${stats.total} total`} \r\n                        size=\"small\" \r\n                        variant=\"outlined\"\r\n                      />\r\n                      <Chip \r\n                        label={`${stats.completed} done`} \r\n                        size=\"small\" \r\n                        sx={{ backgroundColor: '#eafaf1', color: '#27ae60' }}\r\n                      />\r\n                      {stats.overdue > 0 && (\r\n                        <Chip \r\n                          label={`${stats.overdue} overdue`} \r\n                          size=\"small\" \r\n                          sx={{ backgroundColor: '#fdf2f2', color: '#e74c3c' }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                      Completion Rate: {stats.completionRate}%\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  {/* Hierarchy Info */}\r\n                  <Box sx={{ mb: 2 }}>\r\n                    {member.reportsTo && (\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>\r\n                        <AccountTree fontSize=\"small\" color=\"action\" />\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          Reports to: {getManagerName(member.reportsTo)}\r\n                        </Typography>\r\n                      </Box>\r\n                    )}\r\n                    {reportsCount > 0 && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Manages: {reportsCount} team member{reportsCount > 1 ? 's' : ''}\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n\r\n                  {/* Join Date */}\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                    <AccessTime fontSize=\"small\" color=\"action\" />\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Joined: {formatJoinDate(member.joinedAt)}\r\n                    </Typography>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            );\r\n            })\r\n          )}\r\n        </Grid>\r\n      )}\r\n\r\n      {/* Edit Dialog */}\r\n      <Dialog open={editDialog} onClose={() => setEditDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Edit Team Member</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 1 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  value={editFormData.firstName || ''}\r\n                  onChange={(e) => setEditFormData({...editFormData, firstName: e.target.value})}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  value={editFormData.lastName || ''}\r\n                  onChange={(e) => setEditFormData({...editFormData, lastName: e.target.value})}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            \r\n            <TextField\r\n              label=\"Email\"\r\n              value={editFormData.email || ''}\r\n              onChange={(e) => setEditFormData({...editFormData, email: e.target.value})}\r\n              fullWidth\r\n            />\r\n            \r\n            <TextField\r\n              label=\"Phone\"\r\n              value={editFormData.phone || ''}\r\n              onChange={(e) => setEditFormData({...editFormData, phone: e.target.value})}\r\n              fullWidth\r\n            />\r\n            \r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  select\r\n                  label=\"Role\"\r\n                  value={editFormData.role || ''}\r\n                  onChange={(e) => setEditFormData({...editFormData, role: e.target.value})}\r\n                  fullWidth\r\n                >\r\n                  {roles.map((role) => (\r\n                    <MenuItem key={role.value} value={role.value}>\r\n                      {role.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  select\r\n                  label=\"Department\"\r\n                  value={editFormData.department || ''}\r\n                  onChange={(e) => setEditFormData({...editFormData, department: e.target.value})}\r\n                  fullWidth\r\n                >\r\n                  {departments.map((dept) => (\r\n                    <MenuItem key={dept.value} value={dept.value}>\r\n                      {dept.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n            \r\n            <TextField\r\n              select\r\n              label=\"Status\"\r\n              value={editFormData.status || 'active'}\r\n              onChange={(e) => setEditFormData({...editFormData, status: e.target.value})}\r\n              fullWidth\r\n            >\r\n              <MenuItem value=\"active\">Active</MenuItem>\r\n              <MenuItem value=\"inactive\">Inactive</MenuItem>\r\n            </TextField>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setEditDialog(false)}>Cancel</Button>\r\n          <Button onClick={handleSaveEdit} variant=\"contained\">Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* View Dialog */}\r\n      <Dialog open={viewDialog} onClose={() => setViewDialog(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Team Member Details</DialogTitle>\r\n        <DialogContent>\r\n          {selectedMember && (\r\n            <Box sx={{ pt: 1 }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>\r\n                <Avatar\r\n                  sx={{\r\n                    bgcolor: selectedMember.roleColor,\r\n                    width: 64,\r\n                    height: 64,\r\n                    fontSize: 24\r\n                  }}\r\n                >\r\n                  {selectedMember.initials}\r\n                </Avatar>\r\n                <Box>\r\n                  <Typography variant=\"h5\">{selectedMember.fullName}</Typography>\r\n                  <Typography variant=\"body1\" color=\"text.secondary\">\r\n                    {roles.find(r => r.value === selectedMember.role)?.label}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {departments.find(d => d.value === selectedMember.department)?.label}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Divider sx={{ mb: 2 }} />\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle2\" gutterBottom>Contact Information</Typography>\r\n                  <Typography variant=\"body2\">Email: {selectedMember.email}</Typography>\r\n                  {selectedMember.phone && (\r\n                    <Typography variant=\"body2\">Phone: {selectedMember.phone}</Typography>\r\n                  )}\r\n                </Grid>\r\n                \r\n                {selectedMember.notes && (\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>Notes</Typography>\r\n                    <Typography variant=\"body2\">{selectedMember.notes}</Typography>\r\n                  </Grid>\r\n                )}\r\n                \r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle2\" gutterBottom>Statistics</Typography>\r\n                  {(() => {\r\n                    const stats = getMemberStats(selectedMember.id);\r\n                    return (\r\n                      <Box>\r\n                        <Typography variant=\"body2\">Total Tasks: {stats.total}</Typography>\r\n                        <Typography variant=\"body2\">Completed: {stats.completed}</Typography>\r\n                        <Typography variant=\"body2\">Pending: {stats.pending}</Typography>\r\n                        <Typography variant=\"body2\">Overdue: {stats.overdue}</Typography>\r\n                        <Typography variant=\"body2\">Completion Rate: {stats.completionRate}%</Typography>\r\n                      </Box>\r\n                    );\r\n                  })()}\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setViewDialog(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TeamMembersList;","import React from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  Chip,\n  Grid,\n  Collapse,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  OutlinedInput\n} from '@mui/material';\nimport {\n  DatePicker\n} from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nconst UnifiedFilters = ({\n  show,\n  filters,\n  onFilterChange,\n  onClearFilters,\n  onApplyQuickFilter,\n  filterConfig,\n  quickFilters = []\n}) => {\n  const handleFilterChange = (key, value) => {\n    onFilterChange(key, value);\n  };\n\n  const handleClearFilter = (key) => {\n    onFilterChange(key, '');\n  };\n\n  const renderFilterField = (config) => {\n    const { key, label, type, options, placeholder } = config;\n    const value = filters[key] || '';\n\n    switch (type) {\n      case 'select':\n        return (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>{label}</InputLabel>\n            <Select\n              value={value}\n              onChange={(e) => handleFilterChange(key, e.target.value)}\n              input={<OutlinedInput label={label} />}\n            >\n              <MenuItem value=\"\">All {label}</MenuItem>\n              {options.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n\n      case 'multiselect':\n        return (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>{label}</InputLabel>\n            <Select\n              multiple\n              value={Array.isArray(value) ? value : []}\n              onChange={(e) => handleFilterChange(key, e.target.value)}\n              input={<OutlinedInput label={label} />}\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((val) => {\n                    const option = options.find(opt => opt.value === val);\n                    return (\n                      <Chip \n                        key={val} \n                        label={option ? option.label : val} \n                        size=\"small\" \n                      />\n                    );\n                  })}\n                </Box>\n              )}\n            >\n              {options.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n\n      case 'date':\n        return (\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              label={label}\n              value={value || null}\n              onChange={(newValue) => handleFilterChange(key, newValue)}\n              slotProps={{\n                textField: {\n                  size: 'small',\n                  fullWidth: true\n                }\n              }}\n            />\n          </LocalizationProvider>\n        );\n\n      case 'number':\n        return (\n          <TextField\n            fullWidth\n            size=\"small\"\n            label={label}\n            type=\"number\"\n            value={value}\n            onChange={(e) => handleFilterChange(key, e.target.value)}\n            placeholder={placeholder}\n          />\n        );\n\n      case 'text':\n      default:\n        return (\n          <TextField\n            fullWidth\n            size=\"small\"\n            label={label}\n            value={value}\n            onChange={(e) => handleFilterChange(key, e.target.value)}\n            placeholder={placeholder}\n          />\n        );\n    }\n  };\n\n  const getActiveFiltersCount = () => {\n    return Object.values(filters).filter(value => {\n      if (Array.isArray(value)) return value.length > 0;\n      if (value instanceof Date) return true;\n      return value !== '' && value !== null && value !== undefined;\n    }).length;\n  };\n\n  return (\n    <Collapse in={show}>\n      <Paper \n        sx={{ \n          p: 3, \n          mb: 3, \n          backgroundColor: 'grey.50',\n          border: 1,\n          borderColor: 'divider'\n        }}\n      >\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\" component=\"h3\">\n            Filters ({getActiveFiltersCount()} active)\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={onClearFilters}\n            disabled={getActiveFiltersCount() === 0}\n          >\n            Clear All\n          </Button>\n        </Box>\n\n        {/* Quick Filters */}\n        {quickFilters.length > 0 && (\n          <>\n            <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\n              Quick Filters\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n              {quickFilters.map((quickFilter) => (\n                <Chip\n                  key={quickFilter.key}\n                  label={quickFilter.label}\n                  onClick={() => onApplyQuickFilter(quickFilter)}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  sx={{ '&:hover': { backgroundColor: 'primary.light', color: 'white' } }}\n                />\n              ))}\n            </Box>\n            <Divider sx={{ mb: 2 }} />\n          </>\n        )}\n\n        {/* Filter Fields */}\n        <Grid container spacing={2}>\n          {filterConfig.map((config) => (\n            <Grid item xs={12} sm={6} md={4} key={config.key}>\n              {renderFilterField(config)}\n            </Grid>\n          ))}\n        </Grid>\n\n        {/* Active Filters Display */}\n        {getActiveFiltersCount() > 0 && (\n          <>\n            <Divider sx={{ my: 2 }} />\n            <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\n              Active Filters\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n              {Object.entries(filters).map(([key, value]) => {\n                if (Array.isArray(value) && value.length === 0) return null;\n                if (!value || value === '') return null;\n                \n                const config = filterConfig.find(c => c.key === key);\n                if (!config) return null;\n\n                let displayValue = value;\n                if (Array.isArray(value)) {\n                  displayValue = value.map(v => {\n                    const option = config.options?.find(opt => opt.value === v);\n                    return option ? option.label : v;\n                  }).join(', ');\n                } else if (config.options) {\n                  const option = config.options.find(opt => opt.value === value);\n                  displayValue = option ? option.label : value;\n                } else if (value instanceof Date) {\n                  displayValue = value.toLocaleDateString();\n                }\n\n                return (\n                  <Chip\n                    key={key}\n                    label={`${config.label}: ${displayValue}`}\n                    onDelete={() => handleClearFilter(key)}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                  />\n                );\n              }).filter(Boolean)}\n            </Box>\n          </>\n        )}\n      </Paper>\n    </Collapse>\n  );\n};\n\nexport default UnifiedFilters;"],"names":["createSvgIcon","_jsx","d","_ref","data","columns","onSort","sortBy","sortDirection","onRowAction","showCheckboxes","selectedRows","onSelectRow","onSelectAll","actions","emptyStateMessage","emptyStateIcon","EmptyStateIcon","anchorEl","setAnchorEl","useState","selectedRowData","setSelectedRowData","handleMenuClose","renderCellContent","column","rowData","console","warn","value","key","safeRender","content","React","undefined","toString","String","render","renderedValue","hasOwnProperty","_jsxs","Box","sx","display","alignItems","gap","children","Avatar","src","width","height","backgroundColor","bgColor","fallback","text","Typography","variant","cursor","clickable","color","textDecoration","onClick","Chip","label","size","icon","fontWeight","fontSize","JSON","stringify","e","error","type","charAt","minWidth","LinearProgress","flexGrow","borderRadius","Date","toLocaleDateString","Intl","NumberFormat","style","currency","format","component","href","concat","Tooltip","title","arrow","overflow","textOverflow","whiteSpace","maxWidth","length","Paper","p","textAlign","mb","TableContainer","mt","Table","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","map","align","sortable","TableSortLabel","active","direction","isAsc","handleSort","TableBody","row","index","hover","selected","includes","id","py","IconButton","handleMenuOpen","currentTarget","MoreVertIcon","Menu","open","Boolean","onClose","PaperProps","action","MenuItem","handleAction","disabled","ListItemIcon","ListItemText","options","onAction","iconButtonProps","menuProps","handleClose","_Fragment","_objectSpread","event","stopPropagation","opacity","transition","boxShadow","border","px","transformOrigin","horizontal","vertical","anchorOrigin","option","divider","Divider","my","handleMenuAction","iconType","view","ViewIcon","edit","EditIcon","delete","DeleteIcon","star","StarIcon","unstar","StarBorderIcon","share","ShareIcon","duplicate","DuplicateIcon","archive","ArchiveIcon","roles","level","departments","_roles$find","_departments$find","teamMembers","tasks","onUpdateMember","onDeleteMember","onAddMember","onViewMemberDetail","viewMode","propViewMode","onViewModeChange","propOnViewModeChange","editDialog","setEditDialog","viewDialog","setViewDialog","selectedMember","setSelectedMember","editFormData","setEditFormData","searchValue","setSearchValue","showFilters","setShowFilters","setViewMode","setSortBy","setSortDirection","filters","setFilters","role","department","status","filterConfig","tableColumns","initials","roleColor","fullName","roleConfig","find","r","deptConfig","getMemberStats","completionRate","tableActions","Visibility","Delete","memberId","memberTasks","filter","task","assignedTo","completedTasks","overdueTasks","today","setHours","dueDate","total","completed","pending","overdue","Math","round","getManagerName","managerId","manager","member","handleEdit","firstName","lastName","email","phone","reportsTo","hourlyRate","notes","handleView","handleDelete","window","confirm","filteredAndSortedMembers","useMemo","filtered","_member$position","_member$level","searchLower","toLowerCase","matchesSearch","position","matchesRole","matchesDepartment","matchesStatus","matchesLevel","sort","a","b","aValue","bValue","activeFilters","Object","entries","_ref2","_ref3","toUpperCase","slice","displayValue","dept","handleClearFilters","handleClearFilter","prev","handleExport","exportTeamMembersToExcel","localeCompare","UnifiedHeader","onSearchChange","onToggleFilters","activeFiltersCount","onExport","onAdd","addButtonText","onClearFilter","Person","mode","UnifiedFilters","show","onFilterChange","handleFilterChange","onClearFilters","onApplyQuickFilter","quickFilter","quickFilters","UnifiedTableView","handleRowAction","Grid","container","spacing","item","xs","stats","reportsCount","roleInfo","deptInfo","sm","md","lg","Card","flexDirection","borderTop","transform","CardContent","Badge","overlap","badgeContent","bgcolor","ml","flex","OptionsMenu","gutterBottom","flexWrap","AccountTree","AccessTime","dateString","joinedAt","year","month","day","Dialog","fullWidth","DialogTitle","DialogContent","TextField","target","select","DialogActions","Button","handleSaveEdit","selectedRole","trim","roleLevel","pt","renderFilterField","config","placeholder","FormControl","InputLabel","Select","input","OutlinedInput","multiple","Array","isArray","renderValue","val","opt","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","newValue","slotProps","textField","getActiveFiltersCount","values","Collapse","in","borderColor","justifyContent","c","v","_config$options","join","onDelete"],"sourceRoot":""}