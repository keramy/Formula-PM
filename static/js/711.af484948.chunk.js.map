{"version":3,"file":"static/js/711.af484948.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/internal/switchBaseClasses.js","../node_modules/@mui/material/esm/internal/SwitchBase.js","../node_modules/@mui/material/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/esm/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/esm/Checkbox/checkboxClasses.js","../node_modules/@mui/material/esm/Checkbox/Checkbox.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { getSwitchBaseUtilityClass } from \"./switchBaseClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)({\n  padding: 9,\n  borderRadius: '50%',\n  variants: [{\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'start' && ownerState.size !== 'small',\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'end' && ownerState.size !== 'small',\n    style: {\n      marginRight: -12\n    }\n  }]\n});\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required = false,\n    tabIndex,\n    type,\n    value,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = {\n    ...props,\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      input: inputProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: SwitchBaseRoot,\n    className: classes.root,\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      component: 'span',\n      ...other\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onFocus: event => {\n        handlers.onFocus?.(event);\n        handleFocus(event);\n      },\n      onBlur: event => {\n        handlers.onBlur?.(event);\n        handleBlur(event);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      centerRipple: true,\n      focusRipple: !disableFocusRipple,\n      disabled,\n      role: undefined,\n      tabIndex: null\n    }\n  });\n  const [InputSlot, inputSlotProps] = useSlot('input', {\n    ref: inputRef,\n    elementType: SwitchBaseInput,\n    className: classes.input,\n    externalForwardedProps,\n    getSlotProps: handlers => ({\n      ...handlers,\n      onChange: event => {\n        handlers.onChange?.(event);\n        handleInputChange(event);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      autoFocus,\n      checked: checkedProp,\n      defaultChecked,\n      disabled,\n      id: hasLabelFor ? id : undefined,\n      name,\n      readOnly,\n      required,\n      tabIndex,\n      type,\n      ...(type === 'checkbox' && value === undefined ? {} : {\n        value\n      })\n    }\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(InputSlot, {\n      ...inputSlotProps\n    }), checked ? checkedIcon : icon]\n  });\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { mergeSlotProps } from \"../utils/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalInputProps = slotProps.input ?? inputProps;\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: CheckboxRoot,\n    className: clsx(classes.root, className),\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      slots,\n      slotProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      type: 'checkbox',\n      icon: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: icon.props.fontSize ?? size\n      }),\n      checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n        fontSize: indeterminateIcon.props.fontSize ?? size\n      }),\n      disableRipple,\n      slots,\n      slotProps: {\n        input: mergeSlotProps(typeof externalInputProps === 'function' ? externalInputProps(ownerState) : externalInputProps, {\n          'data-indeterminate': indeterminate\n        })\n      }\n    }\n  });\n  return /*#__PURE__*/_jsx(RootSlot, {\n    ...rootSlotProps,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes) applied to the `input` element.\n   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","padding","borderRadius","variants","props","edge","size","style","marginLeft","_ref","ownerState","marginRight","_ref2","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","position","opacity","width","height","top","left","margin","zIndex","React","ref","autoFocus","checked","checkedProp","checkedIcon","defaultChecked","disabled","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","slots","slotProps","other","_objectWithoutProperties","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","_objectSpread","classes","root","concat","capitalize","input","composeClasses","useUtilityClasses","externalForwardedProps","RootSlot","rootSlotProps","useSlot","elementType","className","shouldForwardComponentProp","component","getSlotProps","handlers","event","_handlers$onFocus","call","handleFocus","_handlers$onBlur","handleBlur","additionalProps","centerRipple","focusRipple","role","undefined","InputSlot","inputSlotProps","_handlers$onChange","nativeEvent","defaultPrevented","newChecked","target","handleInputChange","_jsxs","children","_jsx","createSvgIcon","d","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","prop","overridesResolver","styles","indeterminate","color","memoTheme","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","createSimplePaletteValueFilter","map","mainChannel","main","_ref3","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","_slotProps$input","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","externalInputProps","clsx","fontSize","mergeSlotProps"],"sourceRoot":""}