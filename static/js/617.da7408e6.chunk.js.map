{"version":3,"file":"static/js/617.da7408e6.chunk.js","mappings":"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","sources":["components/charts/GanttChart.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Chip\r\n} from '@mui/material';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\r\n\r\nconst priorityColors = {\r\n  low: '#27ae60',\r\n  medium: '#f39c12',\r\n  high: '#e67e22',\r\n  urgent: '#e74c3c'\r\n};\r\n\r\nfunction GanttChart({ tasks, projects }) {\r\n  if (tasks.length === 0) {\r\n    return (\r\n      <Box sx={{ textAlign: 'center', py: 4 }}>\r\n        <Typography variant=\"body1\" color=\"text.secondary\">\r\n          Timeline will appear here as you add tasks to your projects\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  const createTimelineData = () => {\r\n    const today = new Date();\r\n    const timelineData = [];\r\n\r\n    for (let i = -7; i <= 30; i++) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() + i);\r\n      \r\n      const dayTasks = tasks.filter(task => {\r\n        const taskDate = new Date(task.dueDate);\r\n        return taskDate.toDateString() === date.toDateString();\r\n      });\r\n\r\n      timelineData.push({\r\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\r\n        fullDate: date.toISOString().split('T')[0],\r\n        tasks: dayTasks.length,\r\n        completedTasks: dayTasks.filter(t => t.status === 'completed').length,\r\n        pendingTasks: dayTasks.filter(t => t.status === 'pending').length,\r\n        isToday: date.toDateString() === today.toDateString(),\r\n        dayTasks: dayTasks\r\n      });\r\n    }\r\n\r\n    return timelineData.filter(day => day.tasks > 0);\r\n  };\r\n\r\n  const timelineData = createTimelineData();\r\n\r\n  const createTaskTimeline = () => {\r\n    const sortedTasks = [...tasks].sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\r\n    \r\n    return sortedTasks.map(task => {\r\n      const project = projects.find(p => p.id === task.projectId);\r\n      const dueDate = new Date(task.dueDate);\r\n      const today = new Date();\r\n      const isOverdue = dueDate < today && task.status !== 'completed';\r\n      const daysFromToday = Math.ceil((dueDate - today) / (1000 * 60 * 60 * 24));\r\n      \r\n      return {\r\n        ...task,\r\n        projectName: project ? project.name : 'Unknown',\r\n        isOverdue,\r\n        daysFromToday,\r\n        formattedDate: dueDate.toLocaleDateString('en-US', { \r\n          month: 'short', \r\n          day: 'numeric',\r\n          year: dueDate.getFullYear() !== today.getFullYear() ? 'numeric' : undefined\r\n        })\r\n      };\r\n    });\r\n  };\r\n\r\n  const taskTimeline = createTaskTimeline();\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <Paper sx={{ p: 2, minWidth: 200 }}>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            {label}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Total Tasks: {data.tasks}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: '#27ae60' }}>\r\n            Completed: {data.completedTasks}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: '#f39c12' }}>\r\n            Pending: {data.pendingTasks}\r\n          </Typography>\r\n          {data.dayTasks.length > 0 && (\r\n            <Box sx={{ mt: 1 }}>\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                Tasks:\r\n              </Typography>\r\n              {data.dayTasks.slice(0, 3).map((task, index) => (\r\n                <Typography key={index} variant=\"caption\" display=\"block\" sx={{ ml: 1 }}>\r\n                  â€¢ {task.name}\r\n                </Typography>\r\n              ))}\r\n              {data.dayTasks.length > 3 && (\r\n                <Typography variant=\"caption\" display=\"block\" sx={{ ml: 1 }}>\r\n                  ... and {data.dayTasks.length - 3} more\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {timelineData.length > 0 && (\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Task Distribution Timeline\r\n          </Typography>\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart data={timelineData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Bar dataKey=\"tasks\" fill=\"#3498db\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </Box>\r\n      )}\r\n\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Task Timeline\r\n      </Typography>\r\n      \r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n        {taskTimeline.map((task) => (\r\n          <Paper\r\n            key={task.id}\r\n            sx={{\r\n              p: 2,\r\n              borderLeft: `4px solid ${task.isOverdue ? '#e74c3c' : priorityColors[task.priority]}`,\r\n              backgroundColor: task.status === 'completed' ? '#f8f9fa' : \r\n                             task.isOverdue ? '#fff5f5' : 'white',\r\n              opacity: task.status === 'completed' ? 0.7 : 1\r\n            }}\r\n          >\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <Box sx={{ flex: 1 }}>\r\n                <Typography \r\n                  variant=\"body1\" \r\n                  sx={{ \r\n                    fontWeight: 500,\r\n                    textDecoration: task.status === 'completed' ? 'line-through' : 'none'\r\n                  }}\r\n                >\r\n                  {task.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {task.projectName} â€¢ {task.assignee}\r\n                </Typography>\r\n              </Box>\r\n              \r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <Chip\r\n                  label={task.priority}\r\n                  size=\"small\"\r\n                  sx={{\r\n                    backgroundColor: `${priorityColors[task.priority]}20`,\r\n                    color: priorityColors[task.priority],\r\n                    fontWeight: 'bold'\r\n                  }}\r\n                />\r\n                \r\n                <Chip\r\n                  label={task.formattedDate}\r\n                  size=\"small\"\r\n                  color={task.isOverdue ? 'error' : task.daysFromToday <= 1 ? 'warning' : 'default'}\r\n                />\r\n                \r\n                {task.status === 'completed' && (\r\n                  <Chip\r\n                    label=\"Done\"\r\n                    size=\"small\"\r\n                    color=\"success\"\r\n                  />\r\n                )}\r\n                \r\n                {task.isOverdue && task.status !== 'completed' && (\r\n                  <Chip\r\n                    label=\"Overdue\"\r\n                    size=\"small\"\r\n                    color=\"error\"\r\n                  />\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Paper>\r\n        ))}\r\n      </Box>\r\n      \r\n      {taskTimeline.length === 0 && (\r\n        <Box sx={{ textAlign: 'center', py: 4 }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            No tasks to display in timeline\r\n          </Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default GanttChart;"],"names":["priorityColors","low","medium","high","urgent","_ref","tasks","projects","length","_jsx","Box","sx","textAlign","py","children","Typography","variant","color","timelineData","createTimelineData","today","Date","i","date","setDate","getDate","dayTasks","filter","task","dueDate","toDateString","push","toLocaleDateString","month","day","fullDate","toISOString","split","completedTasks","t","status","pendingTasks","isToday","taskTimeline","sort","a","b","map","project","find","p","id","projectId","isOverdue","daysFromToday","Math","ceil","_objectSpread","projectName","name","formattedDate","year","getFullYear","undefined","CustomTooltip","_ref2","active","payload","label","data","_jsxs","Paper","minWidth","gutterBottom","mt","display","slice","index","ml","mb","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","content","Bar","fill","flexDirection","gap","borderLeft","concat","priority","backgroundColor","opacity","justifyContent","alignItems","flex","fontWeight","textDecoration","assignee","Chip","size"],"sourceRoot":""}