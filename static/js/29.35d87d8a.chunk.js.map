{"version":3,"file":"static/js/29.35d87d8a.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Email.js","components/ui/UnifiedTableView.js","../node_modules/@mui/icons-material/esm/Phone.js","features/clients/components/ClientForm.js","components/ui/UnifiedFilters.js","../node_modules/@mui/icons-material/esm/LocationOn.js","../node_modules/@mui/icons-material/esm/Language.js","features/clients/components/ClientsList.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Paper,\n  Checkbox,\n  IconButton,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Chip,\n  Avatar,\n  Box,\n  Typography,\n  LinearProgress,\n  Tooltip\n} from '@mui/material';\nimport {\n  MoreVert as MoreVertIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Visibility as ViewIcon\n} from '@mui/icons-material';\n\nconst UnifiedTableView = ({\n  data,\n  columns,\n  onSort,\n  sortBy,\n  sortDirection,\n  onRowAction,\n  showCheckboxes = false,\n  selectedRows = [],\n  onSelectRow,\n  onSelectAll,\n  actions = [],\n  emptyStateMessage = \"No data available\",\n  emptyStateIcon: EmptyStateIcon\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedRowData, setSelectedRowData] = useState(null);\n\n  const handleMenuOpen = (event, rowData) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedRowData(rowData);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedRowData(null);\n  };\n\n  const handleAction = (action) => {\n    if (onRowAction && selectedRowData) {\n      onRowAction(action, selectedRowData);\n    }\n    handleMenuClose();\n  };\n\n  const handleSort = (column) => {\n    if (column.sortable !== false && onSort) {\n      const isAsc = sortBy === column.key && sortDirection === 'asc';\n      onSort(column.key, isAsc ? 'desc' : 'asc');\n    }\n  };\n\n  const renderCellContent = (column, rowData) => {\n    // Ensure rowData is valid\n    if (!rowData || typeof rowData !== 'object') {\n      console.warn('Invalid rowData in renderCellContent:', rowData);\n      return '-';\n    }\n    \n    const value = rowData[column.key];\n\n    // Safety wrapper to ensure we never return invalid React children\n    const safeRender = (content) => {\n      if (React.isValidElement(content)) {\n        return content;\n      }\n      if (typeof content === 'string' || typeof content === 'number') {\n        return content;\n      }\n      if (content === null || content === undefined) {\n        return '-';\n      }\n      if (typeof content === 'boolean') {\n        return content.toString();\n      }\n      if (typeof content === 'object') {\n        console.warn('Attempting to render object as React child:', content);\n        return '[Object]';\n      }\n      return String(content);\n    };\n\n    if (column.render) {\n      try {\n        const renderedValue = column.render(value, rowData);\n      \n      // If the render function returns an object, we need to handle it properly\n      if (typeof renderedValue === 'object' && renderedValue !== null && !React.isValidElement(renderedValue)) {\n        \n        // Handle avatar objects (check for avatar-specific properties)\n        if (renderedValue.hasOwnProperty('fallback') || renderedValue.hasOwnProperty('bgColor') || renderedValue.hasOwnProperty('text')) {\n          return (\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <Avatar \n                src={renderedValue.src} \n                sx={{ \n                  width: 32, \n                  height: 32,\n                  backgroundColor: renderedValue.bgColor || 'primary.main'\n                }}\n              >\n                {renderedValue.fallback || '?'}\n              </Avatar>\n              {renderedValue.text && (\n                <Typography \n                  variant=\"body2\"\n                  sx={{\n                    cursor: renderedValue.clickable ? 'pointer' : 'default',\n                    color: renderedValue.clickable ? '#3498db' : 'inherit',\n                    textDecoration: 'none',\n                    '&:hover': renderedValue.clickable ? {\n                      textDecoration: 'underline',\n                      color: '#2980b9'\n                    } : {}\n                  }}\n                  onClick={renderedValue.clickable ? renderedValue.onClick : undefined}\n                >\n                  {renderedValue.text}\n                </Typography>\n              )}\n            </Box>\n          );\n        }\n        \n        // Handle chip objects (check for chip-specific properties)\n        if (renderedValue.hasOwnProperty('label') || renderedValue.hasOwnProperty('color')) {\n          return (\n            <Chip\n              label={renderedValue.label || 'Unknown'}\n              size=\"small\"\n              icon={renderedValue.icon || null}\n              sx={{\n                backgroundColor: renderedValue.bgColor || 'grey.100',\n                color: renderedValue.color || 'text.primary',\n                fontWeight: 500,\n                '& .MuiChip-icon': {\n                  color: renderedValue.color || 'text.primary',\n                  fontSize: '16px'\n                }\n              }}\n            />\n          );\n        }\n        \n        // For any other object, convert to string as fallback\n        console.warn('Unhandled object in table cell:', renderedValue, 'Column:', column);\n        try {\n          return String(renderedValue.toString ? renderedValue.toString() : JSON.stringify(renderedValue));\n        } catch (e) {\n          console.error('Failed to stringify object:', e, renderedValue);\n          return 'Error: Invalid object';\n        }\n      }\n      \n      // For non-objects or valid React elements, return safely\n      return safeRender(renderedValue);\n      } catch (error) {\n        console.error('Error in column render function:', error, 'Column:', column.key, 'Value:', value);\n        return 'Error: Render failed';\n      }\n    }\n\n    switch (column.type) {\n      case 'avatar':\n        return (\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Avatar \n              src={value?.src} \n              sx={{ \n                width: 32, \n                height: 32,\n                backgroundColor: value?.bgColor || 'primary.main'\n              }}\n            >\n              {value?.fallback || (typeof value === 'string' ? value.charAt(0) : '')}\n            </Avatar>\n            {value?.text && <Typography variant=\"body2\">{value.text}</Typography>}\n          </Box>\n        );\n\n      case 'chip':\n        if (!value) return '-';\n        return (\n          <Chip\n            label={value.label || value}\n            size=\"small\"\n            icon={value.icon || null}\n            sx={{\n              backgroundColor: value.bgColor || 'grey.100',\n              color: value.color || 'text.primary',\n              fontWeight: 500,\n              '& .MuiChip-icon': {\n                color: value.color || 'text.primary',\n                fontSize: '16px'\n              }\n            }}\n          />\n        );\n\n      case 'progress':\n        if (typeof value !== 'number') return '-';\n        return (\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, minWidth: 100 }}>\n            <LinearProgress\n              variant=\"determinate\"\n              value={value}\n              sx={{ flexGrow: 1, height: 8, borderRadius: 4 }}\n            />\n            <Typography variant=\"caption\" sx={{ minWidth: 35 }}>\n              {value}%\n            </Typography>\n          </Box>\n        );\n\n      case 'date':\n        if (!value) return '-';\n        const date = value instanceof Date ? value : new Date(value);\n        return date.toLocaleDateString();\n\n      case 'currency':\n        if (!value) return '-';\n        return new Intl.NumberFormat('en-US', {\n          style: 'currency',\n          currency: 'USD'\n        }).format(value);\n\n      case 'email':\n        if (!value) return '-';\n        return (\n          <Typography \n            variant=\"body2\" \n            component=\"a\" \n            href={`mailto:${value}`}\n            sx={{ color: 'primary.main', textDecoration: 'none' }}\n          >\n            {value}\n          </Typography>\n        );\n\n      case 'phone':\n        if (!value) return '-';\n        return (\n          <Typography \n            variant=\"body2\" \n            component=\"a\" \n            href={`tel:${value}`}\n            sx={{ color: 'primary.main', textDecoration: 'none' }}\n          >\n            {value}\n          </Typography>\n        );\n\n      case 'multiline':\n        if (!value) return '-';\n        return (\n          <Tooltip title={value} arrow>\n            <Typography \n              variant=\"body2\" \n              sx={{ \n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n                maxWidth: 200\n              }}\n            >\n              {value}\n            </Typography>\n          </Tooltip>\n        );\n\n      default:\n        return safeRender(value);\n    }\n  };\n\n  if (data.length === 0) {\n    return (\n      <Paper sx={{ p: 4, textAlign: 'center' }}>\n        {EmptyStateIcon && <EmptyStateIcon sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />}\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          {emptyStateMessage}\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <TableContainer component={Paper} sx={{ mt: 2 }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {showCheckboxes && (\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  indeterminate={selectedRows.length > 0 && selectedRows.length < data.length}\n                  checked={data.length > 0 && selectedRows.length === data.length}\n                  onChange={onSelectAll}\n                />\n              </TableCell>\n            )}\n            \n            {columns.map((column) => (\n              <TableCell\n                key={column.key}\n                align={column.align || 'left'}\n                sx={{ \n                  fontWeight: 600,\n                  minWidth: column.minWidth,\n                  width: column.width\n                }}\n              >\n                {column.sortable !== false ? (\n                  <TableSortLabel\n                    active={sortBy === column.key}\n                    direction={sortBy === column.key ? sortDirection : 'asc'}\n                    onClick={() => handleSort(column)}\n                  >\n                    {column.label}\n                  </TableSortLabel>\n                ) : (\n                  column.label\n                )}\n              </TableCell>\n            ))}\n            \n            {actions.length > 0 && (\n              <TableCell align=\"center\" sx={{ width: 60 }}>\n                Actions\n              </TableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        \n        <TableBody>\n          {data.map((row, index) => (\n            <TableRow\n              key={row.id || index}\n              hover\n              selected={selectedRows.includes(row.id)}\n              sx={{ '&:nth-of-type(odd)': { backgroundColor: 'action.hover' } }}\n            >\n              {showCheckboxes && (\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedRows.includes(row.id)}\n                    onChange={() => onSelectRow && onSelectRow(row.id)}\n                  />\n                </TableCell>\n              )}\n              \n              {columns.map((column) => (\n                <TableCell \n                  key={column.key} \n                  align={column.align || 'left'}\n                  sx={{ py: 2 }}\n                >\n                  {renderCellContent(column, row)}\n                </TableCell>\n              ))}\n              \n              {actions.length > 0 && (\n                <TableCell align=\"center\">\n                  <IconButton\n                    size=\"small\"\n                    onClick={(e) => handleMenuOpen(e, row)}\n                  >\n                    <MoreVertIcon />\n                  </IconButton>\n                </TableCell>\n              )}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      {/* Actions Menu */}\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        PaperProps={{\n          sx: { minWidth: 120 }\n        }}\n      >\n        {actions.map((action) => (\n          <MenuItem\n            key={action.key}\n            onClick={() => handleAction(action.key)}\n            disabled={action.disabled && action.disabled(selectedRowData)}\n          >\n            <ListItemIcon>\n              {action.icon}\n            </ListItemIcon>\n            <ListItemText>\n              {action.label}\n            </ListItemText>\n          </MenuItem>\n        ))}\n      </Menu>\n    </TableContainer>\n  );\n};\n\nexport default UnifiedTableView;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02z\"\n}), 'Phone');","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  OutlinedInput,\n  Typography\n} from '@mui/material';\nimport { useNotification } from '../../../context';\n\nconst ClientForm = ({ onSubmit, initialData, onCancel }) => {\n  const { showNotification } = useNotification();\n  const [formData, setFormData] = useState({\n    companyName: '',\n    contactPersonName: '',\n    contactPersonTitle: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    country: '',\n    postalCode: '',\n    website: '',\n    industry: '',\n    companySize: '',\n    services: [],\n    taxId: '',\n    notes: '',\n    status: 'active',\n    ...initialData\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const industryOptions = [\n    'Banking & Finance',\n    'Technology',\n    'Healthcare',\n    'Manufacturing',\n    'Retail',\n    'Real Estate',\n    'Education',\n    'Government',\n    'Hospitality',\n    'Energy',\n    'Transportation',\n    'Insurance',\n    'Telecommunications',\n    'Media & Entertainment',\n    'Other'\n  ];\n\n  const companySizeOptions = [\n    'Startup (1-10 employees)',\n    'Small (11-50 employees)',\n    'Medium (51-200 employees)',\n    'Large (201-1000 employees)',\n    'Enterprise (1000+ employees)'\n  ];\n\n  const serviceOptions = [\n    'Fit-out Projects',\n    'MEP Engineering',\n    'Project Management',\n    'Design & Planning',\n    'Construction',\n    'Renovation',\n    'Maintenance',\n    'Consulting',\n    'Interior Design',\n    'Procurement'\n  ];\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const handleServicesChange = (event) => {\n    const { value } = event.target;\n    setFormData(prev => ({\n      ...prev,\n      services: typeof value === 'string' ? value.split(',') : value\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.companyName.trim()) {\n      newErrors.companyName = 'Company name is required';\n    }\n\n    if (!formData.contactPersonName.trim()) {\n      newErrors.contactPersonName = 'Contact person name is required';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = 'Phone number is required';\n    }\n\n    if (!formData.address.trim()) {\n      newErrors.address = 'Address is required';\n    }\n\n    if (!formData.city.trim()) {\n      newErrors.city = 'City is required';\n    }\n\n    if (!formData.country.trim()) {\n      newErrors.country = 'Country is required';\n    }\n\n    if (!formData.industry) {\n      newErrors.industry = 'Industry is required';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      showNotification('Please fill in all required fields correctly', 'error');\n      return;\n    }\n\n    onSubmit(formData);\n    showNotification(\n      `Client ${initialData ? 'updated' : 'created'} successfully!`,\n      'success'\n    );\n\n    if (!initialData) {\n      // Reset form for new clients\n      setFormData({\n        companyName: '',\n        contactPersonName: '',\n        contactPersonTitle: '',\n        email: '',\n        phone: '',\n        address: '',\n        city: '',\n        state: '',\n        country: '',\n        postalCode: '',\n        website: '',\n        industry: '',\n        companySize: '',\n        services: [],\n        taxId: '',\n        notes: '',\n        status: 'active'\n      });\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\n      <Grid container spacing={3}>\n        {/* Company Information */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" sx={{ mb: 2, color: '#2C3E50', fontWeight: 600 }}>\n            Company Information\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Company Name *\"\n            name=\"companyName\"\n            value={formData.companyName}\n            onChange={handleInputChange}\n            error={!!errors.companyName}\n            helperText={errors.companyName}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth error={!!errors.industry}>\n            <InputLabel>Industry *</InputLabel>\n            <Select\n              name=\"industry\"\n              value={formData.industry}\n              onChange={handleInputChange}\n              label=\"Industry *\"\n            >\n              {industryOptions.map((industry) => (\n                <MenuItem key={industry} value={industry}>\n                  {industry}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth>\n            <InputLabel>Company Size</InputLabel>\n            <Select\n              name=\"companySize\"\n              value={formData.companySize}\n              onChange={handleInputChange}\n              label=\"Company Size\"\n            >\n              {companySizeOptions.map((size) => (\n                <MenuItem key={size} value={size}>\n                  {size}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Website\"\n            name=\"website\"\n            value={formData.website}\n            onChange={handleInputChange}\n            variant=\"outlined\"\n            placeholder=\"https://www.example.com\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Tax ID\"\n            name=\"taxId\"\n            value={formData.taxId}\n            onChange={handleInputChange}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth>\n            <InputLabel>Status</InputLabel>\n            <Select\n              name=\"status\"\n              value={formData.status}\n              onChange={handleInputChange}\n              label=\"Status\"\n            >\n              <MenuItem value=\"active\">Active</MenuItem>\n              <MenuItem value=\"inactive\">Inactive</MenuItem>\n              <MenuItem value=\"potential\">Potential</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Contact Information */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" sx={{ mb: 2, mt: 2, color: '#2C3E50', fontWeight: 600 }}>\n            Contact Information\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Contact Person Name *\"\n            name=\"contactPersonName\"\n            value={formData.contactPersonName}\n            onChange={handleInputChange}\n            error={!!errors.contactPersonName}\n            helperText={errors.contactPersonName}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Contact Person Title\"\n            name=\"contactPersonTitle\"\n            value={formData.contactPersonTitle}\n            onChange={handleInputChange}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Email *\"\n            name=\"email\"\n            type=\"email\"\n            value={formData.email}\n            onChange={handleInputChange}\n            error={!!errors.email}\n            helperText={errors.email}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Phone *\"\n            name=\"phone\"\n            value={formData.phone}\n            onChange={handleInputChange}\n            error={!!errors.phone}\n            helperText={errors.phone}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        {/* Address Information */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" sx={{ mb: 2, mt: 2, color: '#2C3E50', fontWeight: 600 }}>\n            Address Information\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Address *\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleInputChange}\n            error={!!errors.address}\n            helperText={errors.address}\n            variant=\"outlined\"\n            multiline\n            rows={2}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"City *\"\n            name=\"city\"\n            value={formData.city}\n            onChange={handleInputChange}\n            error={!!errors.city}\n            helperText={errors.city}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"State/Province\"\n            name=\"state\"\n            value={formData.state}\n            onChange={handleInputChange}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Country *\"\n            name=\"country\"\n            value={formData.country}\n            onChange={handleInputChange}\n            error={!!errors.country}\n            helperText={errors.country}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            label=\"Postal Code\"\n            name=\"postalCode\"\n            value={formData.postalCode}\n            onChange={handleInputChange}\n            variant=\"outlined\"\n          />\n        </Grid>\n\n        {/* Services */}\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Services Required</InputLabel>\n            <Select\n              multiple\n              name=\"services\"\n              value={formData.services}\n              onChange={handleServicesChange}\n              input={<OutlinedInput label=\"Services Required\" />}\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value} size=\"small\" />\n                  ))}\n                </Box>\n              )}\n            >\n              {serviceOptions.map((service) => (\n                <MenuItem key={service} value={service}>\n                  {service}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Notes */}\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Notes\"\n            name=\"notes\"\n            value={formData.notes}\n            onChange={handleInputChange}\n            variant=\"outlined\"\n            multiline\n            rows={3}\n            placeholder=\"Additional notes about the client...\"\n          />\n        </Grid>\n\n        {/* Action Buttons */}\n        <Grid item xs={12}>\n          <Box sx={{ display: 'flex', gap: 2, justifyContent: 'flex-end', mt: 2 }}>\n            {onCancel && (\n              <Button\n                onClick={onCancel}\n                variant=\"outlined\"\n                sx={{\n                  borderRadius: '8px',\n                  textTransform: 'none',\n                  fontWeight: 600\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{\n                borderRadius: '8px',\n                textTransform: 'none',\n                fontWeight: 600,\n                px: 4\n              }}\n            >\n              {initialData ? 'Update Client' : 'Create Client'}\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ClientForm;","import React from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  Chip,\n  Grid,\n  Collapse,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  OutlinedInput\n} from '@mui/material';\nimport {\n  DatePicker\n} from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nconst UnifiedFilters = ({\n  show,\n  filters,\n  onFilterChange,\n  onClearFilters,\n  onApplyQuickFilter,\n  filterConfig,\n  quickFilters = []\n}) => {\n  const handleFilterChange = (key, value) => {\n    onFilterChange(key, value);\n  };\n\n  const handleClearFilter = (key) => {\n    onFilterChange(key, '');\n  };\n\n  const renderFilterField = (config) => {\n    const { key, label, type, options, placeholder } = config;\n    const value = filters[key] || '';\n\n    switch (type) {\n      case 'select':\n        return (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>{label}</InputLabel>\n            <Select\n              value={value}\n              onChange={(e) => handleFilterChange(key, e.target.value)}\n              input={<OutlinedInput label={label} />}\n            >\n              <MenuItem value=\"\">All {label}</MenuItem>\n              {options.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n\n      case 'multiselect':\n        return (\n          <FormControl fullWidth size=\"small\">\n            <InputLabel>{label}</InputLabel>\n            <Select\n              multiple\n              value={Array.isArray(value) ? value : []}\n              onChange={(e) => handleFilterChange(key, e.target.value)}\n              input={<OutlinedInput label={label} />}\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((val) => {\n                    const option = options.find(opt => opt.value === val);\n                    return (\n                      <Chip \n                        key={val} \n                        label={option ? option.label : val} \n                        size=\"small\" \n                      />\n                    );\n                  })}\n                </Box>\n              )}\n            >\n              {options.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        );\n\n      case 'date':\n        return (\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              label={label}\n              value={value || null}\n              onChange={(newValue) => handleFilterChange(key, newValue)}\n              slotProps={{\n                textField: {\n                  size: 'small',\n                  fullWidth: true\n                }\n              }}\n            />\n          </LocalizationProvider>\n        );\n\n      case 'number':\n        return (\n          <TextField\n            fullWidth\n            size=\"small\"\n            label={label}\n            type=\"number\"\n            value={value}\n            onChange={(e) => handleFilterChange(key, e.target.value)}\n            placeholder={placeholder}\n          />\n        );\n\n      case 'text':\n      default:\n        return (\n          <TextField\n            fullWidth\n            size=\"small\"\n            label={label}\n            value={value}\n            onChange={(e) => handleFilterChange(key, e.target.value)}\n            placeholder={placeholder}\n          />\n        );\n    }\n  };\n\n  const getActiveFiltersCount = () => {\n    return Object.values(filters).filter(value => {\n      if (Array.isArray(value)) return value.length > 0;\n      if (value instanceof Date) return true;\n      return value !== '' && value !== null && value !== undefined;\n    }).length;\n  };\n\n  return (\n    <Collapse in={show}>\n      <Paper \n        sx={{ \n          p: 3, \n          mb: 3, \n          backgroundColor: 'grey.50',\n          border: 1,\n          borderColor: 'divider'\n        }}\n      >\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\" component=\"h3\">\n            Filters ({getActiveFiltersCount()} active)\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={onClearFilters}\n            disabled={getActiveFiltersCount() === 0}\n          >\n            Clear All\n          </Button>\n        </Box>\n\n        {/* Quick Filters */}\n        {quickFilters.length > 0 && (\n          <>\n            <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\n              Quick Filters\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\n              {quickFilters.map((quickFilter) => (\n                <Chip\n                  key={quickFilter.key}\n                  label={quickFilter.label}\n                  onClick={() => onApplyQuickFilter(quickFilter)}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  sx={{ '&:hover': { backgroundColor: 'primary.light', color: 'white' } }}\n                />\n              ))}\n            </Box>\n            <Divider sx={{ mb: 2 }} />\n          </>\n        )}\n\n        {/* Filter Fields */}\n        <Grid container spacing={2}>\n          {filterConfig.map((config) => (\n            <Grid item xs={12} sm={6} md={4} key={config.key}>\n              {renderFilterField(config)}\n            </Grid>\n          ))}\n        </Grid>\n\n        {/* Active Filters Display */}\n        {getActiveFiltersCount() > 0 && (\n          <>\n            <Divider sx={{ my: 2 }} />\n            <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 600 }}>\n              Active Filters\n            </Typography>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n              {Object.entries(filters).map(([key, value]) => {\n                if (Array.isArray(value) && value.length === 0) return null;\n                if (!value || value === '') return null;\n                \n                const config = filterConfig.find(c => c.key === key);\n                if (!config) return null;\n\n                let displayValue = value;\n                if (Array.isArray(value)) {\n                  displayValue = value.map(v => {\n                    const option = config.options?.find(opt => opt.value === v);\n                    return option ? option.label : v;\n                  }).join(', ');\n                } else if (config.options) {\n                  const option = config.options.find(opt => opt.value === value);\n                  displayValue = option ? option.label : value;\n                } else if (value instanceof Date) {\n                  displayValue = value.toLocaleDateString();\n                }\n\n                return (\n                  <Chip\n                    key={key}\n                    label={`${config.label}: ${displayValue}`}\n                    onDelete={() => handleClearFilter(key)}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                  />\n                );\n              }).filter(Boolean)}\n            </Box>\n          </>\n        )}\n      </Paper>\n    </Collapse>\n  );\n};\n\nexport default UnifiedFilters;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7m0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5\"\n}), 'LocationOn');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2m6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56M12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96M4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2s.06 1.34.14 2zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56m2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8M12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96M14.34 14H9.66c-.09-.66-.16-1.32-.16-2s.07-1.35.16-2h4.68c.09.65.16 1.32.16 2s-.07 1.34-.16 2m.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56M16.36 14c.08-.66.14-1.32.14-2s-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2z\"\n}), 'Language');","import React, { useState, useMemo } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  Chip,\n  IconButton,\n  Menu,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Avatar,\n  ListItemIcon,\n  ListItemText,\n  Tooltip\n} from '@mui/material';\nimport {\n  MoreVert as MoreVertIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Business as BusinessIcon,\n  Email as EmailIcon,\n  Phone as PhoneIcon,\n  LocationOn as LocationIcon,\n  Language as WebsiteIcon,\n  Person as PersonIcon,\n  Visibility as ViewIcon\n} from '@mui/icons-material';\nimport { useNotification } from '../../../context';\nimport ClientForm from './ClientForm';\nimport UnifiedHeader from '../../../components/ui/UnifiedHeader';\nimport UnifiedFilters from '../../../components/ui/UnifiedFilters';\nimport UnifiedTableView from '../../../components/ui/UnifiedTableView';\nimport { exportClientsToExcel } from '../../../services/export/excelExport';\n\nconst ClientsList = ({ clients, onUpdateClient, onDeleteClient, onAddClient, viewMode: propViewMode, onViewModeChange: propOnViewModeChange }) => {\n  const { showNotification } = useNotification();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  \n  // Enhanced view state\n  const [searchValue, setSearchValue] = useState('');\n  const [showFilters, setShowFilters] = useState(false);\n  const [viewMode, setViewMode] = useState('card');\n  const [sortBy, setSortBy] = useState('companyName');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [filters, setFilters] = useState({\n    status: '',\n    industry: '',\n    companySize: '',\n    services: []\n  });\n\n  const handleMenuOpen = (event, client) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedClient(client);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedClient(null);\n  };\n\n  const handleEdit = () => {\n    setEditDialogOpen(true);\n    handleMenuClose();\n  };\n\n  const handleDelete = () => {\n    setDeleteDialogOpen(true);\n    handleMenuClose();\n  };\n\n  const confirmDelete = () => {\n    onDeleteClient(selectedClient.id);\n    setDeleteDialogOpen(false);\n    setSelectedClient(null);\n    showNotification('Client deleted successfully', 'success');\n  };\n\n  const handleEditSubmit = (updatedClient) => {\n    onUpdateClient(selectedClient.id, updatedClient);\n    setEditDialogOpen(false);\n    setSelectedClient(null);\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'active':\n        return '#4CAF50';\n      case 'inactive':\n        return '#757575';\n      case 'potential':\n        return '#FF9800';\n      default:\n        return '#757575';\n    }\n  };\n\n  const getCompanyInitials = (companyName) => {\n    return companyName\n      .split(' ')\n      .map(word => word.charAt(0))\n      .join('')\n      .substring(0, 2)\n      .toUpperCase();\n  };\n\n  // Filter configuration for clients\n  const filterConfig = [\n    {\n      key: 'status',\n      label: 'Status',\n      type: 'select',\n      options: [\n        { value: 'active', label: 'Active' },\n        { value: 'inactive', label: 'Inactive' },\n        { value: 'potential', label: 'Potential' }\n      ]\n    },\n    {\n      key: 'industry',\n      label: 'Industry',\n      type: 'select',\n      options: [\n        { value: 'construction', label: 'Construction' },\n        { value: 'finance', label: 'Finance' },\n        { value: 'technology', label: 'Technology' },\n        { value: 'healthcare', label: 'Healthcare' },\n        { value: 'retail', label: 'Retail' },\n        { value: 'manufacturing', label: 'Manufacturing' },\n        { value: 'education', label: 'Education' },\n        { value: 'government', label: 'Government' },\n        { value: 'hospitality', label: 'Hospitality' },\n        { value: 'real_estate', label: 'Real Estate' },\n        { value: 'automotive', label: 'Automotive' },\n        { value: 'other', label: 'Other' }\n      ]\n    },\n    {\n      key: 'companySize',\n      label: 'Company Size',\n      type: 'select',\n      options: [\n        { value: 'startup', label: 'Startup (1-10)' },\n        { value: 'small', label: 'Small (11-50)' },\n        { value: 'medium', label: 'Medium (51-200)' },\n        { value: 'large', label: 'Large (201-1000)' },\n        { value: 'enterprise', label: 'Enterprise (1000+)' }\n      ]\n    },\n    {\n      key: 'services',\n      label: 'Services Required',\n      type: 'multiselect',\n      options: [\n        { value: 'general-contractor', label: 'General Contractor' },\n        { value: 'fit-out', label: 'Fit-out' },\n        { value: 'mep', label: 'MEP' },\n        { value: 'electrical', label: 'Electrical' },\n        { value: 'millwork', label: 'Millwork' },\n        { value: 'management', label: 'Project Management' }\n      ]\n    }\n  ];\n\n  // Quick filters for clients\n  const quickFilters = [\n    { key: 'active', label: 'Active Clients', filters: { status: 'active' } },\n    { key: 'potential', label: 'Potential Clients', filters: { status: 'potential' } },\n    { key: 'construction', label: 'Construction', filters: { industry: 'construction' } },\n    { key: 'finance', label: 'Finance', filters: { industry: 'finance' } },\n    { key: 'large', label: 'Large Companies', filters: { companySize: 'large' } }\n  ];\n\n  // Table columns configuration\n  const tableColumns = [\n    {\n      key: 'company',\n      label: 'Company',\n      sortable: true,\n      type: 'avatar',\n      render: (value, row) => ({\n        fallback: getCompanyInitials(row.companyName),\n        bgColor: '#E67E22',\n        text: row.companyName\n      })\n    },\n    {\n      key: 'contactPersonName',\n      label: 'Contact Person',\n      sortable: true\n    },\n    {\n      key: 'contactPersonTitle',\n      label: 'Title',\n      sortable: true\n    },\n    {\n      key: 'industry',\n      label: 'Industry',\n      render: (value) => {\n        const industryConfig = filterConfig.find(f => f.key === 'industry');\n        const option = industryConfig?.options.find(opt => opt.value === value);\n        return option ? option.label : value;\n      }\n    },\n    {\n      key: 'email',\n      label: 'Email',\n      type: 'email'\n    },\n    {\n      key: 'phone',\n      label: 'Phone',\n      type: 'phone'\n    },\n    {\n      key: 'status',\n      label: 'Status',\n      type: 'chip',\n      render: (value) => ({\n        label: value.charAt(0).toUpperCase() + value.slice(1),\n        color: getStatusColor(value),\n        bgColor: `${getStatusColor(value)}20`\n      })\n    }\n  ];\n\n  // Table actions\n  const tableActions = [\n    {\n      key: 'view',\n      label: 'View Details',\n      icon: <ViewIcon />\n    },\n    {\n      key: 'edit',\n      label: 'Edit Client',\n      icon: <EditIcon />\n    },\n    {\n      key: 'delete',\n      label: 'Delete Client',\n      icon: <DeleteIcon />\n    }\n  ];\n\n  // Filter and sort clients\n  const filteredAndSortedClients = useMemo(() => {\n    let filtered = clients.filter(client => {\n      // Search filter\n      const searchLower = searchValue.toLowerCase();\n      const matchesSearch = !searchValue || \n        (client.companyName || '').toLowerCase().includes(searchLower) ||\n        (client.contactPersonName || '').toLowerCase().includes(searchLower) ||\n        (client.email || '').toLowerCase().includes(searchLower) ||\n        (client.industry || '').toLowerCase().includes(searchLower);\n\n      // Status filter\n      const matchesStatus = !filters.status || client.status === filters.status;\n\n      // Industry filter\n      const matchesIndustry = !filters.industry || client.industry === filters.industry;\n\n      // Company size filter\n      const matchesCompanySize = !filters.companySize || client.companySize === filters.companySize;\n\n      // Services filter\n      const matchesServices = !filters.services.length || \n        (client.services && filters.services.some(service => client.services.includes(service)));\n\n      return matchesSearch && matchesStatus && matchesIndustry && matchesCompanySize && matchesServices;\n    });\n\n    // Sort clients\n    filtered.sort((a, b) => {\n      let aValue, bValue;\n\n      switch (sortBy) {\n        case 'company':\n        case 'companyName':\n          aValue = (a.companyName || '').toLowerCase();\n          bValue = (b.companyName || '').toLowerCase();\n          break;\n        case 'contactPersonName':\n          aValue = (a.contactPersonName || '').toLowerCase();\n          bValue = (b.contactPersonName || '').toLowerCase();\n          break;\n        case 'industry':\n          aValue = a.industry || '';\n          bValue = b.industry || '';\n          break;\n        case 'status':\n          aValue = a.status || '';\n          bValue = b.status || '';\n          break;\n        default:\n          return 0;\n      }\n\n      if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\n      if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });\n\n    return filtered;\n  }, [clients, searchValue, filters, sortBy, sortDirection]);\n\n  // Get active filters for display\n  const activeFilters = Object.entries(filters)\n    .filter(([key, value]) => {\n      if (Array.isArray(value)) return value.length > 0;\n      return value !== '';\n    })\n    .map(([key, value]) => {\n      let label = key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1');\n      let displayValue = value;\n      \n      if (key === 'industry' || key === 'status' || key === 'companySize') {\n        const config = filterConfig.find(f => f.key === key);\n        const option = config?.options.find(opt => opt.value === value);\n        displayValue = option ? option.label : value;\n      } else if (Array.isArray(value)) {\n        const config = filterConfig.find(f => f.key === key);\n        displayValue = value.map(v => {\n          const option = config?.options.find(opt => opt.value === v);\n          return option ? option.label : v;\n        }).join(', ');\n      }\n      \n      return { key, label, value: displayValue };\n    });\n\n  // Event handlers\n  const handleFilterChange = (key, value) => {\n    setFilters(prev => ({ ...prev, [key]: value }));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      status: '',\n      industry: '',\n      companySize: '',\n      services: []\n    });\n  };\n\n  const handleClearFilter = (key) => {\n    if (key === 'all') {\n      handleClearFilters();\n    } else if (key === 'services') {\n      setFilters(prev => ({ ...prev, [key]: [] }));\n    } else {\n      setFilters(prev => ({ ...prev, [key]: '' }));\n    }\n  };\n\n  const handleApplyQuickFilter = (quickFilter) => {\n    setFilters(prev => ({ ...prev, ...quickFilter.filters }));\n  };\n\n  const handleSort = (column, direction) => {\n    setSortBy(column);\n    setSortDirection(direction);\n  };\n\n  const handleRowAction = (action, client) => {\n    setSelectedClient(client);\n    switch (action) {\n      case 'view':\n        // Handle view action - could open a detailed view\n        console.log('View client:', client);\n        break;\n      case 'edit':\n        setEditDialogOpen(true);\n        break;\n      case 'delete':\n        setDeleteDialogOpen(true);\n        break;\n      default:\n        console.log('Unknown action:', action);\n        break;\n    }\n  };\n\n  const handleExport = () => {\n    exportClientsToExcel(filteredAndSortedClients);\n  };\n\n  // Empty state\n  if (clients.length === 0) {\n    return (\n      <Box>\n        <UnifiedHeader\n          title=\"Clients\"\n          searchValue={searchValue}\n          onSearchChange={setSearchValue}\n          showFilters={showFilters}\n          onToggleFilters={() => setShowFilters(!showFilters)}\n          activeFiltersCount={activeFilters.length}\n          viewMode={viewMode}\n          onViewModeChange={setViewMode}\n          onExport={handleExport}\n          onAdd={onAddClient}\n          addButtonText=\"Add Client\"\n          activeFilters={activeFilters}\n          onClearFilter={handleClearFilter}\n        />\n        <Box sx={{ textAlign: 'center', py: 8 }}>\n          <BusinessIcon sx={{ fontSize: 64, color: '#BDC3C7', mb: 2 }} />\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n            No Clients Found\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            Start by adding your first client to manage their information and projects.\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      {/* Unified Header */}\n      <UnifiedHeader\n        title=\"Clients\"\n        searchValue={searchValue}\n        onSearchChange={setSearchValue}\n        showFilters={showFilters}\n        onToggleFilters={() => setShowFilters(!showFilters)}\n        activeFiltersCount={activeFilters.length}\n        viewMode={viewMode}\n        onViewModeChange={setViewMode}\n        onExport={handleExport}\n        onAdd={onAddClient}\n        addButtonText=\"Add Client\"\n        activeFilters={activeFilters}\n        onClearFilter={handleClearFilter}\n      />\n\n      {/* Unified Filters */}\n      <UnifiedFilters\n        show={showFilters}\n        filters={filters}\n        onFilterChange={handleFilterChange}\n        onClearFilters={handleClearFilters}\n        onApplyQuickFilter={handleApplyQuickFilter}\n        filterConfig={filterConfig}\n        quickFilters={quickFilters}\n      />\n\n      {/* Table View */}\n      {viewMode === 'table' && (\n        <UnifiedTableView\n          data={filteredAndSortedClients}\n          columns={tableColumns}\n          onSort={handleSort}\n          sortBy={sortBy}\n          sortDirection={sortDirection}\n          onRowAction={handleRowAction}\n          actions={tableActions}\n          emptyStateMessage=\"No clients match your filters\"\n          emptyStateIcon={BusinessIcon}\n        />\n      )}\n\n      {/* Card View */}\n      {viewMode === 'card' && (\n        <Grid container spacing={3}>\n          {filteredAndSortedClients.length === 0 ? (\n            <Grid item xs={12}>\n              <Box sx={{ textAlign: 'center', py: 4 }}>\n                <BusinessIcon sx={{ fontSize: 64, color: 'text.secondary', mb: 2 }} />\n                <Typography variant=\"body1\" color=\"text.secondary\">\n                  No clients match your filters\n                </Typography>\n              </Box>\n            </Grid>\n          ) : (\n            filteredAndSortedClients.map((client) => (\n              <Grid item xs={12} sm={6} md={4} lg={3} key={client.id}>\n                <Card\n                  elevation={0}\n                  sx={{\n                    border: '1px solid #E9ECEF',\n                    borderRadius: 3,\n                    height: 320,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    transition: 'all 0.2s ease-in-out',\n                    '&:hover': {\n                      transform: 'translateY(-2px)',\n                      boxShadow: '0 8px 25px rgba(0,0,0,0.1)'\n                    }\n                  }}\n            >\n                  <CardContent sx={{ p: 2, flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n                {/* Header with Company Info */}\n                <Box sx={{ display: 'flex', alignItems: 'flex-start', mb: 2 }}>\n                  <Avatar\n                    sx={{\n                      bgcolor: '#E67E22',\n                      width: 48,\n                      height: 48,\n                      mr: 2,\n                      fontSize: '1.1rem',\n                      fontWeight: 600\n                    }}\n                  >\n                    {getCompanyInitials(client.companyName)}\n                  </Avatar>\n                  \n                  <Box sx={{ flex: 1, minWidth: 0 }}>\n                    <Typography\n                      variant=\"h6\"\n                      sx={{\n                        fontWeight: 600,\n                        color: '#2C3E50',\n                        mb: 0.5,\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap'\n                      }}\n                    >\n                      {client.companyName}\n                    </Typography>\n                    <Chip\n                      label={client.status}\n                      size=\"small\"\n                      sx={{\n                        backgroundColor: getStatusColor(client.status),\n                        color: 'white',\n                        fontWeight: 500,\n                        textTransform: 'capitalize'\n                      }}\n                    />\n                  </Box>\n\n                  <IconButton\n                    size=\"small\"\n                    onClick={(e) => handleMenuOpen(e, client)}\n                    sx={{ color: '#7F8C8D' }}\n                  >\n                    <MoreVertIcon />\n                  </IconButton>\n                </Box>\n\n                {/* Industry */}\n                {client.industry && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n                    <BusinessIcon sx={{ fontSize: 16, color: '#7F8C8D', mr: 1 }} />\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {client.industry}\n                    </Typography>\n                  </Box>\n                )}\n\n                {/* Contact Person */}\n                {client.contactPersonName && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n                    <PersonIcon sx={{ fontSize: 16, color: '#7F8C8D', mr: 1 }} />\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {client.contactPersonName}\n                      {client.contactPersonTitle && ` - ${client.contactPersonTitle}`}\n                    </Typography>\n                  </Box>\n                )}\n\n                {/* Email */}\n                {client.email && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n                    <EmailIcon sx={{ fontSize: 16, color: '#7F8C8D', mr: 1 }} />\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      sx={{\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap'\n                      }}\n                    >\n                      {client.email}\n                    </Typography>\n                  </Box>\n                )}\n\n                {/* Phone */}\n                {client.phone && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n                    <PhoneIcon sx={{ fontSize: 16, color: '#7F8C8D', mr: 1 }} />\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {client.phone}\n                    </Typography>\n                  </Box>\n                )}\n\n                {/* Location */}\n                {client.city && client.country && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n                    <LocationIcon sx={{ fontSize: 16, color: '#7F8C8D', mr: 1 }} />\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {client.city}, {client.country}\n                    </Typography>\n                  </Box>\n                )}\n\n                {/* Website */}\n                {client.website && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <WebsiteIcon sx={{ fontSize: 16, color: '#7F8C8D', mr: 1 }} />\n                    <Typography\n                      variant=\"body2\"\n                      color=\"primary\"\n                      component=\"a\"\n                      href={client.website}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      sx={{\n                        textDecoration: 'none',\n                        '&:hover': { textDecoration: 'underline' },\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap'\n                      }}\n                    >\n                      {client.website}\n                    </Typography>\n                  </Box>\n                )}\n\n                {/* Services */}\n                {client.services && client.services.length > 0 && (\n                  <Box>\n                    <Typography variant=\"caption\" color=\"textSecondary\" sx={{ mb: 1, display: 'block' }}>\n                      Services Required:\n                    </Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {client.services.slice(0, 3).map((service) => (\n                        <Chip\n                          key={service}\n                          label={service}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          sx={{\n                            fontSize: '0.7rem',\n                            height: 24,\n                            borderColor: '#E67E22',\n                            color: '#E67E22'\n                          }}\n                        />\n                      ))}\n                      {client.services.length > 3 && (\n                        <Tooltip\n                          title={client.services.slice(3).join(', ')}\n                          arrow\n                        >\n                          <Chip\n                            label={`+${client.services.length - 3} more`}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            sx={{\n                              fontSize: '0.7rem',\n                              height: 24,\n                              borderColor: '#BDC3C7',\n                              color: '#7F8C8D'\n                            }}\n                          />\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </Box>\n                )}\n              </CardContent>\n                </Card>\n              </Grid>\n            ))\n          )}\n        </Grid>\n      )}\n\n      {/* Context Menu */}\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      >\n        <MenuItem onClick={handleEdit}>\n          <ListItemIcon>\n            <EditIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>Edit Client</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={handleDelete} sx={{ color: 'error.main' }}>\n          <ListItemIcon>\n            <DeleteIcon fontSize=\"small\" color=\"error\" />\n          </ListItemIcon>\n          <ListItemText>Delete Client</ListItemText>\n        </MenuItem>\n      </Menu>\n\n      {/* Edit Dialog */}\n      <Dialog\n        open={editDialogOpen}\n        onClose={() => setEditDialogOpen(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>Edit Client</DialogTitle>\n        <DialogContent>\n          {selectedClient && (\n            <ClientForm\n              onSubmit={handleEditSubmit}\n              initialData={selectedClient}\n              onCancel={() => setEditDialogOpen(false)}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Confirmation Dialog */}\n      <Dialog\n        open={deleteDialogOpen}\n        onClose={() => setDeleteDialogOpen(false)}\n        maxWidth=\"sm\"\n      >\n        <DialogTitle>Confirm Delete</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to delete {selectedClient?.companyName}? \n            This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDeleteDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button onClick={confirmDelete} color=\"error\" variant=\"contained\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default ClientsList;"],"names":["createSvgIcon","_jsx","d","_ref","data","columns","onSort","sortBy","sortDirection","onRowAction","showCheckboxes","selectedRows","onSelectRow","onSelectAll","actions","emptyStateMessage","emptyStateIcon","EmptyStateIcon","anchorEl","setAnchorEl","useState","selectedRowData","setSelectedRowData","handleMenuClose","renderCellContent","column","rowData","console","warn","value","key","safeRender","content","React","undefined","toString","String","render","renderedValue","hasOwnProperty","_jsxs","Box","sx","display","alignItems","gap","children","Avatar","src","width","height","backgroundColor","bgColor","fallback","text","Typography","variant","cursor","clickable","color","textDecoration","onClick","Chip","label","size","icon","fontWeight","fontSize","JSON","stringify","e","error","type","charAt","minWidth","LinearProgress","flexGrow","borderRadius","Date","toLocaleDateString","Intl","NumberFormat","style","currency","format","component","href","concat","Tooltip","title","arrow","overflow","textOverflow","whiteSpace","maxWidth","length","Paper","p","textAlign","mb","TableContainer","mt","Table","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","map","align","sortable","TableSortLabel","active","direction","isAsc","handleSort","TableBody","row","index","hover","selected","includes","id","py","IconButton","handleMenuOpen","currentTarget","MoreVertIcon","Menu","open","Boolean","onClose","PaperProps","action","MenuItem","handleAction","disabled","ListItemIcon","ListItemText","onSubmit","initialData","onCancel","showNotification","useNotification","formData","setFormData","_objectSpread","companyName","contactPersonName","contactPersonTitle","email","phone","address","city","state","country","postalCode","website","industry","companySize","services","taxId","notes","status","errors","setErrors","handleInputChange","name","target","prev","preventDefault","validateForm","newErrors","trim","test","Object","keys","Grid","container","spacing","item","xs","md","TextField","fullWidth","helperText","FormControl","InputLabel","Select","placeholder","multiline","rows","multiple","event","split","input","OutlinedInput","renderValue","flexWrap","service","justifyContent","Button","textTransform","px","show","filters","onFilterChange","onClearFilters","onApplyQuickFilter","filterConfig","quickFilters","handleFilterChange","renderFilterField","config","options","option","Array","isArray","val","find","opt","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","newValue","slotProps","textField","getActiveFiltersCount","values","filter","Collapse","in","border","borderColor","_Fragment","quickFilter","Divider","sm","my","entries","_ref2","c","displayValue","v","_config$options","join","onDelete","handleClearFilter","clients","onUpdateClient","onDeleteClient","onAddClient","viewMode","propViewMode","onViewModeChange","propOnViewModeChange","selectedClient","setSelectedClient","editDialogOpen","setEditDialogOpen","deleteDialogOpen","setDeleteDialogOpen","searchValue","setSearchValue","showFilters","setShowFilters","setViewMode","setSortBy","setSortDirection","setFilters","getStatusColor","getCompanyInitials","word","substring","toUpperCase","tableColumns","industryConfig","f","slice","tableActions","ViewIcon","EditIcon","DeleteIcon","filteredAndSortedClients","useMemo","filtered","client","searchLower","toLowerCase","matchesSearch","matchesStatus","matchesIndustry","matchesCompanySize","matchesServices","some","sort","a","b","aValue","bValue","activeFilters","_ref3","replace","handleClearFilters","handleExport","exportClientsToExcel","UnifiedHeader","onSearchChange","onToggleFilters","activeFiltersCount","onExport","onAdd","addButtonText","onClearFilter","BusinessIcon","gutterBottom","UnifiedFilters","UnifiedTableView","handleRowAction","log","lg","Card","elevation","flexDirection","transition","transform","boxShadow","CardContent","bgcolor","mr","flex","PersonIcon","EmailIcon","PhoneIcon","LocationIcon","WebsiteIcon","rel","transformOrigin","horizontal","vertical","anchorOrigin","handleEdit","handleDelete","Dialog","DialogTitle","DialogContent","ClientForm","updatedClient","DialogActions","confirmDelete"],"sourceRoot":""}