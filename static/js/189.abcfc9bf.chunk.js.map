{"version":3,"file":"static/js/189.abcfc9bf.chunk.js","mappings":"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","sources":["components/views/BoardView.js","../node_modules/@mui/icons-material/esm/PriorityHigh.js","../node_modules/@mui/icons-material/esm/CalendarToday.js","../node_modules/@mui/icons-material/esm/Warning.js","../node_modules/@mui/icons-material/esm/Flag.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { \n  Box, \n  Paper, \n  Typography, \n  Chip, \n  Avatar, \n  Card, \n  CardContent,\n  Tooltip\n} from '@mui/material';\nimport {\n  Flag,\n  PriorityHigh,\n  Warning,\n  CalendarToday,\n  Person as PersonIcon\n} from '@mui/icons-material';\n\nconst BoardView = ({ tasks = [], onTaskUpdate, teamMembers = [], projects = [] }) => {\n\n  // Group tasks by status\n  const columns = useMemo(() => {\n    const columnConfig = [\n      {\n        id: 'pending',\n        title: 'TO DO',\n        color: '#f39c12',\n        bgColor: '#fef9e7'\n      },\n      {\n        id: 'in-progress',\n        title: 'IN PROGRESS', \n        color: '#3498db',\n        bgColor: '#ebf5fb'\n      },\n      {\n        id: 'completed',\n        title: 'DONE',\n        color: '#27ae60',\n        bgColor: '#eafaf1'\n      }\n    ];\n\n    const grouped = {};\n    \n    // Initialize columns\n    columnConfig.forEach(col => {\n      grouped[col.id] = {\n        ...col,\n        tasks: []\n      };\n    });\n\n    // Group tasks by status\n    tasks.forEach(task => {\n      let status = task.status || 'pending';\n      \n      // Handle different status formats\n      if (status === 'in_progress') {\n        status = 'in-progress';\n      }\n      \n      if (grouped[status]) {\n        grouped[status].tasks.push(task);\n      } else {\n        // Fallback to pending if status doesn't match\n        grouped['pending'].tasks.push(task);\n      }\n    });\n\n    return grouped;\n  }, [tasks]);\n\n  const priorityConfig = {\n    low: { label: 'Low', color: '#27ae60', bgColor: '#eafaf1', icon: <Flag fontSize=\"small\" /> },\n    medium: { label: 'Medium', color: '#f39c12', bgColor: '#fef9e7', icon: <Flag fontSize=\"small\" /> },\n    high: { label: 'High', color: '#e67e22', bgColor: '#fef5e7', icon: <Warning fontSize=\"small\" /> },\n    urgent: { label: 'Urgent', color: '#e74c3c', bgColor: '#fdf2f2', icon: <PriorityHigh fontSize=\"small\" /> }\n  };\n\n  const getAssignedMember = (assignedTo) => {\n    return teamMembers.find(member => member.id === assignedTo);\n  };\n\n  const getProjectName = (projectId) => {\n    const project = projects.find(p => p.id === projectId);\n    return project ? project.name : 'Unknown Project';\n  };\n\n  const formatDueDate = (dueDate) => {\n    if (!dueDate) return null;\n    const date = new Date(dueDate);\n    const today = new Date();\n    const diffTime = date - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n    if (diffDays < 0) return { text: `Overdue ${Math.abs(diffDays)}d`, color: '#e74c3c', urgent: true };\n    if (diffDays === 0) return { text: 'Due today', color: '#f39c12', urgent: true };\n    if (diffDays === 1) return { text: 'Due tomorrow', color: '#e67e22', urgent: false };\n    if (diffDays <= 7) return { text: `${diffDays} days left`, color: '#3498db', urgent: false };\n    return { text: date.toLocaleDateString(), color: '#7f8c8d', urgent: false };\n  };\n\n  const TaskCard = ({ task }) => {\n    const assignedMember = getAssignedMember(task.assignedTo);\n    const priority = priorityConfig[task.priority] || priorityConfig.medium;\n    const dueInfo = formatDueDate(task.dueDate);\n\n    return (\n      <Card\n        sx={{\n          mb: 1.5,\n          cursor: 'pointer',\n          backgroundColor: 'white',\n          border: '1px solid #E9ECEF',\n          borderRadius: 2,\n          transition: 'all 0.2s ease-in-out',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n          '&:hover': {\n            boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\n            transform: 'translateY(-1px)'\n          }\n        }}\n      >\n            <CardContent sx={{ p: 2, '&:last-child': { pb: 2 } }}>\n              {/* Task Name */}\n              <Typography \n                variant=\"body2\" \n                sx={{ \n                  fontWeight: 500, \n                  mb: 1,\n                  color: '#2C3E50',\n                  lineHeight: 1.4\n                }}\n              >\n                {task.name}\n              </Typography>\n\n              {/* Priority Badge */}\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n                <Chip\n                  icon={priority.icon}\n                  label={priority.label}\n                  size=\"small\"\n                  sx={{\n                    backgroundColor: priority.bgColor,\n                    color: priority.color,\n                    fontWeight: 500,\n                    height: 20,\n                    fontSize: '0.7rem',\n                    '& .MuiChip-icon': {\n                      color: priority.color,\n                      fontSize: '12px'\n                    }\n                  }}\n                />\n              </Box>\n\n              {/* Project Name */}\n              <Typography \n                variant=\"caption\" \n                sx={{ \n                  color: '#7f8c8d',\n                  display: 'block',\n                  mb: 1\n                }}\n              >\n                {getProjectName(task.projectId)}\n              </Typography>\n\n              {/* Due Date */}\n              {dueInfo && (\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1.5 }}>\n                  <CalendarToday sx={{ fontSize: 12, color: dueInfo.color, mr: 0.5 }} />\n                  <Typography \n                    variant=\"caption\" \n                    sx={{ \n                      color: dueInfo.color,\n                      fontWeight: dueInfo.urgent ? 600 : 400\n                    }}\n                  >\n                    {dueInfo.text}\n                  </Typography>\n                </Box>\n              )}\n\n              {/* Bottom Row - Assignee and Progress */}\n              <Box sx={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                alignItems: 'center',\n                mt: 1\n              }}>\n                {/* Assigned Member */}\n                <Box>\n                  {assignedMember ? (\n                    <Tooltip title={assignedMember.fullName}>\n                      <Avatar\n                        sx={{\n                          width: 24,\n                          height: 24,\n                          fontSize: '0.7rem',\n                          backgroundColor: assignedMember.roleColor || '#3498db'\n                        }}\n                      >\n                        {assignedMember.initials}\n                      </Avatar>\n                    </Tooltip>\n                  ) : (\n                    <Avatar\n                      sx={{\n                        width: 24,\n                        height: 24,\n                        backgroundColor: '#bdc3c7'\n                      }}\n                    >\n                      <PersonIcon sx={{ fontSize: 14 }} />\n                    </Avatar>\n                  )}\n                </Box>\n\n                {/* Progress */}\n                {task.progress !== undefined && task.progress > 0 && (\n                  <Chip\n                    label={`${task.progress}%`}\n                    size=\"small\"\n                    variant=\"outlined\"\n                    sx={{\n                      height: 20,\n                      fontSize: '0.7rem',\n                      borderColor: task.progress === 100 ? '#27ae60' : '#3498db',\n                      color: task.progress === 100 ? '#27ae60' : '#3498db'\n                    }}\n                  />\n                )}\n              </Box>\n            </CardContent>\n          </Card>\n    );\n  };\n\n  return (\n    <Box sx={{ p: 3, height: 'calc(100vh - 200px)', overflow: 'hidden' }}>\n      <Box \n        className=\"board-container\"\n        sx={{ \n          display: 'flex', \n          gap: 3, \n          overflowX: 'auto', \n          height: '100%',\n          pb: 2\n        }}\n      >\n          {Object.entries(columns).map(([columnId, column]) => (\n            <Paper\n              key={columnId}\n              elevation={0}\n              sx={{\n                minWidth: 320,\n                maxWidth: 320,\n                backgroundColor: column.bgColor,\n                border: `1px solid ${column.color}30`,\n                borderRadius: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                height: 'fit-content',\n                maxHeight: '100%'\n              }}\n            >\n              {/* Column Header */}\n              <Box \n                sx={{ \n                  p: 2, \n                  borderBottom: `1px solid ${column.color}30`,\n                  backgroundColor: 'white',\n                  borderRadius: '8px 8px 0 0'\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                  <Typography \n                    variant=\"subtitle2\" \n                    sx={{ \n                      fontSize: '0.875rem', \n                      fontWeight: 600,\n                      color: column.color,\n                      textTransform: 'uppercase',\n                      letterSpacing: 0.5\n                    }}\n                  >\n                    {column.title}\n                  </Typography>\n                  <Chip \n                    label={column.tasks.length} \n                    size=\"small\" \n                    sx={{ \n                      height: 20,\n                      backgroundColor: column.color,\n                      color: 'white',\n                      fontWeight: 600,\n                      fontSize: '0.7rem'\n                    }}\n                  />\n                </Box>\n              </Box>\n              \n              {/* Tasks List */}\n              <Box\n                sx={{ \n                  p: 2, \n                  minHeight: 400,\n                  maxHeight: 'calc(100vh - 350px)',\n                  overflowY: 'auto',\n                  backgroundColor: 'transparent',\n                  transition: 'background-color 0.2s ease'\n                }}\n              >\n                {column.tasks.length === 0 ? (\n                  <Box \n                    sx={{ \n                      textAlign: 'center', \n                      py: 4, \n                      color: '#7f8c8d',\n                      border: '2px dashed #E9ECEF',\n                      borderRadius: 2,\n                      transition: 'all 0.2s ease'\n                    }}\n                  >\n                    <Typography variant=\"body2\">\n                      No tasks in this column\n                    </Typography>\n                  </Box>\n                ) : (\n                  column.tasks.map((task) => (\n                    <TaskCard \n                      key={task.id} \n                      task={task} \n                    />\n                  ))\n                )}\n              </Box>\n            </Paper>\n          ))}\n        </Box>\n    </Box>\n  );\n};\n\nexport default BoardView;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"19\",\n  r: \"2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 3h4v12h-4z\"\n}, \"1\")], 'PriorityHigh');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 18H4V8h16z\"\n}), 'CalendarToday');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2zm12-3h-2v-2h2zm0-4h-2v-4h2z\"\n}), 'Warning');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M14.4 6 14 4H5v17h2v-7h5.6l.4 2h7V6z\"\n}), 'Flag');"],"names":["_ref","tasks","onTaskUpdate","teamMembers","projects","columns","useMemo","grouped","id","title","color","bgColor","forEach","col","_objectSpread","task","status","push","priorityConfig","low","label","icon","_jsx","Flag","fontSize","medium","high","Warning","urgent","PriorityHigh","getProjectName","projectId","project","find","p","name","TaskCard","_ref2","assignedMember","assignedTo","member","priority","dueInfo","dueDate","date","Date","diffTime","diffDays","Math","ceil","text","concat","abs","toLocaleDateString","formatDueDate","Card","sx","mb","cursor","backgroundColor","border","borderRadius","transition","boxShadow","transform","children","_jsxs","CardContent","pb","Typography","variant","fontWeight","lineHeight","Box","display","alignItems","Chip","size","height","CalendarToday","mr","justifyContent","mt","Tooltip","fullName","Avatar","width","roleColor","initials","PersonIcon","undefined","progress","borderColor","overflow","className","gap","overflowX","Object","entries","map","_ref3","columnId","column","Paper","elevation","minWidth","maxWidth","flexDirection","maxHeight","borderBottom","textTransform","letterSpacing","length","minHeight","overflowY","textAlign","py","createSvgIcon","cx","cy","r","d"],"sourceRoot":""}