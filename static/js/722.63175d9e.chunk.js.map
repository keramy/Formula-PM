{"version":3,"file":"static/js/722.63175d9e.chunk.js","mappings":"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","sources":["features/tasks/components/TaskFormPage.js","../node_modules/@mui/icons-material/esm/NavigateNext.js","components/common/FileUpload.js","features/tasks/components/TaskForm.js","../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Edit.js","components/ui/UniversalBreadcrumb.js","components/layout/PageWrapper.js"],"sourcesContent":["import React from 'react';\nimport { Box } from '@mui/material';\nimport TaskForm from './TaskForm';\nimport PageWrapper from '../../../components/layout/PageWrapper';\n\nconst TaskFormPage = ({ \n  task = null, \n  projects, \n  teamMembers, \n  onSubmit, \n  onCancel,\n  isEdit = false \n}) => {\n  const pageTitle = isEdit ? 'Edit Task' : 'Add New Task';\n  const pageType = isEdit ? 'edit-task' : 'add-task';\n  \n  // Build page data for breadcrumbs\n  const pageData = isEdit && task ? {\n    taskId: task.id,\n    taskName: task.name,\n    projectId: task.projectId,\n    status: task.status,\n    priority: task.priority\n  } : {};\n\n  return (\n    <PageWrapper\n      pageType={pageType}\n      pageTitle={pageTitle}\n      pageData={pageData}\n      subtitle={isEdit ? `Editing: ${task?.name}` : 'Create a new task'}\n      onNavigate={(path) => {\n        if (path === '/tasks') {\n          onCancel && onCancel();\n        }\n      }}\n      contentPadding={3}\n    >\n      <Box \n        sx={{ \n          maxWidth: 800, \n          mx: 'auto',\n          backgroundColor: 'white',\n          borderRadius: 3,\n          border: '1px solid #E9ECEF',\n          p: 4\n        }}\n      >\n        <TaskForm\n          projects={projects}\n          teamMembers={teamMembers}\n          onSubmit={onSubmit}\n          onCancel={onCancel}\n          initialTask={task}\n        />\n      </Box>\n    </PageWrapper>\n  );\n};\n\nexport default TaskFormPage;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');","import React, { useState, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Chip,\r\n  LinearProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  CloudUpload,\r\n  AttachFile,\r\n  Delete,\r\n  Download,\r\n  Image,\r\n  PictureAsPdf,\r\n  Description,\r\n  InsertDriveFile,\r\n  Visibility\r\n} from '@mui/icons-material';\r\n\r\n// File type icons and colors\r\nconst fileTypeConfig = {\r\n  image: { icon: <Image />, color: '#4caf50', types: ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'] },\r\n  pdf: { icon: <PictureAsPdf />, color: '#f44336', types: ['pdf'] },\r\n  document: { icon: <Description />, color: '#2196f3', types: ['doc', 'docx', 'txt', 'rtf'] },\r\n  default: { icon: <InsertDriveFile />, color: '#9e9e9e', types: [] }\r\n};\r\n\r\nfunction FileUpload({ taskId, projectId, files = [], onFilesChange, maxFiles = 10, maxSize = 10 }) {\r\n  const [dragOver, setDragOver] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [previewFile, setPreviewFile] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const fileInputRef = useRef(null);\r\n\r\n  const getFileType = (fileName) => {\r\n    const extension = fileName.split('.').pop().toLowerCase();\r\n    for (const [type, config] of Object.entries(fileTypeConfig)) {\r\n      if (config.types.includes(extension)) {\r\n        return { ...config, extension };\r\n      }\r\n    }\r\n    return { ...fileTypeConfig.default, extension };\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    // Size check (MB to bytes)\r\n    if (file.size > maxSize * 1024 * 1024) {\r\n      return `File size must be less than ${maxSize}MB`;\r\n    }\r\n\r\n    // File count check\r\n    if (files.length >= maxFiles) {\r\n      return `Maximum ${maxFiles} files allowed`;\r\n    }\r\n\r\n    // Duplicate check\r\n    if (files.some(f => f.name === file.name)) {\r\n      return 'File with this name already exists';\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const handleFileSelect = (selectedFiles) => {\r\n    const fileList = Array.from(selectedFiles);\r\n    const validFiles = [];\r\n    let errorMsg = '';\r\n\r\n    for (const file of fileList) {\r\n      const validation = validateFile(file);\r\n      if (validation) {\r\n        errorMsg = validation;\r\n        break;\r\n      }\r\n      validFiles.push(file);\r\n    }\r\n\r\n    if (errorMsg) {\r\n      setError(errorMsg);\r\n      setTimeout(() => setError(''), 5000);\r\n      return;\r\n    }\r\n\r\n    // Simulate upload process\r\n    setUploading(true);\r\n    \r\n    setTimeout(() => {\r\n      const newFiles = validFiles.map(file => ({\r\n        id: Date.now() + Math.random(),\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        uploadDate: new Date().toISOString(),\r\n        taskId,\r\n        projectId,\r\n        url: URL.createObjectURL(file), // In real app, this would be server URL\r\n        file: file // Store file object for preview\r\n      }));\r\n\r\n      onFilesChange([...files, ...newFiles]);\r\n      setUploading(false);\r\n      setError('');\r\n    }, 1500);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n    \r\n    const droppedFiles = e.dataTransfer.files;\r\n    if (droppedFiles.length > 0) {\r\n      handleFileSelect(droppedFiles);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    setDragOver(true);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    setDragOver(false);\r\n  };\r\n\r\n  const handleFileInputChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      handleFileSelect(e.target.files);\r\n    }\r\n  };\r\n\r\n  const handleDeleteFile = (fileId) => {\r\n    const updatedFiles = files.filter(file => file.id !== fileId);\r\n    onFilesChange(updatedFiles);\r\n  };\r\n\r\n  const handlePreviewFile = (file) => {\r\n    const fileType = getFileType(file.name);\r\n    if (fileType.extension === 'pdf' || fileType.types.includes('image')) {\r\n      setPreviewFile(file);\r\n    } else {\r\n      // For other file types, trigger download\r\n      handleDownloadFile(file);\r\n    }\r\n  };\r\n\r\n  const handleDownloadFile = (file) => {\r\n    const link = document.createElement('a');\r\n    link.href = file.url;\r\n    link.download = file.name;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Upload Area */}\r\n      <Paper\r\n        sx={{\r\n          p: 3,\r\n          mb: 3,\r\n          border: `2px dashed ${dragOver ? '#37444B' : '#C0B19E'}`,\r\n          backgroundColor: dragOver ? '#F1EEEA' : 'transparent',\r\n          cursor: 'pointer',\r\n          transition: 'all 0.3s ease',\r\n          textAlign: 'center'\r\n        }}\r\n        onDrop={handleDrop}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onClick={() => fileInputRef.current?.click()}\r\n      >\r\n        <CloudUpload sx={{ fontSize: 48, color: '#C0B19E', mb: 2 }} />\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Drop files here or click to browse\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n          Supports: Images, PDFs, Documents\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          Max {maxFiles} files, {maxSize}MB each\r\n        </Typography>\r\n        \r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          multiple\r\n          style={{ display: 'none' }}\r\n          onChange={handleFileInputChange}\r\n          accept=\"image/*,.pdf,.doc,.docx,.txt\"\r\n        />\r\n      </Paper>\r\n\r\n      {/* Upload Progress */}\r\n      {uploading && (\r\n        <Box sx={{ mb: 3 }}>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Uploading files...\r\n          </Typography>\r\n          <LinearProgress />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Files List */}\r\n      {files.length > 0 && (\r\n        <Paper sx={{ p: 2 }}>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <AttachFile />\r\n            Attached Files ({files.length})\r\n          </Typography>\r\n          \r\n          <List>\r\n            {files.map((file) => {\r\n              const fileType = getFileType(file.name);\r\n              \r\n              return (\r\n                <ListItem\r\n                  key={file.id}\r\n                  sx={{\r\n                    border: 1,\r\n                    borderColor: 'divider',\r\n                    borderRadius: 2,\r\n                    mb: 1,\r\n                    backgroundColor: 'background.paper'\r\n                  }}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Box sx={{ color: fileType.color }}>\r\n                      {fileType.icon}\r\n                    </Box>\r\n                  </ListItemIcon>\r\n                  \r\n                  <ListItemText\r\n                    primary={file.name}\r\n                    secondary={\r\n                      <Box>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {formatFileSize(file.size)} • {fileType.extension.toUpperCase()}\r\n                        </Typography>\r\n                        <br />\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          Uploaded: {new Date(file.uploadDate).toLocaleDateString()}\r\n                        </Typography>\r\n                      </Box>\r\n                    }\r\n                  />\r\n                  \r\n                  <ListItemSecondaryAction>\r\n                    <Box sx={{ display: 'flex', gap: 1 }}>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handlePreviewFile(file)}\r\n                        title=\"Preview/Download\"\r\n                      >\r\n                        <Visibility />\r\n                      </IconButton>\r\n                      \r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleDownloadFile(file)}\r\n                        title=\"Download\"\r\n                      >\r\n                        <Download />\r\n                      </IconButton>\r\n                      \r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        onClick={() => handleDeleteFile(file.id)}\r\n                        title=\"Delete\"\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n      )}\r\n\r\n      {/* File Preview Dialog */}\r\n      <Dialog\r\n        open={!!previewFile}\r\n        onClose={() => setPreviewFile(null)}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          File Preview: {previewFile?.name}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {previewFile && (\r\n            <Box sx={{ textAlign: 'center', p: 2 }}>\r\n              {getFileType(previewFile.name).types.includes('image') ? (\r\n                <img\r\n                  src={previewFile.url}\r\n                  alt={previewFile.name}\r\n                  style={{\r\n                    maxWidth: '100%',\r\n                    maxHeight: '500px',\r\n                    objectFit: 'contain'\r\n                  }}\r\n                />\r\n              ) : getFileType(previewFile.name).extension === 'pdf' ? (\r\n                <iframe\r\n                  src={previewFile.url}\r\n                  width=\"100%\"\r\n                  height=\"500px\"\r\n                  title={previewFile.name}\r\n                />\r\n              ) : (\r\n                <Typography>\r\n                  Preview not available for this file type\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setPreviewFile(null)}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => handleDownloadFile(previewFile)}\r\n            startIcon={<Download />}\r\n          >\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FileUpload;","import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Box,\r\n  Alert,\r\n  Avatar\r\n} from '@mui/material';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport FileUpload from '../../../components/common/FileUpload';\r\n\r\nconst priorityLevels = [\r\n  { value: 'low', label: 'Low', color: '#27ae60' },\r\n  { value: 'medium', label: 'Medium', color: '#f39c12' },\r\n  { value: 'high', label: 'High', color: '#e67e22' },\r\n  { value: 'urgent', label: 'Urgent', color: '#e74c3c' }\r\n];\r\n\r\nfunction TaskForm({ projects, teamMembers = [], onSubmit, initialTask = null }) {\r\n  const [formData, setFormData] = useState(\r\n    initialTask ? {\r\n      projectId: initialTask.projectId || '',\r\n      name: initialTask.name || '',\r\n      assignedTo: initialTask.assignedTo || '',\r\n      priority: initialTask.priority || 'medium',\r\n      dueDate: initialTask.dueDate ? new Date(initialTask.dueDate) : null,\r\n      description: initialTask.description || ''\r\n    } : {\r\n      projectId: '',\r\n      name: '',\r\n      assignedTo: '',\r\n      priority: 'medium',\r\n      dueDate: null,\r\n      description: ''\r\n    }\r\n  );\r\n  const [taskFiles, setTaskFiles] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleChange = (field) => (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [field]: event.target.value\r\n    });\r\n    if (errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setFormData({\r\n      ...formData,\r\n      dueDate: date\r\n    });\r\n    if (errors.dueDate) {\r\n      setErrors({\r\n        ...errors,\r\n        dueDate: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.projectId) {\r\n      newErrors.projectId = 'Please select a project';\r\n    }\r\n\r\n    if (!formData.name || !formData.name.trim()) {\r\n      newErrors.name = 'Task name is required';\r\n    }\r\n\r\n    if (!formData.assignedTo) {\r\n      newErrors.assignedTo = 'Please select a team member';\r\n    }\r\n\r\n    if (!formData.dueDate) {\r\n      newErrors.dueDate = 'Due date is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (validateForm()) {\r\n      const submitData = {\r\n        ...formData,\r\n        projectId: parseInt(formData.projectId),\r\n        assignedTo: parseInt(formData.assignedTo),\r\n        dueDate: formData.dueDate.toISOString().split('T')[0],\r\n        files: taskFiles\r\n      };\r\n      \r\n      if (initialTask) {\r\n        submitData.id = initialTask.id;\r\n      }\r\n      \r\n      onSubmit(submitData);\r\n      \r\n      // Only clear form if creating new task\r\n      if (!initialTask) {\r\n        setFormData({\r\n          projectId: '',\r\n          name: '',\r\n          assignedTo: '',\r\n          priority: 'medium',\r\n          dueDate: null,\r\n          description: ''\r\n        });\r\n        setTaskFiles([]);\r\n      }\r\n      \r\n      setSuccess(true);\r\n      setTimeout(() => setSuccess(false), 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n        {success && (\r\n          <Alert severity=\"success\">\r\n            Task added successfully!\r\n          </Alert>\r\n        )}\r\n        \r\n        <TextField\r\n          select\r\n          label=\"Select Project\"\r\n          value={formData.projectId}\r\n          onChange={handleChange('projectId')}\r\n          error={!!errors.projectId}\r\n          helperText={errors.projectId || (projects.length === 0 ? 'Create a project first' : '')}\r\n          fullWidth\r\n          required\r\n          disabled={projects.length === 0}\r\n        >\r\n          {projects.map((project) => (\r\n            <MenuItem key={project.id} value={project.id}>\r\n              {project.name} ({project.type})\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        <TextField\r\n          label=\"Task Name\"\r\n          value={formData.name}\r\n          onChange={handleChange('name')}\r\n          error={!!errors.name}\r\n          helperText={errors.name}\r\n          fullWidth\r\n          required\r\n        />\r\n\r\n        <TextField\r\n          select\r\n          label=\"Assigned To\"\r\n          value={formData.assignedTo || ''}\r\n          onChange={handleChange('assignedTo')}\r\n          error={!!errors.assignedTo}\r\n          helperText={errors.assignedTo || (teamMembers.length === 0 ? 'Add team members first' : '')}\r\n          fullWidth\r\n          required\r\n          disabled={teamMembers.length === 0}\r\n        >\r\n          {teamMembers.filter(member => member.status === 'active').map((member) => (\r\n            <MenuItem key={member.id} value={member.id}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <Avatar sx={{ width: 24, height: 24, fontSize: 12, bgcolor: member.roleColor }}>\r\n                  {member.initials}\r\n                </Avatar>\r\n                {member.fullName} - {member.role}\r\n              </Box>\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        <TextField\r\n          select\r\n          label=\"Priority\"\r\n          value={formData.priority}\r\n          onChange={handleChange('priority')}\r\n          fullWidth\r\n          required\r\n        >\r\n          {priorityLevels.map((priority) => (\r\n            <MenuItem \r\n              key={priority.value} \r\n              value={priority.value}\r\n              sx={{ \r\n                borderLeft: `4px solid ${priority.color}`,\r\n                marginBottom: 0.5\r\n              }}\r\n            >\r\n              {priority.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        <DatePicker\r\n          label=\"Due Date\"\r\n          value={formData.dueDate}\r\n          onChange={handleDateChange}\r\n          minDate={new Date()}\r\n          slotProps={{\r\n            textField: {\r\n              error: !!errors.dueDate,\r\n              helperText: errors.dueDate,\r\n              fullWidth: true,\r\n              required: true\r\n            }\r\n          }}\r\n        />\r\n\r\n        <TextField\r\n          label=\"Task Description\"\r\n          value={formData.description}\r\n          onChange={handleChange('description')}\r\n          multiline\r\n          rows={2}\r\n          fullWidth\r\n          placeholder=\"Optional task details...\"\r\n        />\r\n\r\n        <FileUpload\r\n          taskId={Date.now()}\r\n          projectId={formData.projectId}\r\n          files={taskFiles}\r\n          onFilesChange={setTaskFiles}\r\n          maxFiles={5}\r\n          maxSize={10}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          sx={{ mt: 2 }}\r\n          disabled={projects.length === 0}\r\n        >\r\n          {initialTask ? 'Save Changes' : 'Add Task'}\r\n        </Button>\r\n      </Box>\r\n    </LocalizationProvider>\r\n  );\r\n}\r\n\r\nexport default TaskForm;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","import React from 'react';\nimport { \n  Box, \n  Typography, \n  Breadcrumbs, \n  Link, \n  IconButton,\n  Paper,\n  Chip,\n  Tooltip,\n  useMediaQuery,\n  useTheme\n} from '@mui/material';\nimport { \n  Home,\n  Business,\n  ArrowBack,\n  NavigateNext,\n  Edit,\n  Delete,\n  Share,\n  MoreHoriz,\n  Star,\n  StarBorder\n} from '@mui/icons-material';\n\nconst UniversalBreadcrumb = ({ \n  // Navigation data\n  currentPath = [],\n  onNavigate,\n  \n  // Page info\n  title,\n  subtitle,\n  itemType, // 'project', 'task', 'team', 'client'\n  itemId,\n  itemData = {},\n  \n  // Actions\n  actions = [],\n  onEdit,\n  onDelete,\n  onShare,\n  showMoreActions = false,\n  \n  // Favorites\n  isStarred = false,\n  onToggleStar,\n  \n  // Mobile support\n  showBackButton = true,\n  \n  // Custom styling\n  backgroundColor = 'white',\n  elevation = 0\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  // Generate breadcrumb items\n  const generateBreadcrumbs = () => {\n    const breadcrumbs = [\n      {\n        label: 'Formula PM',\n        icon: <Home sx={{ fontSize: 16 }} />,\n        href: '/',\n        onClick: () => onNavigate && onNavigate('/')\n      },\n      {\n        label: 'Team Space',\n        icon: <Business sx={{ fontSize: 16 }} />,\n        href: '/dashboard',\n        onClick: () => onNavigate && onNavigate('/dashboard')\n      }\n    ];\n\n    // Add dynamic path items\n    currentPath.forEach((pathItem, index) => {\n      breadcrumbs.push({\n        label: pathItem.label,\n        href: pathItem.href,\n        onClick: () => onNavigate && onNavigate(pathItem.href),\n        isLast: index === currentPath.length - 1\n      });\n    });\n\n    return breadcrumbs;\n  };\n\n  const breadcrumbItems = generateBreadcrumbs();\n\n  // Handle back navigation\n  const handleBack = () => {\n    if (currentPath.length > 0) {\n      const previousPath = currentPath[currentPath.length - 1];\n      if (onNavigate && previousPath.href) {\n        onNavigate(previousPath.href);\n      } else {\n        window.history.back();\n      }\n    } else {\n      window.history.back();\n    }\n  };\n\n  // Action button configurations\n  const actionButtons = [\n    ...(actions || []),\n    ...(onEdit ? [{ \n      icon: <Edit />, \n      label: 'Edit', \n      onClick: onEdit,\n      color: 'primary'\n    }] : []),\n    ...(onShare ? [{ \n      icon: <Share />, \n      label: 'Share', \n      onClick: onShare,\n      color: 'default'\n    }] : []),\n    ...(onDelete ? [{ \n      icon: <Delete />, \n      label: 'Delete', \n      onClick: onDelete,\n      color: 'error'\n    }] : [])\n  ];\n\n  return (\n    <Paper\n      elevation={elevation}\n      sx={{\n        backgroundColor,\n        borderBottom: '1px solid #E9ECEF',\n        px: { xs: 2, md: 4 },\n        py: 3,\n        borderRadius: 0\n      }}\n    >\n      {/* Mobile Back Button */}\n      {isMobile && showBackButton && (\n        <Box sx={{ mb: 2 }}>\n          <IconButton \n            onClick={handleBack}\n            size=\"small\"\n            sx={{ \n              color: '#7F8C8D',\n              '&:hover': { color: '#2C3E50' }\n            }}\n          >\n            <ArrowBack />\n          </IconButton>\n        </Box>\n      )}\n\n      {/* Desktop Breadcrumbs */}\n      {!isMobile && (\n        <Breadcrumbs \n          separator={<NavigateNext fontSize=\"small\" />}\n          sx={{ \n            mb: 2, \n            fontSize: '0.875rem',\n            '& .MuiBreadcrumbs-separator': {\n              color: '#7F8C8D'\n            }\n          }}\n        >\n          {breadcrumbItems.map((crumb, index) => {\n            const isLast = index === breadcrumbItems.length - 1;\n            \n            if (isLast) {\n              return (\n                <Typography \n                  key={index}\n                  color=\"text.primary\" \n                  fontWeight={500}\n                  sx={{ \n                    color: '#2C3E50',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 0.5\n                  }}\n                >\n                  {crumb.icon}\n                  {crumb.label}\n                </Typography>\n              );\n            }\n\n            return (\n              <Link\n                key={index}\n                underline=\"hover\"\n                color=\"inherit\"\n                href={crumb.href || '#'}\n                onClick={(e) => {\n                  e.preventDefault();\n                  if (crumb.onClick) crumb.onClick();\n                }}\n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  gap: 0.5,\n                  color: '#7F8C8D',\n                  cursor: 'pointer',\n                  '&:hover': { color: '#2C3E50' }\n                }}\n              >\n                {crumb.icon}\n                {crumb.label}\n              </Link>\n            );\n          })}\n        </Breadcrumbs>\n      )}\n\n      {/* Main Header Section */}\n      <Box sx={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: { xs: 'flex-start', md: 'center' },\n        flexDirection: { xs: 'column', md: 'row' },\n        gap: { xs: 2, md: 0 }\n      }}>\n        {/* Left Side - Title and Info */}\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, flex: 1 }}>\n          {/* Title with Star */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <Typography \n              variant=\"h4\" \n              sx={{ \n                fontWeight: 700, \n                color: '#2C3E50',\n                fontSize: { xs: '1.5rem', md: '1.75rem' }\n              }}\n            >\n              {title}\n            </Typography>\n            \n            {onToggleStar && (\n              <Tooltip title={isStarred ? \"Remove from favorites\" : \"Add to favorites\"}>\n                <IconButton \n                  size=\"small\" \n                  onClick={onToggleStar}\n                  sx={{ \n                    color: isStarred ? '#F39C12' : '#BDC3C7',\n                    '&:hover': {\n                      color: isStarred ? '#E67E22' : '#F39C12'\n                    }\n                  }}\n                >\n                  {isStarred ? <Star /> : <StarBorder />}\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n\n          {/* Subtitle and Metadata */}\n          {(subtitle || itemData.status || itemData.type) && (\n            <Box sx={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: 1, \n              flexWrap: 'wrap',\n              ml: { xs: 0, md: 2 }\n            }}>\n              {subtitle && (\n                <Typography \n                  variant=\"body2\" \n                  sx={{ \n                    color: '#7F8C8D',\n                    fontSize: '0.9rem'\n                  }}\n                >\n                  {subtitle}\n                </Typography>\n              )}\n              \n              {itemData.status && (\n                <Chip \n                  label={itemData.status}\n                  size=\"small\"\n                  sx={{\n                    height: 24,\n                    fontSize: '0.75rem',\n                    backgroundColor: getStatusColor(itemData.status),\n                    color: 'white',\n                    fontWeight: 600\n                  }}\n                />\n              )}\n              \n              {itemData.type && (\n                <Chip \n                  label={itemData.type}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  sx={{\n                    height: 24,\n                    fontSize: '0.75rem',\n                    borderColor: '#D5DBDB',\n                    color: '#7F8C8D'\n                  }}\n                />\n              )}\n            </Box>\n          )}\n        </Box>\n\n        {/* Right Side - Actions */}\n        {actionButtons.length > 0 && (\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: 1.5,\n            flexShrink: 0\n          }}>\n            {actionButtons.slice(0, isMobile ? 2 : 4).map((action, index) => (\n              <Tooltip key={index} title={action.label}>\n                <IconButton \n                  onClick={action.onClick}\n                  size=\"small\"\n                  sx={{ \n                    backgroundColor: action.color === 'primary' ? '#3498DB' : '#F8F9FA',\n                    color: action.color === 'primary' ? 'white' : \n                           action.color === 'error' ? '#E74C3C' : '#7F8C8D',\n                    border: action.color === 'primary' ? 'none' : '1px solid #E9ECEF',\n                    borderRadius: 2,\n                    width: 36,\n                    height: 36,\n                    '&:hover': { \n                      backgroundColor: action.color === 'primary' ? '#2980B9' :\n                                     action.color === 'error' ? '#fadbd8' : '#ECF0F1',\n                      transform: 'translateY(-1px)',\n                      boxShadow: action.color === 'primary' ? '0 4px 12px rgba(52, 152, 219, 0.3)' : 'none'\n                    }\n                  }}\n                >\n                  {action.icon}\n                </IconButton>\n              </Tooltip>\n            ))}\n            \n            {(actionButtons.length > (isMobile ? 2 : 4) || showMoreActions) && (\n              <Tooltip title=\"More options\">\n                <IconButton \n                  size=\"small\"\n                  sx={{ \n                    backgroundColor: '#F8F9FA',\n                    border: '1px solid #E9ECEF',\n                    borderRadius: 2,\n                    width: 36,\n                    height: 36,\n                    '&:hover': { \n                      backgroundColor: '#ECF0F1',\n                      border: '1px solid #D5DBDB'\n                    }\n                  }}\n                >\n                  <MoreHoriz sx={{ fontSize: 18 }} />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n        )}\n      </Box>\n    </Paper>\n  );\n};\n\n// Helper function to get status colors\nconst getStatusColor = (status) => {\n  const statusColors = {\n    'completed': '#27AE60',\n    'active': '#8E44AD',\n    'in-progress': '#F39C12',\n    'in_progress': '#F39C12',\n    'pending': '#3498DB',\n    'on-hold': '#E67E22',\n    'on_hold': '#E67E22',\n    'cancelled': '#E74C3C',\n    'awarded': '#27AE60',\n    'on-tender': '#3498DB',\n    'on_tender': '#3498DB',\n    'not-awarded': '#E74C3C',\n    'not_awarded': '#E74C3C'\n  };\n  \n  return statusColors[status?.toLowerCase()] || '#95A5A6';\n};\n\nexport default UniversalBreadcrumb;","import React, { useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport UniversalBreadcrumb from '../ui/UniversalBreadcrumb';\nimport { useNavigation } from '../../context';\n\nconst PageWrapper = ({ \n  // Page identification\n  pageType,\n  pageTitle,\n  pageData = {},\n  \n  // Navigation\n  parentPath,\n  onNavigate,\n  \n  // Breadcrumb customization\n  subtitle,\n  actions = [],\n  \n  // Favorites\n  isStarred = false,\n  onToggleStar,\n  \n  // Action handlers\n  onEdit,\n  onDelete,\n  onShare,\n  \n  // Content\n  children,\n  \n  // Styling\n  showBreadcrumb = true,\n  breadcrumbElevation = 0,\n  contentPadding = 3\n}) => {\n  const { navigateTo, getBreadcrumbConfig } = useNavigation();\n\n  // Update navigation context when page loads\n  useEffect(() => {\n    if (pageType && pageTitle) {\n      navigateTo({\n        title: pageTitle,\n        path: window.location.pathname,\n        type: pageType,\n        parentPath,\n        data: pageData\n      });\n    }\n  }, [pageType, pageTitle, parentPath, pageData, navigateTo]);\n\n  // Handle navigation events\n  const handleNavigate = (path) => {\n    if (onNavigate) {\n      onNavigate(path);\n    } else {\n      // Default navigation behavior - update URL and trigger route change\n      window.history.pushState({}, '', path);\n      // You might want to trigger a route change event here\n      // depending on your routing solution\n    }\n  };\n\n  const breadcrumbConfig = getBreadcrumbConfig();\n\n  return (\n    <Box sx={{ minHeight: '100vh', backgroundColor: '#F8F9FA' }}>\n      {/* Universal Breadcrumb */}\n      {showBreadcrumb && (\n        <UniversalBreadcrumb\n          currentPath={breadcrumbConfig.currentPath}\n          title={pageTitle}\n          subtitle={subtitle}\n          itemType={pageType}\n          itemData={pageData}\n          actions={actions}\n          isStarred={isStarred}\n          onToggleStar={onToggleStar}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onShare={onShare}\n          onNavigate={handleNavigate}\n          elevation={breadcrumbElevation}\n        />\n      )}\n\n      {/* Page Content */}\n      <Box sx={{ p: contentPadding }}>\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default PageWrapper;"],"names":["_ref","task","projects","teamMembers","onSubmit","onCancel","isEdit","pageTitle","pageType","pageData","taskId","id","taskName","name","projectId","status","priority","_jsx","PageWrapper","subtitle","concat","onNavigate","path","contentPadding","children","Box","sx","maxWidth","mx","backgroundColor","borderRadius","border","p","TaskForm","initialTask","createSvgIcon","d","fileTypeConfig","image","icon","Image","color","types","pdf","PictureAsPdf","document","Description","default","InsertDriveFile","files","onFilesChange","maxFiles","maxSize","dragOver","setDragOver","useState","uploading","setUploading","previewFile","setPreviewFile","error","setError","fileInputRef","useRef","getFileType","fileName","extension","split","pop","toLowerCase","type","config","Object","entries","includes","_objectSpread","formatFileSize","bytes","i","Math","floor","log","parseFloat","pow","toFixed","validateFile","file","size","length","some","f","handleFileSelect","selectedFiles","fileList","Array","from","validFiles","errorMsg","validation","push","setTimeout","newFiles","map","Date","now","random","uploadDate","toISOString","url","URL","createObjectURL","handleDownloadFile","link","createElement","href","download","body","appendChild","click","removeChild","_jsxs","Alert","severity","mb","Paper","cursor","transition","textAlign","onDrop","e","preventDefault","droppedFiles","dataTransfer","onDragOver","onDragLeave","onClick","_fileInputRef$current","current","CloudUpload","fontSize","Typography","variant","gutterBottom","ref","multiple","style","display","onChange","target","accept","LinearProgress","alignItems","gap","AttachFile","List","fileType","ListItem","borderColor","ListItemIcon","ListItemText","primary","secondary","toUpperCase","toLocaleDateString","ListItemSecondaryAction","IconButton","handlePreviewFile","title","Visibility","Download","fileId","updatedFiles","filter","handleDeleteFile","Delete","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","src","alt","maxHeight","objectFit","width","height","DialogActions","Button","startIcon","priorityLevels","value","label","formData","setFormData","assignedTo","dueDate","description","taskFiles","setTaskFiles","errors","setErrors","success","setSuccess","handleChange","field","event","LocalizationProvider","dateAdapter","AdapterDateFns","component","validateForm","newErrors","trim","keys","submitData","parseInt","flexDirection","TextField","select","helperText","required","disabled","project","MenuItem","member","Avatar","bgcolor","roleColor","initials","fullName","role","borderLeft","marginBottom","DatePicker","date","minDate","slotProps","textField","multiline","rows","placeholder","FileUpload","mt","getStatusColor","currentPath","itemType","itemId","itemData","actions","onEdit","onDelete","onShare","showMoreActions","isStarred","onToggleStar","showBackButton","elevation","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","breadcrumbItems","generateBreadcrumbs","breadcrumbs","Home","Business","forEach","pathItem","index","isLast","actionButtons","Edit","Share","borderBottom","px","xs","md","py","handleBack","previousPath","window","history","back","ArrowBack","Breadcrumbs","separator","NavigateNext","crumb","fontWeight","Link","underline","justifyContent","flex","Tooltip","Star","StarBorder","flexWrap","ml","Chip","flexShrink","slice","action","transform","boxShadow","MoreHoriz","parentPath","showBreadcrumb","breadcrumbElevation","navigateTo","getBreadcrumbConfig","useNavigation","useEffect","location","pathname","data","breadcrumbConfig","minHeight","UniversalBreadcrumb","pushState"],"sourceRoot":""}